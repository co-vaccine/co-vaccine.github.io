{"version":3,"sources":["redux/user/user.types.js","redux/user/user.actions.js","main/cowin/components/vaccinesessions/VaccineSessionTable.jsx","main/cowin/components/google/analytics/GoogleAnalyticsEventTracker.jsx","main/cowin/components/google/WhatsAppButtonRender.jsx","main/cowin/components/google/WhatsAppSubscribeManager.jsx","redux/centers/center.types.js","redux/centers/center.actions.js","main/cowin/components/google/GoogleLoginButton.jsx","main/cowin/components/google/TrackingPinCodes.jsx","main/cowin/static/images/map.jpg","main/cowin/components/google/GoogleMapComponent.jsx","main/cowin/components/vaccinesessions/CowinRequestManager.jsx","main/cowin/components/vaccinesessions/IndexDbManager.jsx","main/cowin/components/google/analytics/SyncPinCodeManager.jsx","main/cowin/components/modal/NoteModal.jsx","main/cowin/components/footer/Footer.jsx","main/cowin/components/vaccinesessions/GetVaccineSession.jsx","main/cowin/components/app/App.js","serviceWorkerRegistration.ts","reportWebVitals.ts","redux/user/userReducer.js","redux/position/position.types.js","redux/position/position.reducer.js","redux/centers/centerReducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["UserActionTypes","setToken","token","type","payload","setSubscriptions","subscriptions","VaccineSessionTable","state","week","map","it","moment","add","format","date","this","setState","className","props","vaccine","centers","length","Table","striped","bordered","hover","day","name","Badge","variant","fee_type","address","block_name","district_name","state_name","pincode","index","sessions","findIndex","session","min_age_limit","available_capacity","href","Constant","COWIN_REGISTRATION","target","rel","Button","data-toggle","data-placement","title","session_id","Math","random","center_id","Component","connect","user","dispatch","GoogleAnalyticsEventTracker","category","action","label","ReactGA","event","WhatsAppButtonRender","renderProps","onClick","disabled","icon","size","text","WhatsAppSubscribeManager","mobile_number","is_valid_mobile","show_mobile_input","submitting_mobile","options","headers","GetButton","includes","SUBSCRIPTION_WA","OnWaSubscriptionBtnToggle","bind","OnMobileChange","OnSubmitMobile","IsSubscriptionContainsWa","axios","post","config","BACKEND_BASE_URL","BackendUrls","NOTIFICATION_SUBSCRIBED_URL","then","res","data","subscription","callback","push","catch","error","console","log","NOTIFICATION_UNSUBSCRIBED_URL","indexOf","pop","number","value","replace","FormControl","placeholder","onChange","varient","style","width","CenterActionTypes","setTrackingCenters","GoogleLoginButton","is_google_login_supported","GaEventTracker","responseGoogle","response","accessToken","exchangeToken","GET_TOKEN_URL","getUser","onSubscriptionResponseCallback","clientId","GMAIL_API_CLIENT_ID","render","buttonText","onSuccess","onFailure","cookiePolicy","isSignedIn","setTrackingCenter","TrackingPinCodes","tracking_centers","t_center","pin_code","removeFromTracking","top","right","height","MyLocationComponent","borderRadius","border","GoogleMapComponent","my_position","lat","lng","map_center","map_zoom","selected_center","maps_data","show_map","markers","HandleApiLoaded","maps","OnMouseHoverOnHospital","OnClickCenterBox","LocateMyPosition","RemoveAllMarkersFromMap","getMyPositionFromNavigator","is_centers_updated","setCentersUpdateDone","UpdateMarkers","setTimeout","DrawMarkersOnMap","forEach","marker","setMap","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","hoverKey","childProps","center","unique_positions","long","up","Marker","color","fontWeight","addListener","setAnimation","Animation","BOUNCE","SetActiveCenterBox","warn","destination","directionsService","DirectionsService","directionsRenderer","DirectionsRenderer","request","origin","travelMode","TravelMode","DRIVING","route","status","setDirections","$","removeClass","addClass","Row","Col","md","bootstrapURLKeys","key","GOOGLE_MAP_API","language","defaultCenter","defaultZoom","zoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","onChildMouseEnter","bottom","src","mapImage","alt","background","maxHeight","overflowY","is_server_up","id","GetFormattedDate","SetDirection","fontSize","isTrackingContains","addToTracking","GetCenters","url","fetch","json","DBConfig","version","DB_VERSION","objectStoresMeta","store","storeConfig","keyPath","storeSchema","keypath","unique","GetAllCenters","getAll","useIndexedDB","AddCenter","pinCode","SyncPinCodeManager","IsTrackingContains","RemoveFromTracking","RemovePinCodeFromBackend","SetTrackingCentersFromDbIndex","SyncPinCodeWithBackend","GetUser","AddToTracking","item","GET_USER_INFO","SYNC_PIN_CODE_URL","pin_codes","p","clear","REMOVE_PIN_CODE_URL","debug","deleteRecord","RemoveCenter","tracking_center","i","e","AddCentersToBackend","ADD_PIN_CODE_URL","NoteModal","showModal","handleClose","textBody","Modal","show","onHide","Header","closeButton","Title","Body","Footer","is_valid_feedback","is_feedback_btn_disabled","feedback_text","OnSubmitFeedback","OnChangeFeedback","USER_FEEDBACK","feedback","padding","initialize","GOOGLE_ANALYTICS_UA","GetVaccineSession","is_unmounted","district_id","is_valid_pin_code","vaccine_date","states","districts","show_modal","modal_text","can_show_tracking_center_button","pageview","window","location","pathname","search","GetState","OnChangeState","OnChangeDate","OnChangePinCode","OnChangeDistrictCode","OnChangeVaccine","SelectVaccinesWithDate","OnSubmitPinCode","OnSubmitDistrict","OnGetCenterCallback","OnLogout","closeModal","CheckHealth","HEALTH_CHECK","setServerStat","undefined","get","COWIN_BASE_URL","CUrl","GET_STATES","err","GET_DISTRICT","code","CALENDAR_BY_PIN_CODE","CALENDAR_BY_DISTRICT","setCenters","GetVaccineSessionChild","current","COVAXIN","COVISHIELD","LOGOUT_URL","Container","Tabs","defaultActiveKey","transition","Tab","eventKey","parseInt","state_id","stat","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","openDBRequest","open","onupgradeneeded","database","result","objectStoreNames","contains","oldVersion","deleteObjectStore","createObjectStore","createIndex","onsuccess","deleteDatabase","deleteIfOldDatabase","initDB","App","is_notification_granted","top_notification_content","OnNotificationPermissionChange","IsPushNotificationSupported","Notification","permission","requestPermission","r","path","exact","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","waiting","postMessage","onstatechange","controller","onUpdate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","userReducer","PositionActionTypes","positionReducer","centerReducer","combineReducers","persistConfig","storage","blacklist","persistedReducer","persistReducer","rootReducer","createStore","persist_store","persistStore","library","fab","faUser","faCoffee","faAddressBook","faLocationArrow","faSearchLocation","faEdit","faTrash","faClinicMedical","faWhatsapp","faCommentDots","ReactDOM","StrictMode","loading","persistor","document","getElementById","URL","process","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.772ab808.chunk.js","sourcesContent":["export const UserActionTypes = {\n    SET_USER_TOKEN: 'SET_USER_TOKEN',\n    SET_SERVER_STAT: 'SET_SERVER_STAT',\n    SET_USER_SUBSCRIPTION: 'SET_USER_SUBSCRIPTION'\n}","import { UserActionTypes } from \"./user.types\";\n\nexport const setToken = token => (\n    {\n        type: UserActionTypes.SET_USER_TOKEN,\n        payload:token\n    }\n)\n\nexport const setSubscriptions = subscriptions => (\n    {\n        type: UserActionTypes.SET_USER_SUBSCRIPTION,\n        payload:subscriptions\n    }\n)\n\nexport const setServerStat = stat => (\n    {\n        type: UserActionTypes.SET_SERVER_STAT,\n        payload: stat\n    }\n)\n","import React, {Component} from 'react';\nimport {Badge, Button, Table} from \"react-bootstrap\";\nimport moment from \"moment\";\nimport Constant from \"../../constants/Constant.json\";\nimport {setToken} from \"../../../../redux/user/user.actions\";\nimport {connect} from \"react-redux\";\n\nclass VaccineSessionTable extends Component {\n    state = {\n        week: [0 ,1, 2, 3, 4, 5, 6].map(it=> moment().add(it, 'day').format(\"DD-MM-YY\"))\n    }\n\n    OnChangeDate(date){\n        this.setState({\n            week: [0 ,1, 2, 3, 4, 5, 6].map(it=> moment(date, 'YYYY-MM-DD').add(it, 'day').format(\"DD-MM-YY\"))\n        })\n    }\n\n    render() {\n        return (\n            <div className={\"bg-white shadow rounded-lg mt-2 overflow-hidden p-0\"}>\n                {\n                    this.props.vaccine.centers.length > 0 &&\n                    <Table striped bordered hover>\n                        <thead>\n                        <tr>\n                            <th>Name</th>\n                            {\n                                this.state.week.map(day =>\n                                    <th key={\"th-\" + day}>{day}</th>\n                                )\n                            }\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            this.props.vaccine.centers.map(it =>\n                                <tr key={it.center_id}>\n                                    <td>\n                                        <div>\n                                            <div className={\"font-weight-bolder\"}>\n                                                {it.name}\n                                                <sup className={\"small\"}>\n                                                    {' '}<Badge variant=\"secondary\">{it.fee_type}</Badge>\n                                                </sup>\n                                            </div>\n                                            <p className={\"text-secondary small m-0\"}>{it.address}, {it.block_name}</p>\n                                            <p className={\"text-secondary small m-0\"}>{it.district_name}, {it.state_name}, {it.pincode}</p>\n                                        </div>\n                                    </td>\n                                    {\n                                        this.state.week.map(date => {\n                                            let index = it.sessions.findIndex(session => session.date === moment(date, 'DD-MM-YY').format('DD-MM-YYYY'));\n                                            if (index >= 0) {\n                                                return (\n                                                    <td key={it.sessions[index].session_id}>\n                                                        <div>\n                                                            {/*{it.sessions[index].session_id}*/}\n                                                            <span className={\"\"}>{it.sessions[index].vaccine}</span>\n                                                            <p className={\"small m-0 text-danger\"}>For {it.sessions[index].min_age_limit}+</p>\n                                                            {\n                                                                it.sessions[index].available_capacity ?\n                                                                        <a href={Constant.COWIN_REGISTRATION}\n                                                                           target=\"_blank\" rel=\"noreferrer\">\n                                                                            <Button variant={\"success p-1\"}\n                                                                                    data-toggle=\"tooltip\"\n                                                                                    data-placement=\"top\"\n                                                                                    title=\"Tooltip on top\">\n                                                                                Book <sup><Badge\n                                                                                variant={\"primary\"}>{it.sessions[index].available_capacity}</Badge></sup>\n                                                                            </Button>\n                                                                        </a> :\n                                                                    <Button variant={\"danger p-0\"}>Booked</Button>\n                                                            }\n                                                        </div>\n                                                    </td>\n                                                );\n                                            } else {\n                                                return (<td key={Math.random()}/>);\n                                            }\n                                        })\n                                    }\n                                </tr>\n                            )\n                        }\n                        </tbody>\n                    </Table>\n                }\n                {\n                    this.props.vaccine.centers.length <=0 && <div className=\"text-center font-weight-bold p-4\">No centers are available for now, try to search for another pin code.</div>\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ user, vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (VaccineSessionTable);\n","import ReactGA from \"react-ga\";\n\nconst GoogleAnalyticsEventTracker = ( category = \"Event Category\") => {\n    return (action =\"action\", label=\"label\") => {\n        ReactGA.event({category, action, label})\n    };\n}\n\nexport default GoogleAnalyticsEventTracker;","import {Button} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nexport const WhatsAppButtonRender = (renderProps) => (\n    <Button onClick={renderProps.onClick} disabled={renderProps.disabled} variant={\"primary\"} className={\"shadow my-1\"}>\n        <FontAwesomeIcon icon={'comment-dots'} size={\"3x\"} />\n        <div>\n            {\n                renderProps.text ||\n                \"Login and subscribe SMS notification\"\n            }\n        </div>\n    </Button>\n)","import React, {Component} from 'react';\nimport {WhatsAppButtonRender} from \"./WhatsAppButtonRender\";\nimport {setSubscriptions} from \"../../../../redux/user/user.actions\";\nimport {connect} from \"react-redux\";\nimport config from \"../../config.json\";\nimport BackendUrls from \"../../constants/BackendUrls.json\";\nimport axios from \"axios\";\nimport Constant from \"../../constants/Constant.json\";\nimport {Button, FormControl} from \"react-bootstrap\";\n\nclass WhatsAppSubscribeManager extends Component {\n    state={\n        mobile_number: \"\",\n        is_valid_mobile: false,\n        show_mobile_input: false,\n        submitting_mobile: false\n    }\n\n    options = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Token ' + this.props.user.token\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.OnWaSubscriptionBtnToggle = this.OnWaSubscriptionBtnToggle.bind(this);\n        this.OnMobileChange = this.OnMobileChange.bind(this);\n        this.OnSubmitMobile = this.OnSubmitMobile.bind(this);\n    }\n\n    IsSubscriptionContainsWa(){\n        return this.props.user.subscriptions && this.props.user.subscriptions.includes(Constant.SUBSCRIPTION_WA);\n    }\n\n    OnSubmitMobile() {\n        if (this.IsSubscriptionContainsWa()) return;\n        this.setState({\n            submitting_mobile: true\n        })\n\n        const payload = {\n            'subscription': Constant.SUBSCRIPTION_WA,\n            'mobile': this.state.mobile_number\n        }\n        axios.post(config.BACKEND_BASE_URL + BackendUrls.NOTIFICATION_SUBSCRIBED_URL, payload, this.options)\n            .then(res => {\n                if (res.data[\"status\"] === \"success\" || res.data[\"message\"] === \"you already subscribed\") {\n                    let subscription = this.props.user.subscriptions;\n                    this.props.callback && this.props.callback(res.data[\"message\"]);\n                    if(subscription) {\n                        subscription.push(Constant.SUBSCRIPTION_WA);\n                        this.props.setSubscriptions(subscription);\n                    }\n                }else {\n                    this.setState({\n                        submitting_mobile: false,\n                        show_mobile_input: false\n                    })\n                }\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({\n                    submitting_mobile: false\n                })\n            });\n    }\n\n    OnWaSubscriptionBtnToggle(){\n        if(this.IsSubscriptionContainsWa()){\n            const payload = {\n                'subscription': Constant.SUBSCRIPTION_WA,\n            }\n\n            axios.post(config.BACKEND_BASE_URL + BackendUrls.NOTIFICATION_UNSUBSCRIBED_URL, payload, this.options)\n                .then(res => {\n                    if (res.data[\"status\"] === \"success\") {\n                        let subscription = this.props.user.subscriptions;\n                        if(subscription) {\n                            subscription[subscription.indexOf(Constant.SUBSCRIPTION_WA)] = subscription[subscription.length - 1]\n                            subscription.pop();\n                            this.props.setSubscriptions(subscription);\n                        }\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n        else {\n            this.setState({\n                show_mobile_input: true\n            })\n        }\n    }\n\n    OnMobileChange(event){\n        let number = event.target.value.replace(/^0+/, '')\n        this.setState({\n            mobile_number: number,\n            is_valid_mobile: event.target.value.length === 10\n        })\n    }\n\n    GetButton = () => {\n        if(this.props.user.subscriptions && this.props.user.subscriptions.includes(Constant.SUBSCRIPTION_WA))\n        {\n            return (<WhatsAppButtonRender text={\"Unsubscribe text SMS notification\"}\n                                  onClick={this.OnWaSubscriptionBtnToggle}/>);\n        }\n        return (<WhatsAppButtonRender text={\"Subscribe text SMS notification\"} onClick={this.OnWaSubscriptionBtnToggle}/>);\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.show_mobile_input?\n                        <div className={\"shadow rounded-lg p-1 border-primary border\"}>\n                            <FormControl className={\"no-input-shadow\"}\n                                         placeholder={\"Enter mobile number\"}\n                                         type={\"number\"}\n                                         value={this.state.mobile_number}\n                                         onChange={this.OnMobileChange}\n                                         disabled={this.state.submitting_mobile}\n                            />\n                            <Button varient={\"primary\"} style={{width: \"100%\"}} className={\"mt-2\"} disabled={!this.state.is_valid_mobile || this.state.submitting_mobile} onClick={this.OnSubmitMobile}> Subscribe SMS </Button>\n                        </div>: <this.GetButton />\n                }\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ user }) => (\n    {\n        user: user\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setSubscriptions: subscriptions => dispatch(setSubscriptions(subscriptions)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (WhatsAppSubscribeManager);\n","export const CenterActionTypes = {\n    SET_CENTERS: \"SET_CENTERS\",\n    SET_TRACKING_CENTER: \"SET_TRACKING_CENTER\",\n    CENTER_UPDATE_DONE: \"CENTER_UPDATE_DONE\"\n}","import { CenterActionTypes } from \"./center.types\";\n\nexport const setCenters = centers => (\n    {\n        type: CenterActionTypes.SET_CENTERS,\n        payload: centers\n    }\n)\n\n\nexport const setTrackingCenters = centers => (\n    {\n        type: CenterActionTypes.SET_TRACKING_CENTER,\n        payload: centers\n    }\n)\n\nexport const setCentersUpdateDone = () => (\n    {\n        type: CenterActionTypes.CENTER_UPDATE_DONE,\n        is_centers_updated: false\n    }\n)","import React, {Component} from 'react';\nimport GoogleLogin from \"react-google-login\";\nimport config from \"../../config.json\";\nimport BackendUrls from \"../../constants/BackendUrls.json\";\nimport {WhatsAppButtonRender} from \"./WhatsAppButtonRender\";\nimport axios from \"axios\";\nimport {setSubscriptions, setToken} from \"../../../../redux/user/user.actions\";\nimport {connect} from \"react-redux\";\nimport WhatsAppSubscribeManager from \"./WhatsAppSubscribeManager\";\nimport {setTrackingCenters} from \"../../../../redux/centers/center.actions\";\nimport GoogleAnalyticsEventTracker from \"./analytics/GoogleAnalyticsEventTracker\";\n\nclass GoogleLoginButton extends Component {\n\n    state = {\n        is_google_login_supported: true,\n    }\n\n    GaEventTracker = GoogleAnalyticsEventTracker();\n\n    constructor(props) {\n        super(props);\n        this.responseGoogle = this.responseGoogle.bind(this);\n        this.exchangeToken = this.exchangeToken.bind(this);\n    }\n\n    exchangeToken(accessToken){\n        const options = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        };\n\n        axios.post(config.BACKEND_BASE_URL + BackendUrls.GET_TOKEN_URL, {\"access_token\": accessToken}, options)\n            .then(res => {\n                this.props.setToken(res.data[\"token\"]);\n                this.props.getUser();\n            })\n            .catch(error => {\n                this.GaEventTracker(\"Fail GET User\", error);\n                console.log(error);\n            });\n    }\n\n    responseGoogle = (response) => {\n        this.GaEventTracker(\"AUTH 2.0 success\");\n        if(response.error === \"idpiframe_initialization_failed\"){\n            this.setState({\n                is_google_login_supported: false\n            })\n        }\n\n        if(response.accessToken) {\n            this.exchangeToken(response.accessToken);\n        }\n    }\n\n    render() {\n        if(this.state.is_google_login_supported) {\n            if (!this.props.user.token) {\n                return (\n                    <GoogleLogin\n                        clientId={config.GMAIL_API_CLIENT_ID}\n                        render={WhatsAppButtonRender}\n                        buttonText=\"Login\"\n                        onSuccess={this.responseGoogle}\n                        onFailure={this.responseGoogle}\n                        cookiePolicy={'single_host_origin'}\n                        isSignedIn={true}\n                    />\n                );\n            } else {\n                return <WhatsAppSubscribeManager callback={this.props.onSubscriptionResponseCallback} />\n            }\n        }\n        else{\n            return (\n                <div className=\"bg-white rounded-lg p-2 shadow btn my-1\">\n                    Google Login not supported, please try another browser or close icognito mode.\n                </div>\n            );\n        }\n    }\n}\n\n\nconst mapStateToProps = ({ user,vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token)),\n    setSubscriptions: subscriptions => dispatch(setSubscriptions(subscriptions)),\n    setTrackingCenter: centers => dispatch(setTrackingCenters(centers))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (GoogleLoginButton);\n","import React, {Component} from 'react';\nimport {Button} from \"react-bootstrap\";\nimport {connect} from \"react-redux\";\nimport {setTrackingCenters} from \"../../../../redux/centers/center.actions\";\n\nclass TrackingPinCodes extends Component {\n    componentDidMount() {\n        // this.SetTrackingCenters();\n    }\n\n    render() {\n        return (\n            <div className={\"shadow p-1 rounded-lg bg-white my-1\"}>\n                {\n                    this.props.vaccine.tracking_centers && this.props.vaccine.tracking_centers.length > 0?\n                        <h6 className={\"font-weight-bold btn\"}> Tracking pin codes 18-45</h6>:\n                        <h6 className={\"font-weight-bold btn\"}> No notification trackers </h6>\n                }\n                <hr />\n                {\n                    this.props.vaccine.tracking_centers && this.props.vaccine.tracking_centers.map(t_center =>{\n                        return (\n                            <div className={\"rounded p-2 m-1 font-weight-bold bg-cowin2 position-relative overflow-hidden\"} key={\"center-tr-\" + t_center.pin_code}>\n                                {t_center.pin_code}\n                                <Button variant={\"danger\"} onClick={() => {\n                                    this.props.removeFromTracking(t_center.pin_code)\n                                }} className={\"float-right  position-absolute rounded-0\"} style={{top:0, right:0, height:\"100%\"}}> X </Button>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ user, vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setTrackingCenters: centers => dispatch(setTrackingCenters(centers))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (TrackingPinCodes);\n","export default __webpack_public_path__ + \"static/media/map.4ffa6cad.jpg\";","import React, {Component} from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport {Badge, Button, Col, Row} from \"react-bootstrap\";\nimport Constant from \"../../constants/Constant.json\";\nimport $ from 'jquery';\nimport moment from \"moment\";\nimport GoogleAnalyticsEventTracker from \"../google/analytics/GoogleAnalyticsEventTracker\";\nimport GoogleLoginButton from \"./GoogleLoginButton\";\nimport TrackingPinCodes from \"./TrackingPinCodes\";\nimport {setToken} from \"../../../../redux/user/user.actions\";\nimport {connect} from \"react-redux\";\nimport {setCentersUpdateDone, setTrackingCenters} from \"../../../../redux/centers/center.actions\";\nimport config from \"../../config.json\";\nimport mapImage from \"../../static/images/map.jpg\";\n\nconst MyLocationComponent = () => <div>\n    <div className=\"bg-primary\" style={{height:18, width:18, borderRadius:18, border:\"2px solid #fff\"}}>\n    </div>\n</div>;\n\nclass GoogleMapComponent extends Component {\n\n    state = {\n        my_position: {lat: 12.97, lng: 77.59},\n        map_center: {lat: 12.97, lng: 77.59},\n        map_zoom: 10,\n        selected_center: {},\n        maps_data: {},\n        show_map: false,\n        markers: [],\n    }\n\n    GaEventTracker = GoogleAnalyticsEventTracker();\n\n    constructor(props) {\n        super(props);\n        this.OnMouseHoverOnHospital = this.OnMouseHoverOnHospital.bind(this);\n        this.OnClickCenterBox = this.OnClickCenterBox.bind(this);\n        this.LocateMyPosition = this.LocateMyPosition.bind(this);\n        this.RemoveAllMarkersFromMap = this.RemoveAllMarkersFromMap.bind(this);\n        this.getMyPositionFromNavigator = this.getMyPositionFromNavigator.bind(this);\n    }\n\n    componentDidUpdate() {\n        if(this.props.vaccine.is_centers_updated){\n            this.props.setCentersUpdateDone();\n            this.UpdateMarkers();\n        }\n    }\n\n    UpdateMarkers() {\n        if(!this.state.show_map && this.props.vaccine.centers.length > 0) {\n            this.setState({\n                show_map: true\n            })\n            this.getMyPositionFromNavigator();\n        }\n\n        this.GaEventTracker(\"Google map marker update\");\n        this.RemoveAllMarkersFromMap();\n        setTimeout(() => {this.DrawMarkersOnMap()}, 500);\n    }\n\n    RemoveAllMarkersFromMap(){\n        this.state.markers.forEach(marker => {\n            marker.setMap(null);\n        })\n        this.setState({\n            markers: []\n        })\n    }\n\n    getMyPositionFromNavigator() {\n        navigator.geolocation.getCurrentPosition((position) => {\n            this.setState({\n                my_position: { lat:position.coords.latitude, lng: position.coords.longitude},\n                map_center: { lat:position.coords.latitude, lng: position.coords.longitude},\n            })\n        });\n    }\n\n    LocateMyPosition(){\n        this.setState({\n            map_center: this.state.my_position,\n            map_zoom: 11,\n        })\n    }\n\n    OnMouseHoverOnHospital(hoverKey, childProps){\n        if(! (childProps.center && childProps.center.name)) return;\n        this.setState({selected_center: childProps.center})\n    }\n\n    HandleApiLoaded = (map, maps) => {\n        this.setState({\n            maps_data: {\n                map: map,\n                maps: maps\n            }\n        })\n    }\n\n    DrawMarkersOnMap(){\n        if(!this.state.maps_data.map) {\n            console.warn(\"Map is not ready yet\");\n            return;\n        }\n        let unique_positions = [];\n        this.props.vaccine.centers.forEach(it => {\n            let position = { lat: it.lat, lng: it.long};\n            if(unique_positions.findIndex( up => up.lat === it.lat && up.lng === it.long) >= 0) return;\n            unique_positions.push(position);\n\n            let map = this.state.maps_data.map;\n            let marker = new this.state.maps_data.maps.Marker({\n                position: position,\n                // animation: maps.Animation.DROP,\n                map,\n                // icon: {\n                //     url: \"https://atlas-content-cdn.pixelsquid.com/stock-images/hospital-3yL2QM6-600.jpg\",\n                //     size: maps.Size(10, 10),\n                // },\n                title: it.name,\n                label: {\n                    text:\"H\",\n                    color: \"white\",\n                    fontWeight: \"bold\",\n                }\n            })\n\n            marker.addListener(\"click\", () => {\n                marker.setAnimation(this.state.maps_data.maps.Animation.BOUNCE);\n                setTimeout(()=>{marker.setAnimation(null);}, 2000);\n            });\n\n            marker.addListener(\"mouseover\", () => {\n                this.SetActiveCenterBox(it.center_id);\n            })\n            this.state.markers.push(marker);\n        })\n    }\n\n    SetDirection(destination) {\n        this.GaEventTracker(\"Google map directions requests\")\n        let directionsService = new this.state.maps_data.maps.DirectionsService();\n        let directionsRenderer = new this.state.maps_data.maps.DirectionsRenderer();\n        directionsRenderer.setMap(this.state.maps_data.map);\n\n        let request = {\n            origin: this.state.my_position,\n            destination: destination,\n            travelMode: this.state.maps_data.maps.TravelMode.DRIVING,\n        };\n\n        directionsService.route(request, function(response, status) {\n            if (status === 'OK') {\n                directionsRenderer.setDirections(response);\n            }\n        });\n    }\n\n    SetActiveCenterBox(center_id) {\n        $('.center-box').removeClass('border-primary');\n        $('#center-'+center_id).addClass('border-primary');\n    }\n\n    OnClickCenterBox(center){\n        this.SetActiveCenterBox(center.center_id);\n        this.setState({\n            map_center: {lat: center.lat, lng: center.long},\n            map_zoom: 9,\n        })\n    }\n\n    GetFormattedDate(date){\n        return moment(date, \"DD-MM-YYYY\").format(\"DD MMM\");\n    }\n\n    render() {\n        return (\n            <section>\n                <Row>\n                    <Col md={9} className={\"\"}>\n                        {\n                            (this.state.show_map > 0)?\n                            <div style={{height: 600, width: \"100%\"}} className={\"shadow position-relative rounded-lg overflow-hidden\"}>\n                                <GoogleMapReact\n                                    bootstrapURLKeys={{key: config.GOOGLE_MAP_API, language: \"en\"}}\n                                    defaultCenter={{lat: 12.97, lng: 77.59}}\n                                    center={this.state.map_center}\n                                    defaultZoom={10}\n                                    zoom={this.state.map_zoom}\n                                    yesIWantToUseGoogleMapApiInternals={true}\n                                    onGoogleApiLoaded={({map, maps}) => this.HandleApiLoaded(map, maps)}\n                                    onChildMouseEnter={this.OnMouseHoverOnHospital}\n                                >\n                                    <MyLocationComponent\n                                        lat={this.state.my_position.lat}\n                                        lng={this.state.my_position.lng}\n                                    />\n                                </GoogleMapReact>\n                                <Button variant={\"light\"} className=\"my-location position-absolute shadow\" style={{right: 10, bottom:150, height: 38, width:38, borderRadius: 38}} onClick={this.LocateMyPosition}>\n                                    +\n                                </Button>\n                            </div>: <div style={{height: 600, width: \"100%\"}} className={\"shadow position-relative rounded-lg overflow-hidden\"}>\n                                <img src={mapImage} height=\"100%\"  alt={\"map\"}/>\n                                <div style={{height: \"100%\", width: \"100%\", top: 0, background: \"rgba(0,0,0, 0.5)\",}} className=\"p-2 position-absolute text-white font-weight-bold d-flex justify-content-center align-items-center\">\n                                    Try to search for valid pin code\n                                </div>\n                            </div>\n                        }\n                    </Col>\n                    <Col md={3} style={{maxHeight: 600, overflowY:\"auto\"}}>\n                        <Col className={\"p-0 py-1\"} >\n                            <TrackingPinCodes  removeFromTracking={this.props.removeFromTracking}/>\n                        </Col>\n                        {\n                            this.props.user.is_server_up && !(this.props.user.subscriptions && this.props.user.subscriptions.includes(Constant.SUBSCRIPTION_WA)) &&\n                            <GoogleLoginButton getUser={this.props.getUser} onSubscriptionResponseCallback={this.props.onSubscriptionResponseCallback}/>\n                        }\n                        {\n                            (this.props.vaccine.centers.length === 0) && <Col className={\"p-0 py-1\"}>\n                                <div className={\"p-2 shadow rounded-lg border center-box bg-white btn font-weight-bold my-1\"} style={{width: \"100%\"}}>\n                                    No centers are available now\n                                </div>\n                            </Col>\n                        }\n                        {\n                            this.props.vaccine.centers.map(center =>\n                                <Col className={\"p-0 py-1\"} key={\"center-\" + center.center_id}>\n                                    <div className={\"p-1 shadow rounded-lg border center-box bg-white\"}\n                                         id={\"center-\" + center.center_id} onClick={() => {\n                                        this.OnClickCenterBox(center)\n                                    }}>\n                                        <b>{center.name}{' '}\n                                            <sup>\n                                                {\n                                                    center.sessions[0].available_capacity ? <Badge\n                                                            variant={\"primary\"}>{center.sessions[0].available_capacity}</Badge> :\n                                                        <Badge variant={\"danger\"}>Booked</Badge>\n                                                }\n                                            </sup>\n                                        </b>\n                                        <p className={\"text-secondary small m-0\"}>{center.address}, {center.block_name}</p>\n                                        <p className={\"text-secondary small m-0\"}>{center.district_name}, {center.state_name}, {center.pincode}</p>\n                                        {\n                                            center.sessions.map(session =>\n                                                <div className={\"font-weight-bolder\"} key={session.session_id}>\n                                                    <span\n                                                        className={\"small font-weight-bold\"}>{this.GetFormattedDate(session.date)} [{session.vaccine}, {session.min_age_limit}+] {' '} </span>\n                                                    {\n                                                        session.available_capacity ?\n                                                            <a href={Constant.COWIN_REGISTRATION} target=\"_blank\"\n                                                               rel=\"noreferrer\">\n                                                                <Badge variant={\"primary\"}\n                                                                       className={\"btn\"}>Book</Badge>\n                                                            </a> : <Badge variant={\"danger\"}>Booked</Badge>\n                                                    }\n                                                </div>\n                                            )\n                                        }\n                                        <div className={\"text-primary btn px-0 small\"} onClick={() => {this.SetDirection({lat: center.lat, lng: center.long})}}\n                                             style={{fontSize:11}}>\n                                            Show direction on map\n                                        </div>\n                                        <div>\n                                            {\n                                                this.props.isTrackingContains(center.pincode) ?\n                                                    \"\" :\n                                                    <Badge variant={\"primary\"} className={\"btn p-1 m-1\"} onClick={() => {\n                                                        this.props.addToTracking(center.pincode)\n                                                    }}> Set Tracking</Badge>\n                                            }\n                                        </div>\n                                    </div>\n                                </Col>\n                            )\n                        }\n                        <Col className=\"p-0 py-1\">\n                            <a href=\"https://dashboard.cowin.gov.in/\" target=\"_blank\" rel={\"noreferrer\"}>\n                                <Button variant=\"info\" style={{width: \"100%\"}} className=\"shadow p-4\"> Cowin Dashboard & Statistics</Button>\n                            </a>\n                        </Col>\n                    </Col>\n                </Row>\n\n                {/*<TrackModal*/}\n                {/*    show={this.state.modalShow}*/}\n                {/*    onHide={() => this.SetModalShow(false)}*/}\n                {/*/>*/}\n            </section>\n        );\n    }\n}\n\nconst mapStateToProps = ({ user, vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token)),\n    setTrackingCenters: centers => dispatch(setTrackingCenters(centers)),\n    setCentersUpdateDone: () => dispatch(setCentersUpdateDone())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (GoogleMapComponent);\n","import config from \"../../config.json\";\nimport CUrl from \"../../constants/CowinUrl.json\";\nimport moment from \"moment\";\nimport GoogleAnalyticsEventTracker from \"../google/analytics/GoogleAnalyticsEventTracker\";\n\nconst GaEventTracker = GoogleAnalyticsEventTracker();\n\nfunction GetCenters (url, callback) {\n    GaEventTracker(\"Total cowin-api requests\", url)\n    fetch(url)\n        .then(response => response.json())\n        .then(data => callback(data.centers));\n}\n\nfunction CheckForTheCenters (pincode, callback) {\n    GaEventTracker(\"[SW] api-events\")\n    console.log(\"getting details for pin code: \" + pincode);\n    let  date = moment().format(\"DD-MM-YYYY\");\n    GetCenters(config.COWIN_BASE_URL + CUrl.CALENDAR_BY_PIN_CODE.replace(\"<PINCODE>\", pincode).replace(\"<DATE>\", date).replace(\"<VACCINE>\", \"\"), callback);\n}\n\nexport {CheckForTheCenters, GetCenters};","import { useIndexedDB } from 'react-indexed-db';\nimport GoogleAnalyticsEventTracker  from \"../google/analytics/GoogleAnalyticsEventTracker\";\nimport config from \"../../config.json\";\n\nconst DBConfig = {\n    name: 'cowin',\n    version: config.DB_VERSION,\n    objectStoresMeta: [\n        {\n            store: 'centers',\n            storeConfig: { keyPath: 'pin_code'},\n            storeSchema: [\n                { name: 'pin_code', keypath: 'pin_code', options: { unique: true } },\n            ]\n        }\n    ]\n}\n\nconst GaEventTracker = GoogleAnalyticsEventTracker();\n\nfunction RemoveAllCenters(){\n    const { clear } = useIndexedDB('centers');\n    return clear();\n}\n\nfunction GetAllCenters() {\n    const { getAll } = useIndexedDB('centers');\n    return getAll();\n}\n\nfunction AddCenter(pinCode) {\n    GaEventTracker(\"[SW] Center Added\", pinCode);\n    const { add } = useIndexedDB('centers');\n    return add({\n                pin_code: pinCode\n            });\n}\n\nfunction RemoveCenter(pinCode) {\n    const { deleteRecord  } = useIndexedDB('centers');\n    GetAllCenters().then(item=>{\n        item.forEach(it=> {\n                if (it.pin_code === pinCode) {\n                    return deleteRecord(it.pin_code);\n                }\n            }\n        )\n    })\n}\n\nexport {AddCenter, GetAllCenters, RemoveCenter, DBConfig, RemoveAllCenters};","import {Component} from 'react';\nimport config from \"../../../config.json\";\nimport BackendUrls from \"../../../constants/BackendUrls.json\";\nimport {AddCenter, GetAllCenters, RemoveCenter, RemoveAllCenters} from \"../../vaccinesessions/IndexDbManager\";\nimport axios from \"axios\";\n\nclass SyncPinCodeManager extends Component {\n    constructor(props) {\n        super(props);\n        this.IsTrackingContains = this.IsTrackingContains.bind(this);\n        this.RemoveFromTracking = this.RemoveFromTracking.bind(this);\n        this.RemovePinCodeFromBackend = this.RemovePinCodeFromBackend.bind(this);\n        this.SetTrackingCentersFromDbIndex = this.SetTrackingCentersFromDbIndex.bind(this);\n        this.SyncPinCodeWithBackend = this.SyncPinCodeWithBackend.bind(this);\n        this.GetUser = this.GetUser.bind(this);\n        this.AddToTracking = this.AddToTracking.bind(this);\n        this.SetTrackingCentersFromDbIndex();\n    }\n\n    SetTrackingCentersFromDbIndex(){\n        GetAllCenters().then(item =>{\n            this.props.setTrackingCenters(item);\n        })\n    }\n\n    GetUser() {\n        const url = config.BACKEND_BASE_URL + BackendUrls.GET_USER_INFO;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url,{}, options)\n            .then(res => {\n                this.props.setSubscriptions(res.data[\"subscriptions\"]);\n                this.SyncPinCodeWithBackend(res.data[\"pin_codes\"]);\n            })\n            .catch(error => {\n                this.GaEventTracker(\"Fail GET User\", error);\n                console.log(error);\n            });\n\n    }\n\n    SyncPinCodeWithBackend(){\n        if(!this.props.user.token) return;\n        const url = config.BACKEND_BASE_URL + BackendUrls.SYNC_PIN_CODE_URL;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        GetAllCenters().then(pin_codes=>{\n            axios.post(url, {\"pin_codes\": pin_codes.map(p=>p.pin_code)}, options)\n                .then(res => {\n                    RemoveAllCenters().then(() => {\n                        res.data[\"pin_codes\"].forEach(pin_code => {\n                            AddCenter(pin_code);\n                        })\n                        this.SetTrackingCentersFromDbIndex();\n                    })\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        })\n    }\n\n    IsTrackingContains(pin_code){\n        return (this.props.vaccine.tracking_centers.findIndex(center => center.pin_code === pin_code) >=0);\n    }\n\n    RemovePinCodeFromBackend(pin_code){\n        const url = config.BACKEND_BASE_URL + BackendUrls.REMOVE_PIN_CODE_URL;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url,{\"pin_code\": pin_code}, options)\n            .then(res => {\n                console.debug(res);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    RemoveFromTracking(pin_code) {\n        if(!this.IsTrackingContains(pin_code)) return;\n        RemoveCenter(pin_code);\n\n        let tracking_center = this.props.vaccine.tracking_centers;\n        for (let i = tracking_center.findIndex(it => it.pin_code === pin_code); i < tracking_center.length -1; i++) {\n            tracking_center[i] = tracking_center[i+1];\n        }\n        tracking_center.pop();\n\n        console.log(tracking_center);\n        this.props.setTrackingCenters(tracking_center);\n        this.RemovePinCodeFromBackend(pin_code);\n    }\n\n    AddToTracking(pin_code) {\n        if(this.props.vaccine.tracking_centers.length > 3) {\n            try {\n                this.onSubscriptionResponseCallback(\"Allowed max 4 tracking centers, please delete some to add new one. Thanks!\");\n            } catch (e) {\n                console.log(\"Error: \", e)\n            }\n            return;\n        }\n\n        if(this.IsTrackingContains(pin_code)) return;\n        AddCenter(pin_code);\n        let tracking_center = this.props.vaccine.tracking_centers;\n        tracking_center.push({pin_code: pin_code});\n        this.props.setTrackingCenters(tracking_center)\n        this.AddCentersToBackend(pin_code);\n    }\n\n    AddCentersToBackend(pin_code){\n        const url = config.BACKEND_BASE_URL + BackendUrls.ADD_PIN_CODE_URL;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url,{\"pin_code\": pin_code}, options)\n            .then(res => {\n                console.log(res);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n}\n\nexport default SyncPinCodeManager;","import {Modal} from \"react-bootstrap\";\n\nfunction NoteModal({showModal, handleClose, textBody}) {\n    return (\n        <Modal show={showModal} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title> Notification</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{textBody}</Modal.Body>\n        </Modal>\n    );\n}\n\nexport default NoteModal;","import React, {Component} from 'react';\nimport {Button, Col, Row} from \"react-bootstrap\";\nimport {connect} from \"react-redux\";\nimport config from \"../../config.json\";\nimport BackendUrls from \"../../constants/BackendUrls.json\";\nimport axios from \"axios\";\n\nclass Footer extends Component {\n    state = {\n        is_valid_feedback: false,\n        is_feedback_btn_disabled: true,\n        feedback_text:\"\"\n    }\n\n    constructor(props) {\n        super(props);\n        this.OnSubmitFeedback = this.OnSubmitFeedback.bind(this);\n        this.OnChangeFeedback = this.OnChangeFeedback.bind(this);\n    }\n\n    OnSubmitFeedback(){\n        this.setState({\n            is_valid_feedback: true\n        });\n\n        const url = config.BACKEND_BASE_URL + BackendUrls.USER_FEEDBACK;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url, {feedback:this.state.feedback_text}, options)\n            .then(res => {\n                console.debug(res);\n            })\n            .catch(error => {\n                this.setState({\n                    is_valid_feedback: false\n                });\n                console.log(error);\n            });\n    }\n\n    OnChangeFeedback(event){\n        let text = event.target.value;\n        this.setState({\n            feedback_text: text,\n            is_feedback_btn_disabled: text.length < 10\n        })\n    }\n\n    render() {\n        return (\n            <section className=\"p-0\">\n                <div className=\"shadow bg-white p-4 my-2 rounded-lg\">\n                    <Row>\n                       <Col>\n                           <div className=\"font-weight-bold\">Reach out through</div>\n                           <a href=\"https://www.linkedin.com/feed/update/urn%3Ali%3Aactivity%3A6798913715489120256/\" target=\"_blank\" rel={\"noreferrer\"} className=\"no-text-decor\">\n                               <div className=\"text-primary\" style={{fontWeight: 800, fontSize: 20}}>\n                                   Linked <span className=\"bg-primary text-white rounded-sm\" style={{padding: '1px 2px 1px 2px'}}>in</span>\n                               </div>\n                           </a>\n                       </Col>\n                        {\n                            this.props.user.is_server_up &&\n                            <Col>\n                                <div className=\"font-weight-bold\">Feedback</div>\n                                <div>\n                                <textarea className={\"form-control no-input-shadow\"}\n                                          onChange={this.OnChangeFeedback}\n                                          value={this.state.feedback_text}\n                                          disabled={this.state.is_valid_feedback}/>\n                                    {\n                                        this.state.is_valid_feedback ? <div>Thanks for the feedback :) </div> :\n                                            <Button variant={\"primary\"} className=\"my-1 float-right\"\n                                                    onClick={this.OnSubmitFeedback}\n                                                    disabled={this.state.is_feedback_btn_disabled}>\n                                                Submit\n                                            </Button>\n                                    }\n                                </div>\n                            </Col>\n                        }\n                    </Row>\n                </div>\n            </section>\n        );\n    }\n}\n\nconst mapStateToProps = ({ user }) => (\n    {\n        user: user\n    }\n)\n\nconst mapDispatchToProps = () => ({})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Footer);","import React from 'react';\nimport {Button, Container, FormControl, Tab, Tabs} from \"react-bootstrap\";\nimport CUrl from \"../../constants/CowinUrl.json\";\nimport axios from \"axios\";\nimport config from \"../../config.json\";\nimport vaccine from \"../../constants/Vaccine.json\";\nimport moment from \"moment\";\nimport {connect} from \"react-redux\";\nimport {setSubscriptions, setToken, setServerStat} from \"../../../../redux/user/user.actions\";\nimport VaccineSessionTable from \"./VaccineSessionTable\";\nimport GoogleMapComponent from \"../google/GoogleMapComponent\";\nimport { GetCenters } from \"./CowinRequestManager\";\nimport ReactGA from \"react-ga\";\nimport GoogleAnalyticsEventTracker from \"../google/analytics/GoogleAnalyticsEventTracker\";\nimport {setCenters, setTrackingCenters} from \"../../../../redux/centers/center.actions\";\nimport GoogleLoginButton from \"../google/GoogleLoginButton\";\nimport TrackingPinCodes from \"../google/TrackingPinCodes\";\nimport BackendUrls from \"../../constants/BackendUrls.json\";\nimport SyncPinCodeManager from \"../google/analytics/SyncPinCodeManager\";\nimport NoteModal from \"../modal/NoteModal\";\nimport Footer from \"../footer/Footer\";\n\nReactGA.initialize(config.GOOGLE_ANALYTICS_UA);\n\nclass GetVaccineSession extends SyncPinCodeManager {\n    state = {\n        is_unmounted: false,\n        pin_code: \"\",\n        district_id:\"1\",\n        is_valid_pin_code: false,\n        vaccine: \"\",\n        vaccine_date: moment().format(\"YYYY-MM-DD\"),\n        states: [],\n        districts: [],\n        show_modal: false,\n        modal_text: \"\",\n        can_show_tracking_center_button: false\n    }\n\n    options = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': \"Bearer \" + this.props.user.token\n        }\n    }\n\n    GaEventTracker = GoogleAnalyticsEventTracker();\n\n    constructor(props) {\n        super(props);\n        ReactGA.pageview(window.location.pathname + window.location.search);\n\n        this.GetState = this.GetState.bind(this);\n        this.OnChangeState = this.OnChangeState.bind(this);\n        this.OnChangeDate = this.OnChangeDate.bind(this);\n        this.OnChangePinCode = this.OnChangePinCode.bind(this);\n        this.OnChangeDistrictCode = this.OnChangeDistrictCode.bind(this);\n        this.OnChangeVaccine = this.OnChangeVaccine.bind(this);\n\n        this.SelectVaccinesWithDate = this.SelectVaccinesWithDate.bind(this);\n        this.OnSubmitPinCode = this.OnSubmitPinCode.bind(this);\n        this.OnSubmitDistrict = this.OnSubmitDistrict.bind(this);\n        this.OnGetCenterCallback = this.OnGetCenterCallback.bind(this);\n        this.OnLogout = this.OnLogout.bind(this);\n        this.onSubscriptionResponseCallback = this.onSubscriptionResponseCallback.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        // this.syncPinCodeManager = new SyncPinCodeManager(this.props)\n    }\n\n    componentDidMount() {\n        this.GetState();\n        this.OnChangeState(1);\n        this.CheckHealth();\n    }\n\n    CheckHealth(){\n        const url = config.BACKEND_BASE_URL + BackendUrls.HEALTH_CHECK;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url, {}, options)\n            .then(res => {\n                console.log(res);\n                this.GetUser();\n                this.props.setServerStat(true);\n            })\n            .catch(error => {\n                this.props.setToken(null);\n                this.props.setSubscriptions([]);\n                if(error.response === undefined || error.response.status !== 403){\n                    this.props.setServerStat(false);\n                } else {\n                    this.props.setServerStat(true);\n                }\n                console.log(error);\n            });\n    }\n\n    componentWillUnmount(){\n        this.setState({\n            is_unmounted: true\n        })\n    }\n\n    GetState(){\n        axios.get(config.COWIN_BASE_URL + CUrl.GET_STATES, this.options).then( response => {\n            if(response.status === 200 && response.data.states.length > 0) {\n                this.setState({\n                    states: response.data.states\n                })\n            }else{\n                console.log(response);\n            }\n        }).catch( err => console.error(err));\n    }\n\n    OnChangeState(state){\n        axios.get(config.COWIN_BASE_URL + CUrl.GET_DISTRICT.replace(\"<DISTRICT>\", state), this.options).then( response => {\n            if(response.status === 200 && response.data.districts.length > 0) {\n                this.setState({\n                    districts: response.data.districts\n                })\n            }else{\n                console.error(response);\n            }\n        }).catch( err => console.error(err));\n    }\n\n    OnChangeDistrictCode(code){\n        this.setState({\n            district_id: code\n        })\n    }\n\n    OnSubmitPinCode(){\n        if(this.state.pin_code.length !==6) return;\n        this.GaEventTracker(\"Pin code Submitted\", this.state.pin_code);\n        let date = moment(this.state.vaccine_date).format(\"DD-MM-YYYY\");\n        GetCenters(config.COWIN_BASE_URL + CUrl.CALENDAR_BY_PIN_CODE.replace(\"<PINCODE>\", this.state.pin_code).replace(\"<DATE>\", date).replace(\"<VACCINE>\", this.state.vaccine), this.OnGetCenterCallback);\n    }\n\n    OnSubmitDistrict(){\n        if(this.state.district_id.length <= 0) return;\n        this.GaEventTracker(\"District Submitted\", this.state.pin_code);\n        let date = moment(this.state.vaccine_date).format(\"DD-MM-YYYY\");\n        GetCenters(config.COWIN_BASE_URL + CUrl.CALENDAR_BY_DISTRICT.replace(\"<DISTRICT_ID>\", this.state.district_id).replace(\"<DATE>\", date).replace(\"<VACCINE>\", this.state.vaccine), this.OnGetCenterCallback);\n    }\n\n    OnGetCenterCallback(centers){\n        this.props.setCenters(centers);\n        this.GaEventTracker(\"Received Centers\");\n        if(centers.length > 0){\n            this.setState({\n                can_show_tracking_center_button: true\n            })\n        }\n    }\n\n    OnChangeVaccine(event){\n        this.setState({\n            vaccine: event.target.value\n        })\n    }\n\n    OnChangeDate(event){\n        this.setState({\n            vaccine_date: event.target.value\n        })\n        this.GetVaccineSessionChild.current.OnChangeDate(event.target.value);\n    }\n\n    OnChangePinCode(event){\n        let number = event.target.value.replace(/^0+/, '');\n        this.setState({\n            pin_code: number,\n            can_show_tracking_center_button: false,\n            is_valid_pin_code: event.target.value.length === 6\n        })\n    }\n\n    SelectVaccinesWithDate() {\n        return (\n            <div>\n                <select className={\"form-control no-input-shadow mt-2\"} value={this.state.vaccine} onChange={this.OnChangeVaccine}>\n                    <option value=\"\">All Vaccine</option>\n                    <option value={vaccine.COVAXIN}>{vaccine.COVAXIN}</option>\n                    <option value={vaccine.COVISHIELD}>{vaccine.COVISHIELD}</option>\n                </select>\n                <FormControl className={\"no-input-shadow mt-2\"} placeholder={\"Enter start date\"} type={\"date\"} value={this.state.vaccine_date} onChange={this.OnChangeDate}/>\n            </div>\n        );\n    }\n\n    OnLogout(){\n        const url = config.BACKEND_BASE_URL + BackendUrls.LOGOUT_URL;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url, {}, options)\n            .then(res => {\n                this.props.setToken(null);\n                this.props.setSubscriptions([]);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    closeModal() {\n        this.setState({\n            show_modal: false\n        });\n    }\n\n    onSubscriptionResponseCallback(text){\n        this.setState({\n            show_modal: true,\n            modal_text: text\n        });\n    }\n\n    render() {\n        return (\n            <Container className={\"\"}>\n                <div className={\"position-relative\"}>\n                    {\n                        this.props.user.token !== null &&\n                        <Button variant={\"danger\"} className={\"position-absolute shadow-lg logout-btn\"} onClick={this.OnLogout}>Logout</Button>\n                    }\n                </div>\n                <Tabs defaultActiveKey=\"home\" transition={false} id=\"noanim-tab-example\" className={\"bg-white rounded-top shadow overflow-hidden mt-4 position-relative\"}>\n                    <Tab eventKey=\"home\" title=\"Pin code\">\n                        <div className=\"bg-white mb-2 rounded-bottom bg-cowin2-light shadow p-4 justify-content-center d-flex align-items-center\" style={{height:300}}>\n                            <div className={\"col-md-6\"}>\n                                <FormControl className={\"no-input-shadow\"} placeholder={\"Enter pin code\"} type=\"number\" value={this.state.pin_code} onChange={this.OnChangePinCode}/>\n                                {\n                                    this.state.can_show_tracking_center_button &&\n                                    <Button variant={\"outline-success\"}\n                                            className={\"small py-0 rounded-0 float-right mb-1\"}\n                                            style={{top: 0, right: \"-10%\"}}\n                                            onClick={()=>{ this.AddToTracking(parseInt(this.state.pin_code))}}>Track this pincode</Button>\n                                }\n                                <this.SelectVaccinesWithDate />\n                                <Button variant={\"primary\"} className={\"form-control mt-4\"} onClick={this.OnSubmitPinCode} disabled={!this.state.is_valid_pin_code}> Find vaccine slots</Button>\n                            </div>\n                        </div>\n                    </Tab>\n                    <Tab eventKey=\"profile\" title=\"District\">\n                        <div className=\"bg-white mb-2 rounded-bottom shadow p-4 justify-content-center d-flex align-items-center\" style={{height:300}}>\n                            <div className=\"col-md-6\" >\n                                <select className={\"form-control no-input-shadow\"} placeholder={\"Select state\"} onChange={e => {this.OnChangeState(e.target.value)}}>\n                                    {\n                                        this.state.states.map(it => <option key={it.state_id} value={it.state_id}>{it.state_name}</option>)\n                                    }\n                                </select>\n                                <select className={\"form-control no-input-shadow mt-2\"} placeholder={\"Select district\"} value={this.state.district_id} onChange={ e => {this.OnChangeDistrictCode(e.target.value)}}>\n                                    {\n                                        this.state.districts.map(it => <option key={it.district_id} value={it.district_id}>{it.district_name}</option>)\n                                    }\n                                </select>\n                                <this.SelectVaccinesWithDate />\n                                <Button variant={\"primary\"} className={\"form-control mt-4\"} onClick={this.OnSubmitDistrict}> Find vaccine slots</Button>\n                            </div>\n                        </div>\n                    </Tab>\n                    <Tab eventKey=\"near_me\" title=\"Notifications Manager\">\n                        <div className=\"bg-white mb-2 rounded-bottom shadow p-4 justify-content-center d-flex\" >\n                            {\n                                this.props.user.is_server_up &&\n                                <div className=\"p-1\">\n                                    <GoogleLoginButton getUser={this.GetUser}/>\n                                </div>\n                            }\n                            <div className=\"p-1\">\n                                <TrackingPinCodes removeFromTracking={this.RemoveFromTracking}/>\n                            </div>\n                        </div>\n                    </Tab>\n                </Tabs>\n                {\n                    this.props.user.token === null &&\n                    <div className=\"p-1 shadow rounded-lg bg-warning my-2\">\n                        Please do use google login and subscribe SMS text to get more accurate notification even you're\n                        offline.\n                    </div>\n                }\n                <GoogleMapComponent removeFromTracking={this.RemoveFromTracking}\n                                    addToTracking={this.AddToTracking}\n                                    isTrackingContains={this.IsTrackingContains}\n                                    getUser={this.GetUser}\n                                    onSubscriptionResponseCallback={this.onSubscriptionResponseCallback}/>\n                <VaccineSessionTable />\n                <NoteModal showModal={this.state.show_modal} textBody={this.state.modal_text} handleClose={this.closeModal}/>\n                <Footer />\n            </Container>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ user, vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token)),\n    setCenters: centers => dispatch(setCenters(centers)),\n    setServerStat: stat => dispatch(setServerStat(stat)),\n    setSubscriptions: subscription => dispatch(setSubscriptions(subscription)),\n    setTrackingCenters: centers => dispatch(setTrackingCenters(centers))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (GetVaccineSession);\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport './App.css';\nimport GetVaccineSession from \"../vaccinesessions/GetVaccineSession\";\nimport {initDB} from \"react-indexed-db\";\nimport {DBConfig} from \"../vaccinesessions/IndexDbManager\";\nimport config from \"../../config.json\";\n\nconst indexedDB = window.indexedDB || (window).mozIndexedDB || (window).webkitIndexedDB || (window).msIndexedDB;\n\nfunction deleteIfOldDatabase(){\n    let openDBRequest = indexedDB.open('cowin', config.DB_VERSION);\n    openDBRequest.onupgradeneeded = function (event){\n        let database = openDBRequest.result;\n        if(database.objectStoreNames.contains(\"centers\")){\n            if(event.oldVersion) {\n                database.deleteObjectStore(\"centers\");\n                let store = database.createObjectStore(\"centers\", {keyPath:\"pin_code\"});\n                store.createIndex('pin_code', 'pin_code', {unique: true});\n            }\n        } else {\n            let store = database.createObjectStore(\"centers\", {keyPath: \"pin_code\"});\n            store.createIndex('pin_code', 'pin_code', {unique: true});\n        }\n    }\n    openDBRequest.onsuccess = function (event) {\n        let database = openDBRequest.result;\n        if(!database.objectStoreNames.contains(\"centers\")){\n            indexedDB.deleteDatabase(\"cowin\");\n        }\n    }\n}\n\ndeleteIfOldDatabase();\ninitDB(DBConfig);\n\nclass App extends Component {\n\n    state = {\n        is_notification_granted: true,\n        top_notification_content: \"Grant notification permission manually, which will get use to notify if any slots available.\"\n    }\n\n    constructor(props) {\n        super(props);\n        this.OnNotificationPermissionChange = this.OnNotificationPermissionChange.bind(this);\n    }\n\n    componentDidMount(){\n        if(!this.IsPushNotificationSupported()){\n            this.setState({\n                is_notification_granted: false,\n                top_notification_content: \"Notifications are not supported by your browser :(\"\n            })\n        }else{\n            this.OnNotificationPermissionChange();\n            if(Notification.permission === \"default\"){\n                Notification.requestPermission(this.OnNotificationPermissionChange).then(r => {\n                    // intentional\n                });\n            }\n        }\n    }\n\n    OnNotificationPermissionChange(){\n        if(Notification.permission === \"denied\"){\n            this.setState({\n                is_notification_granted: false\n            })\n        }\n    }\n\n    IsPushNotificationSupported() {\n        return \"serviceWorker\" in navigator && \"PushManager\" in window;\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {\n                    !this.state.is_notification_granted &&\n                    <div className=\"bg-danger text-center text-white\">\n                        {this.state.top_notification_content}\n                    </div>\n                }\n                <Router>\n                    <Switch>\n                        {/*        /!*<Redirect from={\"/\"} to={AppUrl.GET_VACCINATION_SESSION} exact={true} />*!/*/}\n                        {/*        /!*<Route path={AppUrl.REGISTER_OTP} exact={true} component={RegisterOtp}/>*!/*/}\n                        <Route path={\"\"} exact={true} component={GetVaccineSession} />\n                        {/*        /!*<Redirect to={AppUrl.GET_VACCINATION_SESSION} from={\"*\"}/>*!/*/}\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n\n          if(registration.waiting){\n            registration.waiting.postMessage({ type: 'SKIP_WAITING' });\n          }\n\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://cra.link/PWA.'\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import {UserActionTypes} from \"./user.types\";\n\nconst INITIAL_STATE = {\n    is_server_up:true,\n    token:null,\n    subscriptions:[]\n}\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case UserActionTypes.SET_USER_TOKEN:\n            return {\n                ...state,\n                token: action.payload\n            };\n        case UserActionTypes.SET_SERVER_STAT:\n            return {\n                ...state,\n                is_server_up: action.payload\n            };\n        case UserActionTypes.SET_USER_SUBSCRIPTION:\n            return {\n                ...state,\n                subscriptions: action.payload\n            };\n        default:\n            return state;\n    }\n}\nexport default userReducer;","export const PositionActionTypes = {\n    SET_LATITUDE: \"SET_LATITUDE\",\n    SET_LONGITUDE: \"SET_LONGITUDE\"\n}","import {PositionActionTypes} from \"./position.types\";\n\n\nconst INITIAL_STATE = {\n    latitude: 100,\n    longitude: 157\n}\n\nconst positionReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case PositionActionTypes.SET_LATITUDE:\n            return {\n                ...state,\n                latitude: action.payload\n            };\n        case PositionActionTypes.SET_LONGITUDE:\n            return {\n                ...state,\n                longitude: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport default positionReducer","import {CenterActionTypes} from \"./center.types\";\n\nconst INITIAL_STATE = {\n    centers: [],\n    is_centers_updated: false,\n    tracking_centers: [],\n}\n\nconst centerReducer = (state = INITIAL_STATE, action = \"\") => {\n    switch (action.type) {\n        case CenterActionTypes.SET_CENTERS:\n            return {\n                ...state,\n                centers: action.payload,\n                is_centers_updated: true\n            };\n        case CenterActionTypes.SET_TRACKING_CENTER:\n            return {\n                ...state,\n                tracking_centers: action.payload\n            }\n        case CenterActionTypes.CENTER_UPDATE_DONE:\n            return {\n                ...state,\n                is_centers_updated: action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport default centerReducer;","import { combineReducers } from \"redux\";\nimport userReducer from \"./user/userReducer\";\nimport positionReducer from \"./position/position.reducer\";\nimport centerReducer from \"./centers/centerReducer\";\n\nexport default combineReducers(\n    {\n        user: userReducer,\n        position: positionReducer,\n        vaccine: centerReducer\n    }\n)","import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './root-reducer';\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: ['vaccine']\n    // whiteList: ['navigation']\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n// export default () => {\n//     let store = createStore(persistedReducer)\n//     let persist_store = persistStore(store)\n//     return { store, persist_store }\n// }\n\nexport const store = createStore(persistedReducer);\nexport const persist_store = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './main/cowin/components/app/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport {store, persist_store} from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab, faWhatsapp } from '@fortawesome/free-brands-svg-icons';\nimport { faUser, faCoffee, faAddressBook,\n    faLocationArrow, faSearchLocation,\n    faEdit, faTrash, faClinicMedical,faCommentDots } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n    fab,\n    faUser,\n    faCoffee,\n    faAddressBook,\n    faLocationArrow,\n    faSearchLocation,\n    faEdit,\n    faTrash,\n    faClinicMedical,\n    faWhatsapp,\n    faCommentDots\n)\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <PersistGate loading={null} persistor={persist_store}>\n              <BrowserRouter/>\n              <App/>\n          </PersistGate>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}