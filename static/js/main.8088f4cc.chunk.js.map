{"version":3,"sources":["redux/user/user.types.js","main/cowin/components/vaccinesessions/VaccineSessionTable.jsx","main/cowin/components/google/analytics/GoogleAnalyticsEventTracker.jsx","main/cowin/components/vaccinesessions/IndexDbManager.jsx","main/cowin/components/google/GoogleMapComponent.jsx","main/cowin/components/vaccinesessions/CowinRequestManager.jsx","main/cowin/components/vaccinesessions/GetVaccineSession.jsx","redux/user/user.actions.js","main/cowin/components/app/App.js","serviceWorkerRegistration.ts","reportWebVitals.ts","redux/user/user.reducer.js","redux/position/position.types.js","redux/position/position.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["UserActionTypes","VaccineSessionTable","state","centers","week","map","it","moment","add","format","date","this","setState","className","Table","striped","bordered","hover","day","name","Badge","variant","fee_type","address","block_name","district_name","state_name","pincode","index","sessions","findIndex","session","vaccine","min_age_limit","available_capacity","OverlayTrigger","overlay","Tooltip","slots","join","href","Constant","COWIN_REGISTRATION","target","rel","Button","data-toggle","data-placement","title","session_id","Math","random","center_id","length","Component","GoogleAnalyticsEventTracker","category","action","label","ReactGA","event","GaEventTracker","GetAllCenters","getAll","useIndexedDB","MyLocationComponent","style","height","width","borderRadius","border","GoogleMapComponent","props","my_position","lat","lng","map_center","map_zoom","selected_center","maps_data","cw_centers","tracking_centers","show_map","markers","HandleApiLoaded","maps","OnMouseHoverOnHospital","bind","OnClickCenterBox","LocateMyPosition","RemoveAllMarkersFromMap","setTimeout","DrawMarkersOnMap","forEach","marker","setMap","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","then","item","hoverKey","childProps","center","unique_positions","long","up","push","Marker","text","color","fontWeight","addListener","setAnimation","Animation","BOUNCE","SetActiveCenterBox","console","error","destination","directionsService","DirectionsService","directionsRenderer","DirectionsRenderer","request","origin","travelMode","TravelMode","DRIVING","route","response","status","setDirections","$","removeClass","addClass","pin_code","IsTrackingContains","pinCode","deleteRecord","id","RemoveCenter","tracking_center","pop","Row","Col","md","bootstrapURLKeys","key","GOOGLE_MAP_API","language","defaultCenter","defaultZoom","zoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","onChildMouseEnter","right","bottom","onClick","maxHeight","overflowY","t_center","RemoveFromTracking","top","GetFormattedDate","SetDirection","fontSize","AddToTracking","GetCenters","url","callback","fetch","json","data","initialize","config","GOOGLE_ANALYTICS_UA","GetVaccineSession","is_unmounted","district_id","is_valid_pin_code","vaccine_date","states","districts","options","headers","user","token","pageview","window","location","pathname","search","GetState","OnChangeState","OnChangeDate","OnChangePinCode","OnChangeDistrictCode","OnChangeVaccine","SelectVaccinesWithDate","OnSubmitPinCode","OnSubmitDistrict","OnGetCenterCallback","GetVaccineSessionChild","React","createRef","googleMapRef","axios","get","COWIN_BASE_URL","CUrl","GET_STATES","log","catch","err","GET_DISTRICT","replace","code","CALENDAR_BY_PIN_CODE","CALENDAR_BY_DISTRICT","current","SetCenters","UpdateMarkers","value","onChange","COVAXIN","COVISHIELD","FormControl","placeholder","type","Container","Tabs","defaultActiveKey","transition","Tab","eventKey","disabled","e","state_id","ref","connect","dispatch","setToken","payload","initDB","version","objectStoresMeta","store","storeConfig","keyPath","autoIncrement","storeSchema","keypath","unique","App","is_notification_granted","top_notification_content","OnNotificationPermissionChange","IsPushNotificationSupported","Notification","permission","requestPermission","r","path","exact","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","txn_id","userReducer","PositionActionTypes","positionReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","rootReducer","createStore","persist_store","persistStore","library","fab","faUser","faCoffee","faAddressBook","faLocationArrow","faSearchLocation","faEdit","faTrash","faClinicMedical","ReactDOM","render","StrictMode","loading","persistor","document","getElementById","URL","process","addEventListener","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.8088f4cc.chunk.js","sourcesContent":["export const UserActionTypes = {\n    SET_TXN_ID: 'SET_TXN_ID',\n    SET_USER_TOKEN: 'SET_USER_TOKEN',\n}","import React, {Component} from 'react';\nimport {Badge, Button, OverlayTrigger, Table, Tooltip} from \"react-bootstrap\";\nimport moment from \"moment\";\nimport Constant from \"../../constants/Constant.json\";\n\nclass VaccineSessionTable extends Component {\n    state = {\n        centers: [],\n        week: [0 ,1, 2, 3, 4, 5, 6].map(it=> moment().add(it, 'day').format(\"DD-MM-YY\"))\n    }\n\n    OnChangeDate(date){\n        this.setState({\n            week: [0 ,1, 2, 3, 4, 5, 6].map(it=> moment(date, 'YYYY-MM-DD').add(it, 'day').format(\"DD-MM-YY\"))\n        })\n    }\n\n    SetCenters(centers){\n        this.setState({\n            centers: centers\n        })\n    }\n\n    render() {\n        return (\n            <div className={\"bg-light\"}>\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th>Name</th>\n                        {\n                            this.state.week.map(day =>\n                                <th key={\"th-\" + day}>{day}</th>\n                            )\n                        }\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        this.state.centers.map(it =>\n                            <tr key={it.center_id}>\n                                <td>\n                                    <div>\n                                        <div className={\"font-weight-bolder\"}>\n                                            {it.name}\n                                            <sup className={\"small\"}>\n                                                {' '}<Badge variant=\"secondary\">{it.fee_type}</Badge>\n                                            </sup>\n                                        </div>\n                                        <p className={\"text-secondary small m-0\"}>{it.address}, {it.block_name}</p>\n                                        <p className={\"text-secondary small m-0\"}>{it.district_name}, {it.state_name}, {it.pincode}</p>\n                                    </div>\n                                </td>\n                                {\n                                    this.state.week.map(date => {\n                                        let index = it.sessions.findIndex(session => session.date === moment(date, 'DD-MM-YY').format('DD-MM-YYYY'));\n                                        if(index >=0){\n                                            return (\n                                                <td key={it.sessions[index].session_id}>\n                                                    <div>\n                                                        {/*{it.sessions[index].session_id}*/}\n                                                        <span className={\"\"}>{it.sessions[index].vaccine}</span>\n                                                        <p className={\"small m-0 text-danger\"}>For {it.sessions[index].min_age_limit}+</p>\n                                                        {\n                                                            it.sessions[index].available_capacity ?\n                                                                <OverlayTrigger\n                                                                    overlay={\n                                                                        <Tooltip>\n                                                                            Slots: {it.sessions[index].slots.join(\", \")}\n                                                                        </Tooltip>\n                                                                    }\n                                                                >\n                                                                    <a href={Constant.COWIN_REGISTRATION} target=\"_blank\" rel=\"noreferrer\">\n                                                                        <Button variant={\"success p-1\"} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Tooltip on top\">\n                                                                            Book <sup><Badge variant={\"primary\"}>{it.sessions[index].available_capacity}</Badge></sup>\n                                                                        </Button>\n                                                                    </a>\n                                                                </OverlayTrigger> : <Button variant={\"danger p-0\"}>Booked</Button>\n                                                        }\n                                                    </div>\n                                                </td>\n                                            );\n                                        }else{\n                                            return (<td key={Math.random()} />);\n                                        }\n                                    })\n                                }\n                            </tr>\n                        )\n                    }\n                    </tbody>\n                </Table>\n                {\n                    this.state.centers.length <=0 && <div className=\"text-center font-weight-bold\">No centers are available for now for these dates</div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default VaccineSessionTable;","import ReactGA from \"react-ga\";\n\nconst GoogleAnalyticsEventTracker = ( category = \"Event Category\") => {\n    return (action =\"action\", label=\"label\") => {\n        ReactGA.event({category, action, label})\n    };\n}\n\nexport default GoogleAnalyticsEventTracker;","import { useIndexedDB } from 'react-indexed-db';\nimport GoogleAnalyticsEventTracker  from \"../google/analytics/GoogleAnalyticsEventTracker\";\n\nconst DBConfig = {\n    name: 'cowin',\n    version: 1,\n    objectStoresMeta: [\n        {\n            store: 'centers',\n            storeConfig: { keyPath: 'id', autoIncrement: true },\n            storeSchema: [\n                { name: 'pin_code', keypath: 'pin_code', options: { unique: false } },\n            ]\n        }\n    ]\n}\n\nconst GaEventTracker = GoogleAnalyticsEventTracker();\n\nfunction GetAllCenters() {\n    const { getAll } = useIndexedDB('centers');\n    return getAll();\n}\n\nfunction AddCenter(pinCode) {\n    GaEventTracker(\"[SW] Center Added\", pinCode);\n    const { add } = useIndexedDB('centers');\n    return add({\n                pin_code: pinCode\n            });\n}\n\nfunction RemoveCenter(pinCode) {\n    const { deleteRecord  } = useIndexedDB('centers');\n    GetAllCenters().then(item=>{\n        item.forEach(it=> {\n                if (it.pin_code === pinCode) {\n                    return deleteRecord(it.id);\n                }\n            }\n        )\n    })\n}\n\nexport {AddCenter, GetAllCenters, RemoveCenter, DBConfig};","import React, {Component} from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport {Badge, Button, Col, Row} from \"react-bootstrap\";\nimport Constant from \"../../constants/Constant.json\";\nimport $ from 'jquery';\nimport {AddCenter, GetAllCenters, RemoveCenter} from \"../vaccinesessions/IndexDbManager\";\nimport moment from \"moment\";\nimport GoogleAnalyticsEventTracker from \"../google/analytics/GoogleAnalyticsEventTracker\";\n\nconst MyLocationComponent = () => <div>\n    <div className=\"bg-primary\" style={{height:18, width:18, borderRadius:18, border:\"2px solid #fff\"}}>\n    </div>\n</div>;\n\nclass GoogleMapComponent extends Component {\n\n    state = {\n        my_position: {lat: 12.97, lng: 77.59},\n        map_center: {lat: 12.97, lng: 77.59},\n        map_zoom: 10,\n        selected_center: {},\n        maps_data: {},\n        cw_centers: [],\n        tracking_centers: [],\n        show_map: false,\n        markers: []\n    }\n\n    GaEventTracker = GoogleAnalyticsEventTracker();\n\n    constructor(props) {\n        super(props);\n        this.OnMouseHoverOnHospital = this.OnMouseHoverOnHospital.bind(this);\n        this.OnClickCenterBox = this.OnClickCenterBox.bind(this);\n        this.LocateMyPosition = this.LocateMyPosition.bind(this);\n    }\n\n    UpdateMarkers(centers) {\n        if(!this.state.show_map && centers.length > 0) {\n            this.setState({\n                show_map: true\n            })\n        }\n\n        this.setState({\n            cw_centers: centers,\n        });\n        this.GaEventTracker(\"Google map requests\");\n        this.RemoveAllMarkersFromMap();\n        setTimeout(() => {this.DrawMarkersOnMap()}, 2000);\n    }\n\n    RemoveAllMarkersFromMap(){\n        this.state.markers.forEach(marker => {\n            marker.setMap(null);\n        })\n        this.setState({\n            markers: []\n        })\n    }\n\n    componentDidMount() {\n        navigator.geolocation.getCurrentPosition((position) => {\n            this.setState({\n                my_position: { lat:position.coords.latitude, lng: position.coords.longitude},\n                map_center: { lat:position.coords.latitude, lng: position.coords.longitude},\n            })\n        });\n\n        GetAllCenters().then(item =>{\n            this.setState({\n                tracking_centers: item\n            })\n        })\n    }\n\n    LocateMyPosition(){\n        this.setState({\n            map_center: this.state.my_position,\n            map_zoom: 11,\n        })\n    }\n\n    OnMouseHoverOnHospital(hoverKey, childProps){\n        if(! (childProps.center && childProps.center.name)) return;\n        this.setState({selected_center: childProps.center})\n    }\n\n    HandleApiLoaded = (map, maps) => {\n        this.setState({\n            maps_data: {\n                map: map,\n                maps: maps\n            }\n        })\n    }\n\n    DrawMarkersOnMap(){\n        if(!this.state.maps_data.map) {\n            console.error(\"Map is not ready yet\");\n            return;\n        }\n        let unique_positions = [];\n        this.state.cw_centers.forEach(it => {\n            let position = { lat: it.lat, lng: it.long};\n            if(unique_positions.findIndex( up => up.lat === it.lat && up.lng === it.long) >= 0) return;\n            unique_positions.push(position);\n\n            let map = this.state.maps_data.map;\n            let marker = new this.state.maps_data.maps.Marker({\n                position: position,\n                // animation: maps.Animation.DROP,\n                map,\n                // icon: {\n                //     url: \"https://atlas-content-cdn.pixelsquid.com/stock-images/hospital-3yL2QM6-600.jpg\",\n                //     size: maps.Size(10, 10),\n                // },\n                title: it.name,\n                label: {\n                    text:\"H\",\n                    color: \"white\",\n                    fontWeight: \"bold\",\n                }\n            })\n\n            marker.addListener(\"click\", () => {\n                marker.setAnimation(this.state.maps_data.maps.Animation.BOUNCE);\n                setTimeout(()=>{marker.setAnimation(null);}, 2000);\n            });\n\n            marker.addListener(\"mouseover\", () => {\n                this.SetActiveCenterBox(it.center_id);\n            })\n            this.state.markers.push(marker);\n        })\n    }\n\n    SetDirection(destination) {\n        this.GaEventTracker(\"Google map directions requests\")\n        let directionsService = new this.state.maps_data.maps.DirectionsService();\n        let directionsRenderer = new this.state.maps_data.maps.DirectionsRenderer();\n        directionsRenderer.setMap(this.state.maps_data.map);\n\n        let request = {\n            origin: this.state.my_position,\n            destination: destination,\n            travelMode: this.state.maps_data.maps.TravelMode.DRIVING,\n        };\n\n        directionsService.route(request, function(response, status) {\n            if (status === 'OK') {\n                directionsRenderer.setDirections(response);\n            }\n        });\n    }\n\n    SetActiveCenterBox(center_id) {\n        $('.center-box').removeClass('border-primary');\n        $('#center-'+center_id).addClass('border-primary');\n    }\n\n    OnClickCenterBox(center){\n        this.SetActiveCenterBox(center.center_id);\n        this.setState({\n            map_center: {lat: center.lat, lng: center.long},\n            map_zoom: 9,\n        })\n    }\n\n    RemoveFromTracking(pin_code) {\n        if(!this.IsTrackingContains(pin_code)) return;\n        RemoveCenter(pin_code);\n\n        let tracking_center = this.state.tracking_centers;\n        tracking_center[tracking_center.findIndex(it => it.pin_code = pin_code)] = tracking_center[tracking_center.length -1];\n        tracking_center.pop();\n\n        this.setState({\n            tracking_center: tracking_center\n        })\n    }\n\n    AddToTracking(pin_code) {\n        if(this.IsTrackingContains(pin_code)) return;\n        AddCenter(pin_code);\n        let tracking_center = this.state.tracking_centers;\n        tracking_center.push({pin_code: pin_code});\n        this.setState({\n            tracking_center: tracking_center\n        })\n    }\n\n    IsTrackingContains(pin_code){\n        return (this.state.tracking_centers.findIndex(center => center.pin_code === pin_code) >=0);\n    }\n\n    GetFormattedDate(date){\n        return moment(date, \"DD-MM-YYYY\").format(\"DD MMM\");\n    }\n    render() {\n        return (\n            <section>\n                <Row>\n                    <Col md={9} className={\"\"}>\n                        {\n                            (this.state.show_map > 0) &&\n                            <div style={{height: 600, width: \"100%\"}} className={\"shadow-sm position-relative\"}>\n                                <GoogleMapReact\n                                    bootstrapURLKeys={{key: Constant.GOOGLE_MAP_API, language: \"en\"}}\n                                    defaultCenter={{lat: 12.97, lng: 77.59}}\n                                    center={this.state.map_center}\n                                    defaultZoom={10}\n                                    zoom={this.state.map_zoom}\n                                    yesIWantToUseGoogleMapApiInternals={true}\n                                    onGoogleApiLoaded={({map, maps}) => this.HandleApiLoaded(map, maps)}\n                                    onChildMouseEnter={this.OnMouseHoverOnHospital}\n                                >\n                                    <MyLocationComponent\n                                        lat={this.state.my_position.lat}\n                                        lng={this.state.my_position.lng}\n                                    />\n                                </GoogleMapReact>\n                                <Button variant={\"light\"} className=\"my-location position-absolute shadow\" style={{right: 10, bottom:150, height: 38, width:38, borderRadius: 38}} onClick={this.LocateMyPosition}>\n                                    +\n                                </Button>\n                            </div>\n                        }\n                    </Col>\n                    <Col md={3} style={{maxHeight: 600, overflowY:\"auto\"}}>\n                        <Col className={\"p-0 py-1\"} >\n                            <div className={\"shadow p-1 rounded\"}>\n                                {\n                                    this.state.tracking_centers.length > 0?\n                                        <h6 className={\"font-weight-bold\"}> Tracking pin codes for age &lt; 45</h6>:\n                                        <h6 className={\"font-weight-bold\"}> No Trackers</h6>\n                                }\n                                <hr />\n                                {\n                                    this.state.tracking_centers.map(t_center =>{\n                                        return (\n                                            <div className={\"rounded p-2 m-1 font-weight-bold bg-white position-relative overflow-hidden\"} key={\"center-tr-\" + t_center.pin_code}>\n                                                {t_center.pin_code}\n                                                <Button variant={\"danger\"} onClick={() => {\n                                                    this.RemoveFromTracking(t_center.pin_code)\n                                                }} className={\"float-right  position-absolute rounded-0\"} style={{top:0, right:0, height:\"100%\"}}> X </Button>\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n                        </Col>\n                        {\n                            (this.state.cw_centers.length === 0) && <Col className={\"p-0 py-1 font-weight-bold\"}>\n                                <div className={\"p-1 shadow rounded border center-box\"}>\n                                    No centers are available now\n                                </div>\n                            </Col>\n                        }\n                        {\n                            this.state.cw_centers.map(center =>\n                                <Col className={\"p-0 py-1\"} key={\"center-\" + center.center_id}>\n                                    <div className={\"p-1 shadow rounded border center-box\"}\n                                         id={\"center-\" + center.center_id} onClick={() => {\n                                        this.OnClickCenterBox(center)\n                                    }}>\n                                        <b>{center.name}{' '}\n                                            <sup>\n                                                {\n                                                    center.sessions[0].available_capacity ? <Badge\n                                                            variant={\"primary\"}>{center.sessions[0].available_capacity}</Badge> :\n                                                        <Badge variant={\"danger\"}>Booked</Badge>\n                                                }\n                                            </sup>\n                                        </b>\n                                        <p className={\"text-secondary small m-0\"}>{center.address}, {center.block_name}</p>\n                                        <p className={\"text-secondary small m-0\"}>{center.district_name}, {center.state_name}, {center.pincode}</p>\n                                        {\n                                            center.sessions.map(session =>\n                                                <div className={\"font-weight-bolder\"} key={session.session_id}>\n                                                    <span\n                                                        className={\"small font-weight-bold\"}>{this.GetFormattedDate(session.date)} [{session.vaccine}, {session.min_age_limit}+] {' '} </span>\n                                                    {\n                                                        session.available_capacity ?\n                                                            <a href={Constant.COWIN_REGISTRATION} target=\"_blank\"\n                                                               rel=\"noreferrer\">\n                                                                <Badge variant={\"primary\"}\n                                                                       className={\"btn\"}>Book</Badge>\n                                                            </a> : <Badge variant={\"danger\"}>Booked</Badge>\n                                                    }\n                                                </div>\n                                            )\n                                        }\n                                        <div className={\"text-primary btn px-0 small\"} onClick={() => {this.SetDirection({lat: center.lat, lng: center.long})}}\n                                             style={{fontSize:11}}>\n                                            Show direction on map\n                                        </div>\n                                        <div>\n                                            {\n                                                this.IsTrackingContains(center.pincode) ?\n                                                    \"\" :\n                                                    <Badge variant={\"primary\"} className={\"btn p-1 m-1\"} onClick={() => {\n                                                        this.AddToTracking(center.pincode)\n                                                    }}> Set Tracking</Badge>\n                                            }\n                                        </div>\n                                    </div>\n                                </Col>\n                            )\n                        }\n                    </Col>\n                </Row>\n\n                {/*<TrackModal*/}\n                {/*    show={this.state.modalShow}*/}\n                {/*    onHide={() => this.SetModalShow(false)}*/}\n                {/*/>*/}\n            </section>\n        );\n    }\n}\n\nexport default GoogleMapComponent;","import config from \"../../config.json\";\nimport CUrl from \"../../constants/CowinUrl.json\";\nimport moment from \"moment\";\nimport GoogleAnalyticsEventTracker from \"../google/analytics/GoogleAnalyticsEventTracker\";\n\nconst GaEventTracker = GoogleAnalyticsEventTracker();\n\nfunction GetCenters (url, callback) {\n    GaEventTracker(\"Total cowin-api requests\", url)\n    fetch(url)\n        .then(response => response.json())\n        .then(data => callback(data.centers));\n}\n\nfunction CheckForTheCenters (pincode, callback) {\n    GaEventTracker(\"[SW] api-events\")\n    console.log(\"getting details for pin code: \" + pincode);\n    let  date = moment().format(\"DD-MM-YYYY\");\n    GetCenters(config.COWIN_BASE_URL + CUrl.CALENDAR_BY_PIN_CODE.replace(\"<PINCODE>\", pincode).replace(\"<DATE>\", date).replace(\"<VACCINE>\", \"\"), callback);\n}\n\nexport {CheckForTheCenters, GetCenters};","import React, {Component} from 'react';\nimport {Button, Container, FormControl, Tab, Tabs} from \"react-bootstrap\";\nimport CUrl from \"../../constants/CowinUrl.json\";\nimport axios from \"axios\";\nimport config from \"../../config.json\";\nimport vaccine from \"../../constants/Vaccine.json\";\nimport moment from \"moment\";\nimport {connect} from \"react-redux\";\nimport {setToken} from \"../../../../redux/user/user.actions\";\nimport VaccineSessionTable from \"./VaccineSessionTable\";\nimport GoogleMapComponent from \"../google/GoogleMapComponent\";\nimport { GetCenters } from \"./CowinRequestManager\";\nimport ReactGA from \"react-ga\";\nimport GoogleAnalyticsEventTracker from \"../google/analytics/GoogleAnalyticsEventTracker\";\n\nReactGA.initialize(config.GOOGLE_ANALYTICS_UA);\n\nclass GetVaccineSession extends Component {\n    state = {\n        is_unmounted: false,\n        pin_code: \"\",\n        district_id:\"1\",\n        is_valid_pin_code: false,\n        vaccine: \"\",\n        vaccine_date: moment().format(\"YYYY-MM-DD\"),\n        states: [],\n        districts: [],\n        centers: []\n    }\n\n    options = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': \"Bearer \" + this.props.user.token\n        }\n    }\n\n    GaEventTracker = GoogleAnalyticsEventTracker();\n\n    constructor(props) {\n        super(props);\n        ReactGA.pageview(window.location.pathname + window.location.search);\n\n        this.GetState = this.GetState.bind(this);\n        this.OnChangeState = this.OnChangeState.bind(this);\n        this.OnChangeDate = this.OnChangeDate.bind(this);\n        this.OnChangePinCode = this.OnChangePinCode.bind(this);\n        this.OnChangeDistrictCode = this.OnChangeDistrictCode.bind(this);\n        this.OnChangeVaccine = this.OnChangeVaccine.bind(this);\n\n        this.SelectVaccinesWithDate = this.SelectVaccinesWithDate.bind(this);\n        this.OnSubmitPinCode = this.OnSubmitPinCode.bind(this);\n        this.OnSubmitDistrict = this.OnSubmitDistrict.bind(this);\n        this.OnGetCenterCallback = this.OnGetCenterCallback.bind(this);\n\n        this.GetVaccineSessionChild = React.createRef();\n        this.googleMapRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // initial load\n        this.GetState();\n        this.OnChangeState(1)\n    }\n\n    componentWillUnmount(){\n        this.setState({\n            is_unmounted: true\n        })\n    }\n\n    GetState(){\n        axios.get(config.COWIN_BASE_URL + CUrl.GET_STATES, this.options).then( response => {\n            if(response.status === 200 && response.data.states.length > 0) {\n                this.setState({\n                    states: response.data.states\n                })\n            }else{\n                console.log(response);\n            }\n        }).catch( err => console.error(err));\n    }\n\n    OnChangeState(state){\n        axios.get(config.COWIN_BASE_URL + CUrl.GET_DISTRICT.replace(\"<DISTRICT>\", state), this.options).then( response => {\n            if(response.status === 200 && response.data.districts.length > 0) {\n                this.setState({\n                    districts: response.data.districts\n                })\n            }else{\n                console.error(response);\n            }\n        }).catch( err => console.error(err));\n    }\n\n    OnChangeDistrictCode(code){\n        this.setState({\n            district_id: code\n        })\n    }\n\n    OnSubmitPinCode(){\n        if(this.state.pin_code.length !==6) return;\n        this.GaEventTracker(\"Pin code Submitted\", this.state.pin_code);\n        let date = moment(this.state.vaccine_date).format(\"DD-MM-YYYY\");\n        GetCenters(config.COWIN_BASE_URL + CUrl.CALENDAR_BY_PIN_CODE.replace(\"<PINCODE>\", this.state.pin_code).replace(\"<DATE>\", date).replace(\"<VACCINE>\", this.state.vaccine), this.OnGetCenterCallback);\n    }\n\n    OnSubmitDistrict(){\n        if(this.state.district_id.length <= 0) return;\n        this.GaEventTracker(\"District Submitted\", this.state.pin_code);\n        let date = moment(this.state.vaccine_date).format(\"DD-MM-YYYY\");\n        GetCenters(config.COWIN_BASE_URL + CUrl.CALENDAR_BY_DISTRICT.replace(\"<DISTRICT_ID>\", this.state.district_id).replace(\"<DATE>\", date).replace(\"<VACCINE>\", this.state.vaccine), this.OnGetCenterCallback);\n    }\n\n    OnGetCenterCallback(centers){\n        this.setState({\n            centers: centers\n        })\n        this.GaEventTracker(\"Received Centers\")\n        this.GetVaccineSessionChild.current.SetCenters(this.state.centers);\n        this.googleMapRef.current.UpdateMarkers(this.state.centers);\n    }\n\n    OnChangeVaccine(event){\n        this.setState({\n            vaccine: event.target.value\n        })\n    }\n\n    OnChangeDate(event){\n        this.setState({\n            vaccine_date: event.target.value\n        })\n        this.GetVaccineSessionChild.current.OnChangeDate(event.target.value);\n    }\n\n    OnChangePinCode(event){\n        this.setState({\n            pin_code: event.target.value,\n            is_valid_pin_code: event.target.value.length === 6\n        })\n    }\n\n    SelectVaccinesWithDate() {\n        return (\n            <div>\n                <select className={\"form-control no-input-shadow mt-2\"} value={this.state.vaccine} onChange={this.OnChangeVaccine}>\n                    <option value=\"\">All Vaccine</option>\n                    <option value={vaccine.COVAXIN}>{vaccine.COVAXIN}</option>\n                    <option value={vaccine.COVISHIELD}>{vaccine.COVISHIELD}</option>\n                </select>\n                <FormControl className={\"no-input-shadow mt-2\"} placeholder={\"Enter start date\"} type={\"date\"} value={this.state.vaccine_date} onChange={this.OnChangeDate}/>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Container className={\"position-relative\"}>\n                <h5>Search Vaccine sessions with</h5>\n                <Tabs defaultActiveKey=\"home\" transition={false} id=\"noanim-tab-example\">\n                    <Tab eventKey=\"home\" title=\"Pin code\">\n                        <div className=\"bg-white p-4 justify-content-center d-flex align-items-center\" style={{height:300}}>\n                            <div className={\"col-md-6\"}>\n                                <FormControl className={\"no-input-shadow\"} placeholder={\"Enter pin code\"} value={this.state.pin_code} onChange={this.OnChangePinCode}/>\n                                <this.SelectVaccinesWithDate />\n                                <Button variant={\"primary\"} className={\"form-control mt-4\"} onClick={this.OnSubmitPinCode} disabled={!this.state.is_valid_pin_code}> Find vaccine slots</Button>\n                            </div>\n                        </div>\n                    </Tab>\n                    <Tab eventKey=\"profile\" title=\"District\">\n                        <div className=\"bg-white p-4 justify-content-center d-flex align-items-center\" style={{height:300}}>\n                            <div className=\"col-md-6\" >\n                                <select className={\"form-control no-input-shadow\"} placeholder={\"Select state\"} onChange={e => {this.OnChangeState(e.target.value)}}>\n                                    {\n                                        this.state.states.map(it => <option key={it.state_id} value={it.state_id}>{it.state_name}</option>)\n                                    }\n                                </select>\n                                <select className={\"form-control no-input-shadow mt-2\"} placeholder={\"Select district\"} value={this.state.district_id} onChange={ e => {this.OnChangeDistrictCode(e.target.value)}}>\n                                    {\n                                        this.state.districts.map(it => <option key={it.district_id} value={it.district_id}>{it.district_name}</option>)\n                                    }\n                                </select>\n                                <this.SelectVaccinesWithDate />\n                                <Button variant={\"primary\"} className={\"form-control mt-4\"} onClick={this.OnSubmitDistrict}> Find vaccine slots</Button>\n                            </div>\n                        </div>\n                    </Tab>\n                    {/*<Tab eventKey=\"near_me\" title=\"Nearby Me\">*/}\n                        {/*<div className=\"bg-white p-4 justify-content-center d-flex align-items-center\" style={{height:300}}>*/}\n                        {/*    <div className=\"col-md-6\" >*/}\n                        {/*    </div>*/}\n                        {/*</div>*/}\n                    {/*</Tab>*/}\n                </Tabs>\n                {\n                    // this.props.user.token? \"\": <Redirect to={AppUrl.REGISTER_OTP} exact={true} />\n                }\n                <GoogleMapComponent ref={this.googleMapRef} />\n                <VaccineSessionTable ref={this.GetVaccineSessionChild} />\n                <div style={{height:400}}></div>\n            </Container>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ user }) => (\n    {\n        user: user\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (GetVaccineSession);\n","import { UserActionTypes } from \"./user.types\";\n\nexport const setTxnId = txnId => (\n    {\n        type: UserActionTypes.SET_TXN_ID,\n        payload:txnId\n    }\n)\n\nexport const setToken = token => (\n    {\n        type: UserActionTypes.SET_USER_TOKEN,\n        payload:token\n    }\n)\n\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport './App.css';\nimport GetVaccineSession from \"../vaccinesessions/GetVaccineSession\";\nimport {initDB} from \"react-indexed-db\";\nimport {DBConfig} from \"../vaccinesessions/IndexDbManager\";\n\ninitDB(DBConfig);\n\nclass App extends Component {\n\n    state = {\n        is_notification_granted: true,\n        top_notification_content: \"Grant notification permission manually, which will get use to notify if any slots available.\"\n    }\n\n    constructor(props) {\n        super(props);\n        this.OnNotificationPermissionChange = this.OnNotificationPermissionChange.bind(this);\n    }\n\n    componentDidMount(){\n        if(!this.IsPushNotificationSupported()){\n            this.setState({\n                is_notification_granted: false,\n                top_notification_content: \"Notifications are not supported by your browser :(\"\n            })\n        }else{\n            this.OnNotificationPermissionChange();\n            if(Notification.permission === \"default\"){\n                Notification.requestPermission(this.OnNotificationPermissionChange).then(r => {\n                    // intentional\n                });\n            }\n        }\n    }\n\n    OnNotificationPermissionChange(){\n        if(Notification.permission === \"denied\"){\n            this.setState({\n                is_notification_granted: false\n            })\n        }\n    }\n\n    IsPushNotificationSupported() {\n        return \"serviceWorker\" in navigator && \"PushManager\" in window;\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {\n                    !this.state.is_notification_granted &&\n                    <div className=\"bg-danger text-center text-white\">\n                        {this.state.top_notification_content}\n                    </div>\n                }\n                <Router>\n                    <Switch>\n                        {/*        /!*<Redirect from={\"/\"} to={AppUrl.GET_VACCINATION_SESSION} exact={true} />*!/*/}\n                        {/*        /!*<Route path={AppUrl.REGISTER_OTP} exact={true} component={RegisterOtp}/>*!/*/}\n                        <Route path={\"\"} exact={true} component={GetVaccineSession} />\n                        {/*        /!*<Redirect to={AppUrl.GET_VACCINATION_SESSION} from={\"*\"}/>*!/*/}\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://cra.link/PWA.'\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import {UserActionTypes} from \"./user.types\";\n\nconst INITIAL_STATE = {\n    txn_id:null,\n    token:null,\n}\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case UserActionTypes.SET_TXN_ID:\n            return {\n                ...state,\n                txn_id: action.payload\n            };\n        case UserActionTypes.SET_USER_TOKEN:\n            return {\n                ...state,\n                token: action.payload\n            };\n        default:\n            return state;\n    }\n}\nexport default userReducer;","export const PositionActionTypes = {\n    SET_LATITUDE: \"SET_LATITUDE\",\n    SET_LONGITUDE: \"SET_LONGITUDE\"\n}","import {PositionActionTypes} from \"./position.types\";\n\n\nconst INITIAL_STATE = {\n    latitude: 100,\n    longitude: 157\n}\n\nconst positionReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case PositionActionTypes.SET_LATITUDE:\n            return {\n                ...state,\n                latitude: action.payload\n            };\n        case PositionActionTypes.SET_LONGITUDE:\n            return {\n                ...state,\n                longitude: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport default positionReducer","import { combineReducers } from \"redux\";\nimport userReducer from \"./user/user.reducer\";\nimport positionReducer from \"./position/position.reducer\";\n\nexport default combineReducers(\n    {\n        user: userReducer,\n        position: positionReducer\n    }\n)","import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './root-reducer';\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    // blacklist: ['navigation']\n    // whiteList: ['navigation']\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n// export default () => {\n//     let store = createStore(persistedReducer)\n//     let persist_store = persistStore(store)\n//     return { store, persist_store }\n// }\n\nexport const store = createStore(persistedReducer);\nexport const persist_store = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './main/cowin/components/app/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport {store, persist_store} from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { faUser, faCoffee, faAddressBook, faLocationArrow, faSearchLocation, faEdit, faTrash, faClinicMedical } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n    fab,\n    faUser,\n    faCoffee,\n    faAddressBook,\n    faLocationArrow,\n    faSearchLocation,\n    faEdit,\n    faTrash,\n    faClinicMedical\n)\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <PersistGate loading={null} persistor={persist_store}>\n              <BrowserRouter/>\n              <App/>\n          </PersistGate>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}