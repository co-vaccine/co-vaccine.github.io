{"version":3,"sources":["serviceWorkerRegistration.ts","reportWebVitals.ts","redux/user/user.types.js","redux/user/user.actions.js","main/cowin/components/vaccinesessions/VaccineSessionTable.jsx","main/cowin/components/google/analytics/GoogleAnalyticsEventTracker.jsx","main/cowin/components/google/WhatsAppButtonRender.jsx","main/cowin/components/google/WhatsAppSubscribeManager.jsx","redux/centers/center.types.js","redux/centers/center.actions.js","main/cowin/components/google/GoogleLoginButton.jsx","main/cowin/static/images/map.webp","main/cowin/components/vaccinesessions/CowinRequestManager.jsx","main/cowin/components/google/GoogleMapComponent.jsx","main/cowin/components/google/TrackingPinCodes.jsx","main/cowin/components/vaccinesessions/IndexDbManager.jsx","main/cowin/components/google/analytics/SyncPinCodeManager.jsx","main/cowin/components/modal/NoteModal.jsx","main/cowin/components/footer/Footer.jsx","main/cowin/static/images/stock.webp","main/cowin/components/vaccinesessions/NavTabs.jsx","main/cowin/components/vaccinesessions/GetVaccineSession.jsx","main/cowin/components/app/App.js","redux/user/userReducer.js","redux/position/position.types.js","redux/position/position.reducer.js","redux/centers/centerReducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","waiting","postMessage","type","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","UserActionTypes","setToken","token","payload","setSubscriptions","subscriptions","VaccineSessionTable","props","week","map","it","moment","add","format","filters","text","value","active","VaccineCenter","sessions","filter","session","some","min_age_limit","vaccine","available_capacity","length","className","name","Badge","variant","fee_type","address","block_name","district_name","state_name","pincode","date","index","findIndex","href","Constant","COWIN_REGISTRATION","target","rel","Button","data-toggle","data-placement","title","session_id","Math","random","center_id","OnFilterClick","bind","this","setState","centers","button","onClick","Table","striped","bordered","hover","day","Component","connect","user","dispatch","GoogleAnalyticsEventTracker","category","action","label","ReactGA","event","WhatsAppButtonRender","renderProps","disabled","icon","size","WhatsAppSubscribeManager","mobile_number","is_valid_mobile","show_mobile_input","submitting_mobile","options","headers","GetButton","includes","SUBSCRIPTION_WA","OnWaSubscriptionBtnToggle","OnMobileChange","OnSubmitMobile","IsSubscriptionContainsWa","axios","post","BACKEND_BASE_URL","BackendUrls","NOTIFICATION_SUBSCRIBED_URL","res","data","subscription","callback","push","NOTIFICATION_UNSUBSCRIBED_URL","indexOf","pop","number","replace","FormControl","placeholder","onChange","varient","style","width","CenterActionTypes","setTrackingCenters","GoogleLoginButton","is_google_login_supported","GaEventTracker","responseGoogle","response","accessToken","exchangeToken","GET_TOKEN_URL","getUser","onSubscriptionResponseCallback","clientId","GMAIL_API_CLIENT_ID","render","buttonText","onFailure","cookiePolicy","isSignedIn","setTrackingCenter","GetCenters","url","fetch","json","GoogleMapComponent","my_position","lat","lng","map_center","map_zoom","maps_data","show_map","markers","is_not_location_permission","HandleApiLoaded","maps","OnClickCenterBox","LocateMyPosition","OnGetNearbyCenterCallback","DrawMarkersOnMap","GetNumber","SetMyPosition","OnGrantLocationPermission","permissions","query","geolocation","getCurrentPosition","position","coords","latitude","longitude","SubmitLatLong","COWIN_BASE_URL","CUrl","CENTERS_BY_LAT_LONG","setNearbyCenter","nearby_centers","forEach","long","marker","Marker","color","fontWeight","addListener","setAnimation","Animation","BOUNCE","setTimeout","child_parent","$","parent","scroller","offset","top","scrollTop","animate","SetActiveCenterBox","animation","DROP","scaledSize","Size","strNum","Number","parseFloat","toFixed","center","directionsService","DirectionsService","directionsRenderer","DirectionsRenderer","setMap","destination","request","origin","travelMode","TravelMode","DRIVING","route","status","setDirections","removeClass","addClass","Row","Col","md","height","bootstrapURLKeys","key","GOOGLE_MAP_API","language","defaultCenter","defaultZoom","zoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","onChildMouseEnter","OnMouseHoverOnHospital","right","bottom","borderRadius","src","mapImage","alt","background","maxHeight","overflowY","is_server_up","id","SetDirection","fontSize","isTrackingContains","addToTracking","setCentersUpdateDone","is_centers_updated","TrackingPinCodes","tracking_centers","t_center","pin_code","removeFromTracking","DBConfig","version","DB_VERSION","objectStoresMeta","store","storeConfig","keyPath","storeSchema","keypath","unique","GetAllCenters","getAll","useIndexedDB","AddCenter","pinCode","SyncPinCodeManager","IsTrackingContains","RemoveFromTracking","RemovePinCodeFromBackend","SetTrackingCentersFromDbIndex","SyncPinCodeWithBackend","GetUser","AddToTracking","SetLocation","OnLocationPermissionGranted","item","GET_USER_INFO","SYNC_PIN_CODE_URL","pin_codes","p","clear","REMOVE_PIN_CODE_URL","debug","deleteRecord","RemoveCenter","tracking_center","i","e","AddCentersToBackend","ADD_PIN_CODE_URL","NoteModal","showModal","handleClose","textBody","Modal","show","onHide","Header","closeButton","Title","Body","Footer","is_valid_feedback","is_feedback_btn_disabled","feedback_text","OnSubmitFeedback","OnChangeFeedback","USER_FEEDBACK","feedback","padding","PinCode","District","Subscriptions","NearMe","initialize","GOOGLE_ANALYTICS_UA","GetVaccineSession","district_id","is_valid_pin_code","is_valid_district","vaccine_date","states","districts","show_modal","modal_text","can_show_tracking_center_button","pageview","pathname","search","GetState","OnChangeState","OnChangeDate","OnChangePinCode","OnChangeDistrictCode","SelectVaccinesWithDate","OnSubmitPinCode","OnSubmitDistrict","OnGetCenterCallback","OnLogout","closeModal","CheckHealth","HEALTH_CHECK","setServerStat","undefined","get","GET_STATES","err","GET_DISTRICT","code","CALENDAR_BY_PIN_CODE","CALENDAR_BY_DISTRICT","setCenters","center_table","document","getElementsByClassName","backgroundColor","GetVaccineSessionChild","current","LOGOUT_URL","Container","Tabs","defaultActiveKey","transition","Tab","eventKey","state_id","backgroundImage","whats_image","backgroundPosition","backgroundSize","stat","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","openDBRequest","open","onupgradeneeded","database","result","objectStoreNames","contains","oldVersion","deleteObjectStore","createObjectStore","createIndex","onsuccess","deleteDatabase","deleteIfOldDatabase","initDB","App","is_location_granted","top_notification_content","OnNotificationPermissionChange","CheckForNotificationPermission","positionError","PERMISSION_DENIED","IsPushNotificationSupported","Notification","permission","requestPermission","r","path","exact","component","INITIAL_STATE","userReducer","PositionActionTypes","positionReducer","centerReducer","combineReducers","persistConfig","storage","blacklist","persistedReducer","persistReducer","rootReducer","createStore","persist_store","persistStore","library","fab","faUser","faCoffee","faAddressBook","faLocationArrow","faSearchLocation","faEdit","faTrash","faClinicMedical","faWhatsapp","faCommentDots","faMapPin","faMapMarked","faEnvelopeOpen","ReactDOM","StrictMode","loading","persistor","getElementById","URL","process","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.d1bf689c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://cra.link/PWA.'\n                );\n\n                if(registration.waiting){\n                  registration.waiting.postMessage({ type: 'SKIP_WAITING' });\n                }\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","export const UserActionTypes = {\n    SET_USER_TOKEN: 'SET_USER_TOKEN',\n    SET_SERVER_STAT: 'SET_SERVER_STAT',\n    SET_USER_SUBSCRIPTION: 'SET_USER_SUBSCRIPTION'\n}","import { UserActionTypes } from \"./user.types\";\n\nexport const setToken = token => (\n    {\n        type: UserActionTypes.SET_USER_TOKEN,\n        payload:token\n    }\n)\n\nexport const setSubscriptions = subscriptions => (\n    {\n        type: UserActionTypes.SET_USER_SUBSCRIPTION,\n        payload:subscriptions\n    }\n)\n\nexport const setServerStat = stat => (\n    {\n        type: UserActionTypes.SET_SERVER_STAT,\n        payload: stat\n    }\n)\n","import React, {Component} from 'react';\nimport {Badge, Button, Table} from \"react-bootstrap\";\nimport moment from \"moment\";\nimport Constant from \"../../constants/Constant.json\";\nimport {setToken} from \"../../../../redux/user/user.actions\";\nimport {connect} from \"react-redux\";\n\nclass VaccineSessionTable extends Component {\n    state = {\n        week: [0 ,1, 2, 3, 4, 5, 6].map(it=> moment().add(it, 'day').format(\"DD-MM-YY\")),\n        filters: [{\n            text: \"Age 18-45\",\n            value: 18,\n            active: false,\n        }, {\n            text: \"Age 45+\",\n            value: 45,\n            active: false,\n        }, {\n            text: \"Covaxin\",\n            value: \"COVAXIN\",\n            active: false,\n        }, {\n            text: \"Covishield\",\n            value: \"COVISHIELD\",\n            active: false,\n        }, {\n            text: \"Sputnik V\",\n            value: \"SPUTNIKV\",\n            active: false,\n        }, {\n            text: \"Available\",\n            value: \"Available\",\n            active: false,\n        }]\n    }\n\n    constructor(props) {\n        super(props);\n        this.OnFilterClick = this.OnFilterClick.bind(this);\n    }\n\n    OnChangeDate(date) {\n        this.setState({\n            week: [0 ,1, 2, 3, 4, 5, 6].map(it=> moment(date, 'YYYY-MM-DD').add(it, 'day').format(\"DD-MM-YY\"))\n        })\n    }\n\n    OnFilterClick(text) {\n        this.state.filters.map(it => {\n            if(it.text === text){\n                it.active = !it.active;\n            }\n            return it;\n        });\n        this.setState({\n            filters: this.state.filters\n        });\n    }\n\n    VaccineCenter = (it) => {\n        let sessions = it.sessions.filter(session => {\n            return !this.state.filters.filter(filter => filter.active).some(filter => {\n                return !(filter.value === session.min_age_limit ||\n                    filter.value === session.vaccine ||\n                    (filter.value === \"Available\" &&  session.available_capacity > 0))\n            });\n        });\n\n        return sessions.length> 0 && <tr key={it.center_id}>\n            <td>\n                <div>\n                    <div className={\"font-weight-bolder\"}>\n                        {it.name}\n                        <sup className={\"small\"}>\n                            {' '}<Badge variant=\"secondary\">{it.fee_type}</Badge>\n                        </sup>\n                    </div>\n                    <p className={\"text-secondary small m-0\"}>{it.address}, {it.block_name}</p>\n                    <p className={\"text-secondary small m-0\"}>{it.district_name}, {it.state_name}, {it.pincode}</p>\n                </div>\n            </td>\n            {\n                this.state.week.map(date => {\n                    let index = sessions.findIndex(session => session.date === moment(date, 'DD-MM-YY').format('DD-MM-YYYY'));\n                    if (index >= 0) {\n                        return (\n                            <td key={sessions[index].session_id}>\n                                <div>\n                                    <span className={\"\"}>{sessions[index].vaccine}</span>\n                                    <p className={\"small m-0 text-danger\"}>For {sessions[index].min_age_limit}+</p>\n                                    {\n                                        sessions[index].available_capacity ?\n                                            <a href={Constant.COWIN_REGISTRATION}\n                                               target=\"_blank\" rel=\"noreferrer\">\n                                                <Button variant={\"success p-1\"}\n                                                        data-toggle=\"tooltip\"\n                                                        data-placement=\"top\"\n                                                        title=\"Tooltip on top\">\n                                                    Book <sup><Badge\n                                                    variant={\"primary\"}>{sessions[index].available_capacity}</Badge></sup>\n                                                </Button>\n                                            </a> :\n                                            <Button variant={\"danger p-0\"}>Booked</Button>\n                                    }\n                                </div>\n                            </td>\n                        );\n                    } else {\n                        return (<td key={Math.random()}/>);\n                    }\n                })\n            }\n        </tr>;\n    }\n\n    render() {\n        return (\n            <div className={\"bg-white shadow overflow-auto rounded-lg mt-2 p-0\"}>\n                {\n                    this.props.vaccine.centers.length > 0 &&\n                    this.state.filters.map(button =>{\n                        if(button.active){\n                            return (<Button variant={\"primary m-1 no-input-shadow\"} key={button.text} onClick={()=>this.OnFilterClick(button.text)}>\n                                {button.text}\n                            </Button>)\n                        }else{\n                            return (<Button variant={\"outline-primary m-1 no-input-shadow\"} key={button.text} onClick={()=>this.OnFilterClick(button.text)}>\n                                {button.text}\n                            </Button>)\n                        }\n                    })\n                }\n                {\n                    this.props.vaccine.centers.length > 0 &&\n                    <Table striped bordered hover>\n                        <thead>\n                        <tr>\n                            <th>Name</th>\n                            {\n                                this.state.week.map(day =>\n                                    <th key={\"th-\" + day}>{day}</th>\n                                )\n                            }\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            this.props.vaccine.centers.map(it =>\n                                {\n                                    return this.VaccineCenter(it)\n                                }\n                            )\n                        }\n                        </tbody>\n                    </Table>\n                }\n                {\n                    this.props.vaccine.centers.length <=0 && <div className=\"text-center font-weight-bold p-4 no-center-table-replacer\">No centers are available for now, try to search for another pin code.</div>\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ user, vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (VaccineSessionTable);\n","import ReactGA from \"react-ga\";\n\nconst GoogleAnalyticsEventTracker = ( category = \"Event Category\") => {\n    return (action =\"action\", label=\"label\") => {\n        ReactGA.event({category, action, label})\n    };\n}\n\nexport default GoogleAnalyticsEventTracker;","import {Button} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nexport const WhatsAppButtonRender = (renderProps) => (\n    <Button onClick={renderProps.onClick} disabled={renderProps.disabled} variant={\"primary\"} className={\"shadow my-1\"}>\n        <FontAwesomeIcon icon={'comment-dots'} size={\"3x\"} />\n        <div>\n            {\n                renderProps.text ||\n                \"Login and subscribe SMS notification\"\n            }\n        </div>\n    </Button>\n)","import React, {Component} from 'react';\nimport {WhatsAppButtonRender} from \"./WhatsAppButtonRender\";\nimport {setSubscriptions} from \"../../../../redux/user/user.actions\";\nimport {connect} from \"react-redux\";\nimport config from \"../../config.json\";\nimport BackendUrls from \"../../constants/BackendUrls.json\";\nimport axios from \"axios\";\nimport Constant from \"../../constants/Constant.json\";\nimport {Button, FormControl} from \"react-bootstrap\";\n\nclass WhatsAppSubscribeManager extends Component {\n    state={\n        mobile_number: \"\",\n        is_valid_mobile: false,\n        show_mobile_input: false,\n        submitting_mobile: false\n    }\n\n    options = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Token ' + this.props.user.token\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.OnWaSubscriptionBtnToggle = this.OnWaSubscriptionBtnToggle.bind(this);\n        this.OnMobileChange = this.OnMobileChange.bind(this);\n        this.OnSubmitMobile = this.OnSubmitMobile.bind(this);\n    }\n\n    IsSubscriptionContainsWa(){\n        return this.props.user.subscriptions && this.props.user.subscriptions.includes(Constant.SUBSCRIPTION_WA);\n    }\n\n    OnSubmitMobile() {\n        if (this.IsSubscriptionContainsWa()) return;\n        this.setState({\n            submitting_mobile: true\n        })\n\n        const payload = {\n            'subscription': Constant.SUBSCRIPTION_WA,\n            'mobile': this.state.mobile_number\n        }\n        axios.post(config.BACKEND_BASE_URL + BackendUrls.NOTIFICATION_SUBSCRIBED_URL, payload, this.options)\n            .then(res => {\n                if (res.data[\"status\"] === \"success\" || res.data[\"message\"] === \"you already subscribed\") {\n                    let subscription = this.props.user.subscriptions;\n                    this.props.callback && this.props.callback(res.data[\"message\"]);\n                    if(subscription) {\n                        subscription.push(Constant.SUBSCRIPTION_WA);\n                        this.props.setSubscriptions(subscription);\n                    }\n                }else {\n                    this.setState({\n                        submitting_mobile: false,\n                        show_mobile_input: false\n                    })\n                }\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({\n                    submitting_mobile: false\n                })\n            });\n    }\n\n    OnWaSubscriptionBtnToggle(){\n        if(this.IsSubscriptionContainsWa()){\n            const payload = {\n                'subscription': Constant.SUBSCRIPTION_WA,\n            }\n\n            axios.post(config.BACKEND_BASE_URL + BackendUrls.NOTIFICATION_UNSUBSCRIBED_URL, payload, this.options)\n                .then(res => {\n                    if (res.data[\"status\"] === \"success\") {\n                        let subscription = this.props.user.subscriptions;\n                        if(subscription) {\n                            subscription[subscription.indexOf(Constant.SUBSCRIPTION_WA)] = subscription[subscription.length - 1]\n                            subscription.pop();\n                            this.props.setSubscriptions(subscription);\n                        }\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n        else {\n            this.setState({\n                show_mobile_input: true\n            })\n        }\n    }\n\n    OnMobileChange(event){\n        let number = event.target.value.replace(/^0+/, '')\n        this.setState({\n            mobile_number: number,\n            is_valid_mobile: event.target.value.length === 10\n        })\n    }\n\n    GetButton = () => {\n        if(this.props.user.subscriptions && this.props.user.subscriptions.includes(Constant.SUBSCRIPTION_WA))\n        {\n            return (<WhatsAppButtonRender text={\"Unsubscribe text SMS notification\"}\n                                  onClick={this.OnWaSubscriptionBtnToggle}/>);\n        }\n        return (<WhatsAppButtonRender text={\"Subscribe text SMS notification\"} onClick={this.OnWaSubscriptionBtnToggle}/>);\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.show_mobile_input?\n                        <div className={\"shadow rounded-lg p-1 border-primary border\"}>\n                            <FormControl className={\"no-input-shadow\"}\n                                         placeholder={\"Enter mobile number\"}\n                                         type={\"number\"}\n                                         value={this.state.mobile_number}\n                                         onChange={this.OnMobileChange}\n                                         disabled={this.state.submitting_mobile}\n                            />\n                            <Button varient={\"primary\"} style={{width: \"100%\"}} className={\"mt-2\"} disabled={!this.state.is_valid_mobile || this.state.submitting_mobile} onClick={this.OnSubmitMobile}> Subscribe SMS </Button>\n                        </div>: <this.GetButton />\n                }\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ user }) => (\n    {\n        user: user\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setSubscriptions: subscriptions => dispatch(setSubscriptions(subscriptions)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (WhatsAppSubscribeManager);\n","export const CenterActionTypes = {\n    SET_CENTERS: \"SET_CENTERS\",\n    SET_TRACKING_CENTER: \"SET_TRACKING_CENTER\",\n    CENTER_UPDATE_DONE: \"CENTER_UPDATE_DONE\",\n    SET_NEARBY_CENTERS: \"SET_NEARBY_CENTERS\"\n}","import { CenterActionTypes } from \"./center.types\";\n\nexport const setCenters = centers => (\n    {\n        type: CenterActionTypes.SET_CENTERS,\n        payload: centers\n    }\n)\n\nexport const setNearbyCenter = centers => (\n    {\n        type: CenterActionTypes.SET_NEARBY_CENTERS,\n        payload: centers\n    }\n)\n\nexport const setTrackingCenters = centers => (\n    {\n        type: CenterActionTypes.SET_TRACKING_CENTER,\n        payload: centers\n    }\n)\n\nexport const setCentersUpdateDone = () => (\n    {\n        type: CenterActionTypes.CENTER_UPDATE_DONE,\n        is_centers_updated: false\n    }\n)","import React, {Component} from 'react';\nimport GoogleLogin from \"react-google-login\";\nimport config from \"../../config.json\";\nimport BackendUrls from \"../../constants/BackendUrls.json\";\nimport {WhatsAppButtonRender} from \"./WhatsAppButtonRender\";\nimport axios from \"axios\";\nimport {setSubscriptions, setToken} from \"../../../../redux/user/user.actions\";\nimport {connect} from \"react-redux\";\nimport WhatsAppSubscribeManager from \"./WhatsAppSubscribeManager\";\nimport {setTrackingCenters} from \"../../../../redux/centers/center.actions\";\nimport GoogleAnalyticsEventTracker from \"./analytics/GoogleAnalyticsEventTracker\";\n\nclass GoogleLoginButton extends Component {\n\n    state = {\n        is_google_login_supported: true,\n    }\n\n    GaEventTracker = GoogleAnalyticsEventTracker();\n\n    constructor(props) {\n        super(props);\n        this.responseGoogle = this.responseGoogle.bind(this);\n        this.exchangeToken = this.exchangeToken.bind(this);\n    }\n\n    exchangeToken(accessToken){\n        const options = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        };\n\n        axios.post(config.BACKEND_BASE_URL + BackendUrls.GET_TOKEN_URL, {\"access_token\": accessToken}, options)\n            .then(res => {\n                this.props.setToken(res.data[\"token\"]);\n                this.props.getUser();\n            })\n            .catch(error => {\n                this.GaEventTracker(\"Fail GET User\", error);\n                console.log(error);\n            });\n    }\n\n    responseGoogle = (response) => {\n        this.GaEventTracker(\"AUTH 2.0 success\");\n        if(response.error === \"idpiframe_initialization_failed\"){\n            this.setState({\n                is_google_login_supported: false\n            })\n        }\n\n        if(response.accessToken) {\n            this.exchangeToken(response.accessToken);\n        }\n    }\n\n    render() {\n        if(this.state.is_google_login_supported) {\n            if (!this.props.user.token) {\n                return (\n                    <GoogleLogin\n                        clientId={config.GMAIL_API_CLIENT_ID}\n                        render={WhatsAppButtonRender}\n                        buttonText=\"Login\"\n                        onSuccess={this.responseGoogle}\n                        onFailure={this.responseGoogle}\n                        cookiePolicy={'single_host_origin'}\n                        isSignedIn={true}\n                    />\n                );\n            } else {\n                return <WhatsAppSubscribeManager callback={this.props.onSubscriptionResponseCallback} />\n            }\n        }\n        else{\n            return (\n                <div className=\"bg-white rounded-lg p-2 red-shadow btn my-1\">\n                    Google Login not supported, please try another browser or close icognito mode.\n                </div>\n            );\n        }\n    }\n}\n\n\nconst mapStateToProps = ({ user,vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token)),\n    setSubscriptions: subscriptions => dispatch(setSubscriptions(subscriptions)),\n    setTrackingCenter: centers => dispatch(setTrackingCenters(centers))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (GoogleLoginButton);\n","export default __webpack_public_path__ + \"static/media/map.1d62b7a6.webp\";","import config from \"../../config.json\";\nimport CUrl from \"../../constants/CowinUrl.json\";\nimport moment from \"moment\";\nimport GoogleAnalyticsEventTracker from \"../google/analytics/GoogleAnalyticsEventTracker\";\n\nconst GaEventTracker = GoogleAnalyticsEventTracker();\n\nfunction GetCenters (url, callback) {\n    GaEventTracker(\"Total cowin-api requests\", url)\n    fetch(url)\n        .then(response => response.json())\n        .then(data => callback(data.centers));\n}\n\nfunction CheckForTheCenters (pincode, callback) {\n    GaEventTracker(\"[SW] api-events\")\n    console.log(\"getting details for pin code: \" + pincode);\n    let  date = moment().format(\"DD-MM-YYYY\");\n    GetCenters(config.COWIN_BASE_URL + CUrl.CALENDAR_BY_PIN_CODE.replace(\"<PINCODE>\", pincode).replace(\"<DATE>\", date).replace(\"<VACCINE>\", \"\"), callback);\n}\n\nexport {CheckForTheCenters, GetCenters};","import React, {Component} from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport {Badge, Button, Col, Row} from \"react-bootstrap\";\nimport Constant from \"../../constants/Constant.json\";\nimport $ from 'jquery';\nimport moment from \"moment\";\nimport GoogleAnalyticsEventTracker from \"../google/analytics/GoogleAnalyticsEventTracker\";\nimport GoogleLoginButton from \"./GoogleLoginButton\";\nimport {setToken} from \"../../../../redux/user/user.actions\";\nimport {connect} from \"react-redux\";\nimport {setCentersUpdateDone, setNearbyCenter, setTrackingCenters} from \"../../../../redux/centers/center.actions\";\nimport config from \"../../config.json\";\nimport mapImage from \"../../static/images/map.webp\";\nimport {GetCenters} from \"../vaccinesessions/CowinRequestManager\";\nimport CUrl from \"../../constants/CowinUrl.json\";\n\nclass GoogleMapComponent extends Component {\n\n    state = {\n        my_position: {lat: 12.97, lng: 77.59},\n        map_center: {lat: 12.97, lng: 77.59},\n        map_zoom: 12,\n        maps_data: {},\n        show_map: false,\n        markers: [],\n        is_not_location_permission: false\n    }\n\n    GaEventTracker = GoogleAnalyticsEventTracker();\n\n    constructor(props) {\n        super(props);\n        this.OnClickCenterBox = this.OnClickCenterBox.bind(this);\n        this.LocateMyPosition = this.LocateMyPosition.bind(this);\n        this.OnGetNearbyCenterCallback = this.OnGetNearbyCenterCallback.bind(this);\n        this.DrawMarkersOnMap = this.DrawMarkersOnMap.bind(this);\n        this.GetNumber = this.GetNumber.bind(this);\n        this.SetMyPosition = this.SetMyPosition.bind(this);\n        this.OnGrantLocationPermission = this.OnGrantLocationPermission.bind(this);\n    }\n\n    componentDidMount() {\n        if(navigator.permissions && navigator.permissions.query) {\n            navigator.permissions.query({name: 'geolocation'}).then(permissions => {\n                if (permissions.state === \"granted\") {\n                    this.OnGrantLocationPermission();\n                } else if(permissions.state === \"prompt\") {\n                    this.setState({\n                        is_not_location_permission: true\n                    });\n                }\n            });\n        } else {\n            this.OnGrantLocationPermission();\n        }\n    }\n\n    OnGrantLocationPermission(){\n        if(!navigator.geolocation) {return;}\n        navigator.geolocation.getCurrentPosition((position) => {\n            this.setState({\n                my_position: { lat:position.coords.latitude, lng: position.coords.longitude},\n                map_center: { lat:position.coords.latitude, lng: position.coords.longitude},\n            });\n            this.SubmitLatLong(position.coords);\n        });\n    }\n\n    SubmitLatLong(coords){\n        if(!coords) return;\n        GetCenters(config.COWIN_BASE_URL + CUrl.CENTERS_BY_LAT_LONG.replace(\"<LAT>\", coords.latitude).replace(\"<LONG>\", coords.longitude), this.OnGetNearbyCenterCallback);\n    }\n\n    OnGetNearbyCenterCallback(centers){\n        this.props.setNearbyCenter(centers);\n        this.GaEventTracker(\"Received Nearby Centers\");\n        this.setState({\n            show_map: true\n        })\n        this.DrawMarkersOnMap();\n    }\n\n    // RemoveAllMarkersFromMap(){\n    //     this.state.markers.forEach(marker => {\n    //         marker.setMap(null);\n    //     })\n    //     this.setState({\n    //         markers: []\n    //     })\n    // }\n\n    LocateMyPosition(){\n        this.setState({\n            map_center: this.state.my_position,\n            map_zoom: 13,\n        })\n    }\n\n    HandleApiLoaded = (map, maps) => {\n        this.setState({\n            maps_data: {\n                map: map,\n                maps: maps\n            }\n        });\n    }\n\n    DrawMarkersOnMap(){\n        if(!this.state.maps_data.map) {\n            setTimeout(this.DrawMarkersOnMap, 500);\n            return;\n        }\n        this.SetMyPosition();\n        let map = this.state.maps_data.map;\n        this.props.vaccine.nearby_centers.forEach(it => {\n            let position = { lat: this.GetNumber(it.lat), lng: this.GetNumber(it.long)};\n            let marker = new this.state.maps_data.maps.Marker({\n                position: position,\n                // animation: maps.Animation.DROP,\n                map,\n                // icon: {\n                //     url: \"https://atlas-content-cdn.pixelsquid.com/stock-images/hospital-3yL2QM6-600.jpg\",\n                //     size: maps.Size(10, 10),\n                // },\n                title: it.name,\n                label: {\n                    text:\"H\",\n                    color: \"white\",\n                    fontWeight: \"bold\",\n                }\n            })\n\n            marker.addListener(\"click\", () => {\n                marker.setAnimation(this.state.maps_data.maps.Animation.BOUNCE);\n                setTimeout(()=>{marker.setAnimation(null);}, 2000);\n            });\n\n            marker.addListener(\"mouseover\", () => {\n                const child_parent = $(\"#center-\" + it.center_id).parent();\n                const scroller = $(\".center-parent\");\n                let offset = child_parent.offset().top + scroller.scrollTop() - child_parent.parent().offset().top;\n                scroller.animate({scrollTop:offset}, 500);\n                this.SetActiveCenterBox(it.center_id);\n            })\n            this.state.markers.push(marker);\n        })\n    }\n\n    SetMyPosition() {\n        const maps = this.state.maps_data.maps;\n        const map = this.state.maps_data.map;\n        let marker = new this.state.maps_data.maps.Marker({\n            position: this.state.my_position,\n            animation: maps.Animation.DROP,\n            map,\n            icon: {\n                // url: \"https://www.clipartmax.com/png/full/219-2193698_white-button-clipart.png\",\n                url: \"https://w7.pngwing.com/pngs/81/570/png-transparent-profile-logo-computer-icons-user-user-blue-heroes-logo-thumbnail.png\",\n                scaledSize: new maps.Size(16, 16),\n            },\n            title: \"Me\",\n        });\n\n        marker.addListener(\"click\", () => {\n            marker.setAnimation(this.state.maps_data.maps.Animation.BOUNCE);\n            setTimeout(()=>{marker.setAnimation(null);}, 2000);\n        });\n    }\n\n    GetNumber(strNum){\n        return Number(parseFloat(strNum).toFixed(5));\n    }\n\n    SetDirection(center) {\n        this.GaEventTracker(\"Google map directions requests\")\n        let directionsService = new this.state.maps_data.maps.DirectionsService();\n        let directionsRenderer = new this.state.maps_data.maps.DirectionsRenderer();\n        directionsRenderer.setMap(this.state.maps_data.map);\n        let destination = { lat: this.GetNumber(center.lat), lng: this.GetNumber(center.long)}\n\n        let request = {\n            origin: this.state.my_position,\n            destination: destination,\n            travelMode: this.state.maps_data.maps.TravelMode.DRIVING,\n        };\n\n        directionsService.route(request, function(response, status) {\n            if (status === 'OK') {\n                directionsRenderer.setDirections(response);\n            }\n        });\n    }\n\n    SetActiveCenterBox(center_id) {\n        $('.center-box').removeClass('border-primary blue-shadow');\n        $('#center-'+center_id).addClass('border-primary blue-shadow');\n    }\n\n    OnClickCenterBox(center){\n        this.SetActiveCenterBox(center.center_id);\n        let position = {lat: parseFloat(center.lat), lng: parseFloat(center.long)};\n        this.setState({\n            map_center: position,\n            map_zoom: 14,\n        })\n    }\n\n    GetFormattedDate(date){\n        return moment(date, \"DD-MM-YYYY\").format(\"DD MMM\");\n    }\n\n    render() {\n        return (\n            <section>\n                <Row>\n                    <Col md={9} className={\"\"}>\n                        {\n                            (this.state.show_map > 0)?\n                            <div style={{height: 600, width: \"100%\"}} className={\"shadow position-relative rounded-lg overflow-hidden\"}>\n                                <GoogleMapReact\n                                    bootstrapURLKeys={{key: config.GOOGLE_MAP_API, language: \"en\"}}\n                                    defaultCenter={{lat: 12.97, lng: 77.59}}\n                                    center={this.state.map_center}\n                                    defaultZoom={10}\n                                    zoom={this.state.map_zoom}\n                                    yesIWantToUseGoogleMapApiInternals={true}\n                                    onGoogleApiLoaded={({map, maps}) => this.HandleApiLoaded(map, maps)}\n                                    onChildMouseEnter={this.OnMouseHoverOnHospital}\n                                >\n                                    {/*<MyLocationComponent*/}\n                                    {/*    lat={this.state.my_position.lat}*/}\n                                    {/*    lng={this.state.my_position.lng}*/}\n                                    {/*/>*/}\n                                </GoogleMapReact>\n                                <Button variant={\"light\"} className=\"my-location position-absolute shadow\" style={{right: 10, bottom:150, height: 38, width:38, borderRadius: 38}} onClick={this.LocateMyPosition}>\n                                    +\n                                </Button>\n                            </div>: <div style={{height: 600, width: \"100%\"}} className={\"shadow position-relative rounded-lg overflow-hidden\"}>\n                                <img src={mapImage} height=\"100%\"  alt={\"map\"}/>\n                                <div style={{height: \"100%\", width: \"100%\", top: 0, background: \"rgba(0,0,0, 0.5)\",}} className=\"p-2 flex-column position-absolute text-white font-weight-bold d-flex justify-content-center align-items-center\">\n                                    Allow location, to get centers nearby you\n                                    {\n                                        this.state.is_not_location_permission &&\n                                        <Button variant={\"primary\"} className={\"mt-4\"}\n                                                onClick={this.OnGrantLocationPermission}>\n                                            Grant Location Permission\n                                        </Button>\n                                    }\n                                </div>\n                            </div>\n                        }\n                    </Col>\n                    <Col md={3} style={{maxHeight: 600, overflowY:\"auto\"}} className=\"center-parent\">\n                        {\n                            this.props.user.is_server_up && !(this.props.user.subscriptions && this.props.user.subscriptions.includes(Constant.SUBSCRIPTION_WA)) &&\n                            <GoogleLoginButton getUser={this.props.getUser} onSubscriptionResponseCallback={this.props.onSubscriptionResponseCallback}/>\n                        }\n                        {\n                            (this.props.vaccine.nearby_centers.length === 0) && <Col className={\"p-0 py-1\"}>\n                                <div className={\"p-2 shadow rounded-lg border center-box bg-white btn font-weight-bold my-1\"} style={{width: \"100%\"}}>\n                                    No centers are available now\n                                </div>\n                            </Col>\n                        }\n                        {\n                            this.props.vaccine.nearby_centers.map(center =>\n                                <Col className={\"p-0 py-1\"} key={\"center-\" + center.center_id}>\n                                    <div className={\"p-1 shadow-sm hover-shadow rounded-lg border center-box bg-white\"}\n                                         id={\"center-\" + center.center_id} onClick={() => {\n                                        this.OnClickCenterBox(center)\n                                    }}>\n                                        <b>{center.name}</b>\n                                        <p className={\"text-secondary small m-0\"}>{center.location}, {center.block_name}</p>\n                                        <p className={\"text-secondary small m-0\"}>{center.district_name}, {center.state_name}, {center.pincode}</p>\n                                        <div className={\"text-primary btn px-0 small\"} onClick={() => {this.SetDirection(center)}}\n                                             style={{fontSize:11}}>\n                                            Show direction on map\n                                        </div>\n                                        <div>\n                                            {\n                                                this.props.isTrackingContains(Number(center.pincode)) ?\n                                                    \"\" :\n                                                    <Badge variant={\"primary\"} className={\"btn p-1 m-1\"} onClick={() => {\n                                                        this.props.addToTracking(Number(center.pincode))\n                                                    }}> Set Tracking</Badge>\n                                            }\n                                        </div>\n                                    </div>\n                                </Col>\n                            )\n                        }\n                    </Col>\n                </Row>\n\n                {/*<TrackModal*/}\n                {/*    show={this.state.modalShow}*/}\n                {/*    onHide={() => this.SetModalShow(false)}*/}\n                {/*/>*/}\n            </section>\n        );\n    }\n}\n\nconst mapStateToProps = ({ user, vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token)),\n    setNearbyCenter: centers => dispatch(setNearbyCenter(centers)),\n    setTrackingCenters: centers => dispatch(setTrackingCenters(centers)),\n    setCentersUpdateDone: () => dispatch(setCentersUpdateDone())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (GoogleMapComponent);\n","import React, {Component} from 'react';\nimport {Button} from \"react-bootstrap\";\nimport {connect} from \"react-redux\";\nimport {setTrackingCenters} from \"../../../../redux/centers/center.actions\";\n\nclass TrackingPinCodes extends Component {\n    componentDidMount() {\n        // this.SetTrackingCenters();\n    }\n\n    render() {\n        return (\n            <div className={\"shadow p-1 rounded-lg bg-white my-1\"}>\n                {\n                    this.props.vaccine.tracking_centers && this.props.vaccine.tracking_centers.length > 0?\n                        <h6 className={\"font-weight-bold btn\"}> Tracking pin codes 18-45</h6>:\n                        <h6 className={\"font-weight-bold btn\"}> No notification trackers </h6>\n                }\n                <hr />\n                {\n                    this.props.vaccine.tracking_centers && this.props.vaccine.tracking_centers.map(t_center =>{\n                        return (\n                            <div className={\"rounded p-2 m-1 font-weight-bold bg-cowin2 position-relative overflow-hidden\"} key={\"center-tr-\" + t_center.pin_code}>\n                                {t_center.pin_code}\n                                <Button variant={\"danger\"} onClick={() => {\n                                    this.props.removeFromTracking(t_center.pin_code)\n                                }} className={\"float-right  position-absolute rounded-0\"} style={{top:0, right:0, height:\"100%\"}}> X </Button>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ user, vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setTrackingCenters: centers => dispatch(setTrackingCenters(centers))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (TrackingPinCodes);\n","import { useIndexedDB } from 'react-indexed-db';\nimport GoogleAnalyticsEventTracker  from \"../google/analytics/GoogleAnalyticsEventTracker\";\nimport config from \"../../config.json\";\n\nconst DBConfig = {\n    name: 'cowin',\n    version: config.DB_VERSION,\n    objectStoresMeta: [\n        {\n            store: 'centers',\n            storeConfig: { keyPath: 'pin_code'},\n            storeSchema: [\n                { name: 'pin_code', keypath: 'pin_code', options: { unique: true } },\n            ]\n        }\n    ]\n}\n\nconst GaEventTracker = GoogleAnalyticsEventTracker();\n\nfunction RemoveAllCenters(){\n    const { clear } = useIndexedDB('centers');\n    return clear();\n}\n\nfunction GetAllCenters() {\n    const { getAll } = useIndexedDB('centers');\n    return getAll();\n}\n\nfunction AddCenter(pinCode) {\n    GaEventTracker(\"[SW] Center Added\", pinCode);\n    const { add } = useIndexedDB('centers');\n    return add({\n                pin_code: pinCode\n            });\n}\n\nfunction RemoveCenter(pinCode) {\n    const { deleteRecord  } = useIndexedDB('centers');\n    GetAllCenters().then(item=>{\n        item.forEach(it=> {\n                if (it.pin_code === pinCode) {\n                    return deleteRecord(it.pin_code);\n                }\n            }\n        )\n    })\n}\n\nexport {AddCenter, GetAllCenters, RemoveCenter, DBConfig, RemoveAllCenters};","import {Component} from 'react';\nimport config from \"../../../config.json\";\nimport BackendUrls from \"../../../constants/BackendUrls.json\";\nimport {AddCenter, GetAllCenters, RemoveCenter, RemoveAllCenters} from \"../../vaccinesessions/IndexDbManager\";\nimport axios from \"axios\";\n\nclass SyncPinCodeManager extends Component {\n    state = {\n        lat: null,\n        lng: null\n    }\n\n    constructor(props) {\n        super(props);\n        this.IsTrackingContains = this.IsTrackingContains.bind(this);\n        this.RemoveFromTracking = this.RemoveFromTracking.bind(this);\n        this.RemovePinCodeFromBackend = this.RemovePinCodeFromBackend.bind(this);\n        this.SetTrackingCentersFromDbIndex = this.SetTrackingCentersFromDbIndex.bind(this);\n        this.SyncPinCodeWithBackend = this.SyncPinCodeWithBackend.bind(this);\n        this.GetUser = this.GetUser.bind(this);\n        this.AddToTracking = this.AddToTracking.bind(this);\n        this.SetLocation = this.SetLocation.bind(this);\n        this.OnLocationPermissionGranted = this.OnLocationPermissionGranted.bind(this);\n        this.SetTrackingCentersFromDbIndex();\n    }\n\n    SetLocation() {\n        if(navigator.permissions && navigator.permissions.query) {\n            navigator.permissions.query({name: 'geolocation'}).then(permissions => {\n                if (permissions.status === \"granted\") {\n                    this.OnLocationPermissionGranted();\n                }\n            });\n        } else {\n            this.OnLocationPermissionGranted();\n        }\n    }\n\n    OnLocationPermissionGranted(){\n        if(!navigator.geolocation) {return;}\n        navigator.geolocation.getCurrentPosition((position) => {\n            this.setState({\n                lat: position.coords.latitude,\n                lng: position.coords.longitude\n            });\n        });\n    }\n\n    SetTrackingCentersFromDbIndex(){\n        GetAllCenters().then(item =>{\n            this.props.setTrackingCenters(item);\n        })\n    }\n\n    GetUser() {\n        const url = config.BACKEND_BASE_URL + BackendUrls.GET_USER_INFO;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url,{}, options)\n            .then(res => {\n                this.props.setSubscriptions(res.data[\"subscriptions\"]);\n                this.SyncPinCodeWithBackend(res.data[\"pin_codes\"]);\n            })\n            .catch(error => {\n                this.GaEventTracker(\"Fail GET User\", error);\n                console.log(error);\n            });\n\n    }\n\n    SyncPinCodeWithBackend(){\n        if(!this.props.user.token) return;\n        const url = config.BACKEND_BASE_URL + BackendUrls.SYNC_PIN_CODE_URL;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        GetAllCenters().then(pin_codes=>{\n            axios.post(url, {\"pin_codes\": pin_codes.map(p=>p.pin_code), \"lat\": this.state.lat, \"lng\": this.state.lng}, options)\n                .then(res => {\n                    RemoveAllCenters().then(() => {\n                        res.data[\"pin_codes\"].forEach(pin_code => {\n                            AddCenter(pin_code);\n                        })\n                        this.SetTrackingCentersFromDbIndex();\n                    })\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        })\n    }\n\n    IsTrackingContains(pin_code){\n        return (this.props.vaccine.tracking_centers.findIndex(center => center.pin_code === pin_code) >=0);\n    }\n\n    RemovePinCodeFromBackend(pin_code){\n        const url = config.BACKEND_BASE_URL + BackendUrls.REMOVE_PIN_CODE_URL;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url,{\"pin_code\": pin_code}, options)\n            .then(res => {\n                console.debug(res);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    RemoveFromTracking(pin_code) {\n        if(!this.IsTrackingContains(pin_code)) return;\n        RemoveCenter(pin_code);\n\n        let tracking_center = this.props.vaccine.tracking_centers;\n        for (let i = tracking_center.findIndex(it => it.pin_code === pin_code); i < tracking_center.length -1; i++) {\n            tracking_center[i] = tracking_center[i+1];\n        }\n        tracking_center.pop();\n\n        console.log(tracking_center);\n        this.props.setTrackingCenters(tracking_center);\n        this.RemovePinCodeFromBackend(pin_code);\n    }\n\n    AddToTracking(pin_code) {\n        if(this.props.vaccine.tracking_centers.length > 3) {\n            try {\n                this.onSubscriptionResponseCallback(\"Allowed max 4 tracking centers, please delete some to add new one. Thanks!\");\n            } catch (e) {\n                console.log(\"Error: \", e)\n            }\n            return;\n        }\n\n        if(this.IsTrackingContains(pin_code)) return;\n        AddCenter(pin_code);\n        let tracking_center = this.props.vaccine.tracking_centers;\n        tracking_center.push({pin_code: pin_code});\n        this.props.setTrackingCenters(tracking_center)\n        this.AddCentersToBackend(pin_code);\n    }\n\n    AddCentersToBackend(pin_code){\n        const url = config.BACKEND_BASE_URL + BackendUrls.ADD_PIN_CODE_URL;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url,{\"pin_code\": pin_code, \"lat\": this.state.lat, \"lng\": this.state.lng}, options)\n            .then(res => {\n                console.log(res);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n}\n\nexport default SyncPinCodeManager;","import {Modal} from \"react-bootstrap\";\n\nfunction NoteModal({showModal, handleClose, textBody}) {\n    return (\n        <Modal show={showModal} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title> Notification</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{textBody}</Modal.Body>\n        </Modal>\n    );\n}\n\nexport default NoteModal;","import React, {Component} from 'react';\nimport {Button, Col, Row} from \"react-bootstrap\";\nimport {connect} from \"react-redux\";\nimport config from \"../../config.json\";\nimport BackendUrls from \"../../constants/BackendUrls.json\";\nimport axios from \"axios\";\nimport GoogleAnalyticsEventTracker from \"../google/analytics/GoogleAnalyticsEventTracker\";\n\nclass Footer extends Component {\n    state = {\n        is_valid_feedback: false,\n        is_feedback_btn_disabled: true,\n        feedback_text:\"\"\n    }\n\n    GaEventTracker = GoogleAnalyticsEventTracker();\n\n    constructor(props) {\n        super(props);\n        this.OnSubmitFeedback = this.OnSubmitFeedback.bind(this);\n        this.OnChangeFeedback = this.OnChangeFeedback.bind(this);\n    }\n\n    OnSubmitFeedback(){\n        this.setState({\n            is_valid_feedback: true\n        });\n\n        const url = config.BACKEND_BASE_URL + BackendUrls.USER_FEEDBACK;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url, {feedback:this.state.feedback_text}, options)\n            .then(res => {\n                console.debug(res);\n            })\n            .catch(error => {\n                this.setState({\n                    is_valid_feedback: false\n                });\n                this.GaEventTracker(\"Failed Feedback\", error);\n                console.log(error);\n            });\n    }\n\n    OnChangeFeedback(event){\n        let text = event.target.value;\n        this.setState({\n            feedback_text: text,\n            is_feedback_btn_disabled: text.length < 10\n        })\n    }\n\n    render() {\n        return (\n            <section className=\"p-0\">\n                <div className=\"shadow bg-white p-4 my-2 rounded-lg\">\n                    <Row>\n                       <Col>\n                           <div className=\"font-weight-bold\">Contact</div>\n                           <a href=\"https://www.linkedin.com/feed/update/urn%3Ali%3Aactivity%3A6798913715489120256/\" target=\"_blank\" rel={\"noreferrer\"} className=\"no-text-decor\">\n                               <div className=\"text-primary\" style={{fontWeight: 800, fontSize: 20}}>\n                                   Linked <span className=\"bg-primary text-white rounded-sm\" style={{padding: '1px 2px 1px 2px'}}>in</span>\n                               </div>\n                           </a>\n                       </Col>\n                        {\n                            this.props.user.is_server_up &&\n                            <Col>\n                                <div className=\"font-weight-bold\">Feedback</div>\n                                <div>\n                                <textarea className={\"form-control no-input-shadow\"}\n                                          onChange={this.OnChangeFeedback}\n                                          value={this.state.feedback_text}\n                                          disabled={this.state.is_valid_feedback}/>\n                                    {\n                                        this.state.is_valid_feedback ? <div>Thanks for the feedback :) </div> :\n                                            <Button variant={\"primary\"} className=\"my-1 float-right\"\n                                                    onClick={this.OnSubmitFeedback}\n                                                    disabled={this.state.is_feedback_btn_disabled}>\n                                                Submit\n                                            </Button>\n                                    }\n                                </div>\n                            </Col>\n                        }\n                    </Row>\n                </div>\n            </section>\n        );\n    }\n}\n\nconst mapStateToProps = ({ user }) => (\n    {\n        user: user\n    }\n)\n\nconst mapDispatchToProps = () => ({})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Footer);","export default __webpack_public_path__ + \"static/media/stock.4f7373b8.webp\";","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nfunction NearMe() {\n    return (<div className=\"d-flex flex-column align-items-center\">\n        <FontAwesomeIcon icon={\"location-arrow\"} />\n        Near Me\n    </div>)\n}\n\nexport function PinCode() {\n    return (<div className=\"d-flex flex-column align-items-center\">\n        <FontAwesomeIcon icon={\"map-pin\"} />\n        Pin Code\n    </div>)\n}\n\nexport function District() {\n    return (<div className=\"d-flex flex-column align-items-center\">\n        <FontAwesomeIcon icon={\"map-marked\"} />\n        District\n    </div>)\n}\n\nexport function Subscriptions() {\n    return (<div className=\"d-flex flex-column align-items-center\">\n        <FontAwesomeIcon icon={\"envelope-open\"} />\n        Subs.\n    </div>)\n}\n\nexport default NearMe;","import React from 'react';\nimport {Button, Col, Container, FormControl, Row, Tab, Tabs} from \"react-bootstrap\";\nimport CUrl from \"../../constants/CowinUrl.json\";\nimport axios from \"axios\";\nimport config from \"../../config.json\";\nimport moment from \"moment\";\nimport {connect} from \"react-redux\";\nimport {setSubscriptions, setToken, setServerStat} from \"../../../../redux/user/user.actions\";\nimport VaccineSessionTable from \"./VaccineSessionTable\";\nimport GoogleMapComponent from \"../google/GoogleMapComponent\";\nimport { GetCenters } from \"./CowinRequestManager\";\nimport ReactGA from \"react-ga\";\nimport GoogleAnalyticsEventTracker from \"../google/analytics/GoogleAnalyticsEventTracker\";\nimport {setCenters, setTrackingCenters} from \"../../../../redux/centers/center.actions\";\nimport GoogleLoginButton from \"../google/GoogleLoginButton\";\nimport TrackingPinCodes from \"../google/TrackingPinCodes\";\nimport BackendUrls from \"../../constants/BackendUrls.json\";\nimport SyncPinCodeManager from \"../google/analytics/SyncPinCodeManager\";\nimport NoteModal from \"../modal/NoteModal\";\nimport Footer from \"../footer/Footer\";\nimport whats_image from \"../../static/images/stock.webp\";\nimport NearMe, {District, PinCode, Subscriptions} from \"./NavTabs\";\n\nReactGA.initialize(config.GOOGLE_ANALYTICS_UA);\n\nclass GetVaccineSession extends SyncPinCodeManager {\n    state = {\n        pin_code: \"\",\n        district_id:\"1\",\n        is_valid_pin_code: false,\n        is_valid_district: false,\n        vaccine_date: moment().format(\"YYYY-MM-DD\"),\n        states: [],\n        districts: [],\n        show_modal: false,\n        modal_text: \"\",\n        can_show_tracking_center_button: false\n    }\n\n    options = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': \"Bearer \" + this.props.user.token\n        }\n    }\n\n    GaEventTracker = GoogleAnalyticsEventTracker();\n\n    constructor(props) {\n        super(props);\n        ReactGA.pageview(window.location.pathname + window.location.search);\n\n        this.GetState = this.GetState.bind(this);\n        this.OnChangeState = this.OnChangeState.bind(this);\n        this.OnChangeDate = this.OnChangeDate.bind(this);\n        this.OnChangePinCode = this.OnChangePinCode.bind(this);\n        this.OnChangeDistrictCode = this.OnChangeDistrictCode.bind(this);\n\n        this.SelectVaccinesWithDate = this.SelectVaccinesWithDate.bind(this);\n        this.OnSubmitPinCode = this.OnSubmitPinCode.bind(this);\n        this.OnSubmitDistrict = this.OnSubmitDistrict.bind(this);\n        this.OnGetCenterCallback = this.OnGetCenterCallback.bind(this);\n        this.OnLogout = this.OnLogout.bind(this);\n        this.onSubscriptionResponseCallback = this.onSubscriptionResponseCallback.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    componentDidMount() {\n        this.SetLocation();\n        this.GetState();\n        this.OnChangeState(1);\n        this.CheckHealth();\n    }\n\n    CheckHealth(){\n        const url = config.BACKEND_BASE_URL + BackendUrls.HEALTH_CHECK;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url, {}, options)\n            .then(res => {\n                this.GetUser();\n                this.props.setServerStat(true);\n            })\n            .catch(error => {\n                this.props.setToken(null);\n                this.props.setSubscriptions([]);\n                if(error.response === undefined || error.response.status !== 403){\n                    this.props.setServerStat(false);\n                } else {\n                    this.props.setServerStat(true);\n                }\n                console.log(error);\n            });\n    }\n\n    GetState(){\n        axios.get(config.COWIN_BASE_URL + CUrl.GET_STATES, this.options).then( response => {\n            if(response.status === 200 && response.data.states.length > 0) {\n                this.setState({\n                    states: response.data.states\n                })\n            }else{\n                console.log(response);\n            }\n        }).catch( err => console.error(err));\n    }\n\n    OnChangeState(state){\n        this.setState({\n            is_valid_district: false\n        });\n        axios.get(config.COWIN_BASE_URL + CUrl.GET_DISTRICT.replace(\"<DISTRICT>\", state), this.options).then( response => {\n            if(response.status === 200 && response.data.districts.length > 0) {\n                this.setState({\n                    districts: response.data.districts,\n                    is_valid_district: true,\n                    district_id: response.data.districts[0].district_id\n                })\n            }else{\n                console.error(response);\n            }\n        }).catch( err => console.error(err));\n    }\n\n    OnChangeDistrictCode(code){\n        this.setState({\n            district_id: code\n        });\n    }\n\n    OnSubmitPinCode(){\n        if(this.state.pin_code.length !==6) return;\n        this.GaEventTracker(\"Pin code Submitted\", this.state.pin_code);\n        let date = moment(this.state.vaccine_date).format(\"DD-MM-YYYY\");\n        GetCenters(config.COWIN_BASE_URL + CUrl.CALENDAR_BY_PIN_CODE.replace(\"<PINCODE>\", this.state.pin_code).replace(\"<DATE>\", date).replace(\"<VACCINE>\", \"\"), this.OnGetCenterCallback);\n    }\n\n    OnSubmitDistrict(){\n        if(this.state.district_id.length <= 0) return;\n        this.GaEventTracker(\"District Submitted\", this.state.pin_code);\n        let date = moment(this.state.vaccine_date).format(\"DD-MM-YYYY\");\n        GetCenters(config.COWIN_BASE_URL + CUrl.CALENDAR_BY_DISTRICT.replace(\"<DISTRICT_ID>\", this.state.district_id).replace(\"<DATE>\", date).replace(\"<VACCINE>\", \"\"), this.OnGetCenterCallback);\n    }\n\n    OnGetCenterCallback(centers){\n        this.props.setCenters(centers);\n        this.GaEventTracker(\"Received Centers\");\n        if(centers.length > 0 && !this.IsTrackingContains(Number(this.state.pin_code))){\n            this.setState({\n                can_show_tracking_center_button: true\n            })\n        } else if(centers.length === 0){\n            const center_table = document.getElementsByClassName(\"no-center-table-replacer\");\n            if(center_table.length > 0) {\n                center_table[0].animate({backgroundColor: \"red\"}, 1000, 'easeInCirc');\n            }\n        }\n    }\n\n    OnChangeDate(event){\n        this.setState({\n            vaccine_date: event.target.value\n        })\n        this.GetVaccineSessionChild.current.OnChangeDate(event.target.value);\n    }\n\n    OnChangePinCode(event){\n        let number = event.target.value.replace(/^0+/, '');\n        this.setState({\n            pin_code: number,\n            can_show_tracking_center_button: false,\n            is_valid_pin_code: event.target.value.length === 6\n        })\n    }\n\n    SelectVaccinesWithDate() {\n        return (\n            <div>\n                <FormControl className={\"no-input-shadow mt-2\"} placeholder={\"Enter start date\"} type={\"date\"} value={this.state.vaccine_date} onChange={this.OnChangeDate}/>\n            </div>\n        );\n    }\n\n    OnLogout(){\n        const url = config.BACKEND_BASE_URL + BackendUrls.LOGOUT_URL;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url, {}, options)\n            .then(res => {\n                this.props.setToken(null);\n                this.props.setSubscriptions([]);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    closeModal() {\n        this.setState({\n            show_modal: false\n        });\n    }\n\n    onSubscriptionResponseCallback(text){\n        this.setState({\n            show_modal: true,\n            modal_text: text\n        });\n    }\n\n    render() {\n        return (\n            <Container className={\"p-0\"}>\n                <Tabs defaultActiveKey=\"map\" transition={false} id=\"noanim-tab-example\" className={\"bg-white shadow overflow-hidden mt-2 notify-navbar d-flex justify-content-center\"}>\n                    <Tab eventKey=\"map\" title={<NearMe />} >\n                        <div className={\"bg-white mb-2 rounded-bottom bg-cowin2-light shadow p-2\"}>\n                            {\n                                this.props.user.token === null &&\n                                <div className=\"p-3 shadow rounded-lg bg-warning my-2\">\n                                    Use google login and subscribe SMS text to get more accurate notification even you're\n                                    offline.\n                                </div>\n                            }\n                            <GoogleMapComponent addToTracking={this.AddToTracking}\n                                                isTrackingContains={this.IsTrackingContains}\n                                                getUser={this.GetUser}\n                                                onSubscriptionResponseCallback={this.onSubscriptionResponseCallback}/>\n                        </div>\n                    </Tab>\n                    <Tab eventKey=\"home\" title={<PinCode />}>\n                        <div className=\"bg-white mb-2 rounded-bottom bg-cowin2-light shadow p-4 justify-content-center d-flex align-items-center\" style={{height:300}}>\n                            <div className={\"col-md-6\"}>\n                                <FormControl className={\"no-input-shadow\"} placeholder={\"Enter pin code\"} type=\"number\" value={this.state.pin_code} onChange={this.OnChangePinCode}/>\n                                {\n                                    this.state.can_show_tracking_center_button &&\n                                    <Button variant={\"outline-success\"}\n                                            className={\"small py-0 rounded-0 float-right mb-1\"}\n                                            style={{top: 0, right: \"-10%\"}}\n                                            onClick={()=>{ this.AddToTracking(Number(this.state.pin_code))}}>Track this pincode</Button>\n                                }\n                                <this.SelectVaccinesWithDate />\n                                <Button variant={\"primary\"} className={\"form-control mt-4\"} onClick={this.OnSubmitPinCode} disabled={!this.state.is_valid_pin_code}> Find vaccine slots</Button>\n                            </div>\n                        </div>\n                    </Tab>\n                    <Tab eventKey=\"profile\" title={<District />}>\n                        <div className=\"bg-white mb-2 rounded-bottom shadow p-4 justify-content-center d-flex align-items-center\" style={{height:300}}>\n                            <div className=\"col-md-6\" >\n                                <select className={\"form-control no-input-shadow\"} placeholder={\"Select state\"} onChange={e => {this.OnChangeState(e.target.value)}}>\n                                    {\n                                        this.state.states.map(it => <option key={it.state_id} value={it.state_id}>{it.state_name}</option>)\n                                    }\n                                </select>\n                                <select className={\"form-control no-input-shadow mt-2\"} placeholder={\"Select district\"} disabled={!this.state.is_valid_district} value={this.state.district_id} onChange={ e => {this.OnChangeDistrictCode(e.target.value)}}>\n                                    {\n                                        this.state.districts.map(it => <option key={it.district_id} value={it.district_id}>{it.district_name}</option>)\n                                    }\n                                </select>\n                                <this.SelectVaccinesWithDate />\n                                <Button variant={\"primary\"} className={\"form-control mt-4\"} onClick={this.OnSubmitDistrict} disabled={!this.state.is_valid_district}> Find vaccine slots</Button>\n                            </div>\n                        </div>\n                    </Tab>\n                    <Tab eventKey=\"near_me\" title={<Subscriptions />}>\n                        <div className=\"bg-white mb-2 rounded-bottom shadow p-4 justify-content-center d-flex\" >\n                            {\n                                this.props.user.is_server_up &&\n                                <div className=\"p-1\">\n                                    <GoogleLoginButton getUser={this.GetUser}/>\n                                    {\n                                        this.props.user.token !== null &&\n                                        <Button variant={\"danger\"} className={\"shadow-lg\"} style={{width: \"100%\"}} onClick={this.OnLogout}>Logout</Button>\n                                    }\n                                </div>\n                            }\n                            <div className=\"p-1\">\n                                <TrackingPinCodes removeFromTracking={this.RemoveFromTracking}/>\n                            </div>\n                        </div>\n                    </Tab>\n                </Tabs>\n                <VaccineSessionTable />\n                <NoteModal showModal={this.state.show_modal} textBody={this.state.modal_text} handleClose={this.closeModal}/>\n                <Row className=\"mt-1\">\n                    <Col className={\"\"} md={6} >\n                        <TrackingPinCodes  removeFromTracking={this.RemoveFromTracking}/>\n                    </Col>\n                    <Col className={\"my-1\"} md={6} >\n                        <a href=\"https://dashboard.cowin.gov.in/\" target=\"_blank\" rel={\"noreferrer\"} >\n                            <div style={{width: \"100%\", height: \"100%\", backgroundImage: `url(${whats_image})`, backgroundPosition: \"center\", backgroundSize: \"cover\"}}>\n                                <Button style={{width: \"100%\", height: \"100%\", background: \"rgba(0,0,0, 0.6)\"}} className=\"shadow p-4 font-weight-bold\">\n                                    Cowin Dashboard & Statistics\n                                </Button>\n                            </div>\n                        </a>\n                    </Col>\n                </Row>\n                <Footer />\n            </Container>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ user, vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token)),\n    setCenters: centers => dispatch(setCenters(centers)),\n    setServerStat: stat => dispatch(setServerStat(stat)),\n    setSubscriptions: subscription => dispatch(setSubscriptions(subscription)),\n    setTrackingCenters: centers => dispatch(setTrackingCenters(centers))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (GetVaccineSession);\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport './App.css';\nimport GetVaccineSession from \"../vaccinesessions/GetVaccineSession\";\nimport {initDB} from \"react-indexed-db\";\nimport {DBConfig} from \"../vaccinesessions/IndexDbManager\";\nimport config from \"../../config.json\";\n\nconst indexedDB = window.indexedDB || (window).mozIndexedDB || (window).webkitIndexedDB || (window).msIndexedDB;\n\nfunction deleteIfOldDatabase(){\n    let openDBRequest = indexedDB.open('cowin', config.DB_VERSION);\n    openDBRequest.onupgradeneeded = function (event){\n        let database = openDBRequest.result;\n        if(database.objectStoreNames.contains(\"centers\")){\n            if(event.oldVersion) {\n                database.deleteObjectStore(\"centers\");\n                let store = database.createObjectStore(\"centers\", {keyPath:\"pin_code\"});\n                store.createIndex('pin_code', 'pin_code', {unique: true});\n            }\n        } else {\n            let store = database.createObjectStore(\"centers\", {keyPath: \"pin_code\"});\n            store.createIndex('pin_code', 'pin_code', {unique: true});\n        }\n    }\n    openDBRequest.onsuccess = function (event) {\n        let database = openDBRequest.result;\n        if(!database.objectStoreNames.contains(\"centers\")){\n            indexedDB.deleteDatabase(\"cowin\");\n        }\n    }\n}\n\ndeleteIfOldDatabase();\ninitDB(DBConfig);\n\nclass App extends Component {\n\n    state = {\n        is_location_granted: true,\n        top_notification_content: \"Grant notification permission manually, to notify if any slots available. Not required in case of SMS notification.\"\n    }\n\n    constructor(props) {\n        super(props);\n        this.OnNotificationPermissionChange = this.OnNotificationPermissionChange.bind(this);\n        this.OnLocationPermissionGranted = this.OnLocationPermissionGranted.bind(this);\n    }\n\n    componentDidMount(){\n        if(navigator.permissions && navigator.permissions.query) {\n            navigator.permissions.query({name:'geolocation'}).then(permissions => {\n               if(permissions.state === \"granted\") {\n                   this.OnLocationPermissionGranted();\n               } else if(permissions.state === \"denied\"){\n                   this.setState({\n                       is_location_granted: false,\n                       top_notification_content: \"Allow location manually, to get centers nearby you\"\n                   });\n               }\n            });\n        } else {\n            this.OnLocationPermissionGranted();\n        }\n    }\n\n   OnLocationPermissionGranted() {\n        if(!navigator.geolocation){\n            this.setState({\n                is_location_granted: false,\n                top_notification_content: \"Location is not supported by your browser\"\n            });\n            this.CheckForNotificationPermission();\n            return;\n        }\n        navigator.geolocation.getCurrentPosition(() => {\n            this.CheckForNotificationPermission();\n        }, positionError => {\n            if (positionError.PERMISSION_DENIED) {\n                this.setState({\n                    is_location_granted: false,\n                    top_notification_content: \"Allow location manually, to get centers nearby you\"\n                });\n            }\n        });\n    }\n\n    CheckForNotificationPermission(){\n        if (!this.IsPushNotificationSupported()) {\n            this.setState({\n                is_location_granted: false,\n                top_notification_content: \"Notifications are not supported by your browser\"\n            })\n        } else if (Notification.permission === \"denied\" || Notification.permission === \"default\") {\n            this.OnNotificationPermissionChange();\n            Notification.requestPermission(this.OnNotificationPermissionChange).then(r => {\n                // intentional\n            });\n        }\n    }\n\n    OnNotificationPermissionChange(){\n        if(Notification.permission === \"denied\"){\n            this.setState({\n                is_location_granted: false\n            });\n        }\n    }\n\n    IsPushNotificationSupported() {\n        return \"serviceWorker\" in navigator && \"PushManager\" in window;\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {\n                    !this.state.is_location_granted &&\n                    <div className=\"bg-danger text-center text-white\">\n                        {this.state.top_notification_content}\n                    </div>\n                }\n                <Router>\n                    <Switch>\n                        <Route path={\"\"} exact={true} component={GetVaccineSession} />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import {UserActionTypes} from \"./user.types\";\n\nconst INITIAL_STATE = {\n    is_server_up:true,\n    token:null,\n    subscriptions:[]\n}\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case UserActionTypes.SET_USER_TOKEN:\n            return {\n                ...state,\n                token: action.payload\n            };\n        case UserActionTypes.SET_SERVER_STAT:\n            return {\n                ...state,\n                is_server_up: action.payload\n            };\n        case UserActionTypes.SET_USER_SUBSCRIPTION:\n            return {\n                ...state,\n                subscriptions: action.payload\n            };\n        default:\n            return state;\n    }\n}\nexport default userReducer;","export const PositionActionTypes = {\n    SET_LATITUDE: \"SET_LATITUDE\",\n    SET_LONGITUDE: \"SET_LONGITUDE\"\n}","import {PositionActionTypes} from \"./position.types\";\n\n\nconst INITIAL_STATE = {\n    latitude: 100,\n    longitude: 157\n}\n\nconst positionReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case PositionActionTypes.SET_LATITUDE:\n            return {\n                ...state,\n                latitude: action.payload\n            };\n        case PositionActionTypes.SET_LONGITUDE:\n            return {\n                ...state,\n                longitude: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport default positionReducer","import {CenterActionTypes} from \"./center.types\";\n\nconst INITIAL_STATE = {\n    centers: [],\n    nearby_centers: [],\n    is_centers_updated: false,\n    tracking_centers: [],\n}\n\nconst centerReducer = (state = INITIAL_STATE, action = \"\") => {\n    switch (action.type) {\n        case CenterActionTypes.SET_CENTERS:\n            return {\n                ...state,\n                centers: action.payload,\n                is_centers_updated: true\n            };\n        case CenterActionTypes.SET_NEARBY_CENTERS:\n            return {\n                ...state,\n                nearby_centers: action.payload,\n            };\n        case CenterActionTypes.SET_TRACKING_CENTER:\n            return {\n                ...state,\n                tracking_centers: action.payload\n            }\n        case CenterActionTypes.CENTER_UPDATE_DONE:\n            return {\n                ...state,\n                is_centers_updated: action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport default centerReducer;","import { combineReducers } from \"redux\";\nimport userReducer from \"./user/userReducer\";\nimport positionReducer from \"./position/position.reducer\";\nimport centerReducer from \"./centers/centerReducer\";\n\nexport default combineReducers(\n    {\n        user: userReducer,\n        position: positionReducer,\n        vaccine: centerReducer\n    }\n)","import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './root-reducer';\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: ['vaccine']\n    // whiteList: ['navigation']\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n// export default () => {\n//     let store = createStore(persistedReducer)\n//     let persist_store = persistStore(store)\n//     return { store, persist_store }\n// }\n\nexport const store = createStore(persistedReducer);\nexport const persist_store = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './main/cowin/components/app/App';\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport {store, persist_store} from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab, faWhatsapp } from '@fortawesome/free-brands-svg-icons';\nimport { faUser, faCoffee, faAddressBook,\n    faLocationArrow, faSearchLocation,\n    faEdit, faTrash, faClinicMedical,faCommentDots,\n    faMapPin, faMapMarked, faEnvelopeOpen} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n    fab,\n    faUser,\n    faCoffee,\n    faAddressBook,\n    faLocationArrow,\n    faSearchLocation,\n    faEdit,\n    faTrash,\n    faClinicMedical,\n    faWhatsapp,\n    faCommentDots,\n    faMapPin,\n    faMapMarked,\n    faEnvelopeOpen\n)\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <PersistGate loading={null} persistor={persist_store}>\n              <BrowserRouter/>\n              <App/>\n          </PersistGate>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}