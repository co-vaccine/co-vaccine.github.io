{"version":3,"sources":["redux/user/user.types.js","redux/user/user.actions.js","main/cowin/components/vaccinesessions/VaccineSessionTable.jsx","main/cowin/components/google/analytics/GoogleAnalyticsEventTracker.jsx","main/cowin/components/google/WhatsAppButtonRender.jsx","main/cowin/components/google/WhatsAppSubscribeManager.jsx","redux/centers/center.types.js","redux/centers/center.actions.js","main/cowin/components/google/GoogleLoginButton.jsx","main/cowin/components/google/TrackingPinCodes.jsx","main/cowin/components/google/GoogleMapComponent.jsx","main/cowin/components/vaccinesessions/CowinRequestManager.jsx","main/cowin/components/vaccinesessions/IndexDbManager.jsx","main/cowin/components/google/analytics/SyncPinCodeManager.jsx","main/cowin/components/vaccinesessions/GetVaccineSession.jsx","main/cowin/components/app/App.js","serviceWorkerRegistration.ts","reportWebVitals.ts","redux/user/userReducer.js","redux/position/position.types.js","redux/position/position.reducer.js","redux/centers/centerReducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["UserActionTypes","setToken","token","type","payload","setSubscriptions","subscriptions","setUserName","username","VaccineSessionTable","state","week","map","it","moment","add","format","date","this","setState","className","props","vaccine","centers","length","Table","striped","bordered","hover","day","name","Badge","variant","fee_type","address","block_name","district_name","state_name","pincode","index","sessions","findIndex","session","min_age_limit","available_capacity","href","Constant","COWIN_REGISTRATION","target","rel","Button","data-toggle","data-placement","title","session_id","Math","random","center_id","Component","connect","user","dispatch","GoogleAnalyticsEventTracker","category","action","label","ReactGA","event","WhatsAppButtonRender","renderProps","onClick","disabled","icon","size","text","WhatsAppSubscribeManager","mobile_number","is_valid_mobile","show_mobile_input","submitting_mobile","options","headers","GetButton","includes","SUBSCRIPTION_WA","OnWaSubscriptionBtnToggle","bind","OnMobileChange","OnSubmitMobile","IsSubscriptionContainsWa","axios","post","config","BACKEND_BASE_URL","BackendUrls","NOTIFICATION_SUBSCRIBED_URL","then","res","data","subscription","push","catch","error","console","log","NOTIFICATION_UNSUBSCRIBED_URL","indexOf","pop","number","value","replace","FormControl","placeholder","onChange","varient","CenterActionTypes","setTrackingCenters","GoogleLoginButton","responseGoogle","response","accessToken","exchangeToken","url","GET_USER_INFO","syncPinCodeWithBackend","GET_TOKEN_URL","getUser","clientId","GMAIL_API_CLIENT_ID","render","buttonText","onSuccess","onFailure","cookiePolicy","isSignedIn","setTrackingCenter","TrackingPinCodes","tracking_centers","t_center","pin_code","removeFromTracking","style","top","right","height","MyLocationComponent","width","borderRadius","border","GoogleMapComponent","my_position","lat","lng","map_center","map_zoom","selected_center","maps_data","show_map","markers","GaEventTracker","HandleApiLoaded","maps","OnMouseHoverOnHospital","OnClickCenterBox","LocateMyPosition","RemoveAllMarkersFromMap","setTimeout","DrawMarkersOnMap","forEach","marker","setMap","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","hoverKey","childProps","center","unique_positions","long","up","Marker","color","fontWeight","addListener","setAnimation","Animation","BOUNCE","SetActiveCenterBox","destination","directionsService","DirectionsService","directionsRenderer","DirectionsRenderer","request","origin","travelMode","TravelMode","DRIVING","route","status","setDirections","$","removeClass","addClass","Row","Col","md","bootstrapURLKeys","key","GOOGLE_MAP_API","language","defaultCenter","defaultZoom","zoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","onChildMouseEnter","bottom","maxHeight","overflowY","id","GetFormattedDate","SetDirection","fontSize","isTrackingContains","addToTracking","GetCenters","callback","fetch","json","GetAllCenters","getAll","useIndexedDB","AddCenter","pinCode","SyncPinCodeManager","IsTrackingContains","RemoveFromTracking","RemovePinCodeFromBackend","SetTrackingCentersFromDbIndex","SyncPinCodeWithBackend","AddToTracking","item","SYNC_PIN_CODE_URL","pin_codes","p","REMOVE_PIN_CODE_URL","deleteRecord","RemoveCenter","tracking_center","AddCentersToBackend","ADD_PIN_CODE_URL","initialize","GOOGLE_ANALYTICS_UA","GetVaccineSession","is_unmounted","district_id","is_valid_pin_code","vaccine_date","states","districts","pageview","window","location","pathname","search","GetState","OnChangeState","OnChangeDate","OnChangePinCode","OnChangeDistrictCode","OnChangeVaccine","SelectVaccinesWithDate","OnSubmitPinCode","OnSubmitDistrict","OnGetCenterCallback","OnLogout","get","COWIN_BASE_URL","CUrl","GET_STATES","err","GET_DISTRICT","code","CALENDAR_BY_PIN_CODE","CALENDAR_BY_DISTRICT","setCenters","GetVaccineSessionChild","current","COVAXIN","COVISHIELD","LOGOUT_URL","Container","Tabs","defaultActiveKey","transition","Tab","eventKey","e","state_id","initDB","version","objectStoresMeta","store","storeConfig","keyPath","autoIncrement","storeSchema","keypath","unique","App","is_notification_granted","top_notification_content","OnNotificationPermissionChange","IsPushNotificationSupported","Notification","permission","requestPermission","r","path","exact","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","userReducer","PositionActionTypes","positionReducer","centerReducer","combineReducers","persistConfig","storage","blacklist","persistedReducer","persistReducer","rootReducer","createStore","persist_store","persistStore","library","fab","faUser","faCoffee","faAddressBook","faLocationArrow","faSearchLocation","faEdit","faTrash","faClinicMedical","faWhatsapp","faCommentDots","ReactDOM","StrictMode","loading","persistor","document","getElementById","URL","process","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.522a15d4.chunk.js","sourcesContent":["export const UserActionTypes = {\n    SET_USER_TOKEN: 'SET_USER_TOKEN',\n    SET_USERNAME: 'SET_USERNAME',\n    SET_USER_SUBSCRIPTION: 'SET_USER_SUBSCRIPTION'\n}","import { UserActionTypes } from \"./user.types\";\n\nexport const setToken = token => (\n    {\n        type: UserActionTypes.SET_USER_TOKEN,\n        payload:token\n    }\n)\n\nexport const setSubscriptions = subscriptions => (\n    {\n        type: UserActionTypes.SET_USER_SUBSCRIPTION,\n        payload:subscriptions\n    }\n)\n\nexport const setUserName = username => (\n    {\n        type: UserActionTypes.SET_USERNAME,\n        payload: username\n    }\n)\n","import React, {Component} from 'react';\nimport {Badge, Button, Table} from \"react-bootstrap\";\nimport moment from \"moment\";\nimport Constant from \"../../constants/Constant.json\";\nimport {setToken} from \"../../../../redux/user/user.actions\";\nimport {connect} from \"react-redux\";\n\nclass VaccineSessionTable extends Component {\n    state = {\n        week: [0 ,1, 2, 3, 4, 5, 6].map(it=> moment().add(it, 'day').format(\"DD-MM-YY\"))\n    }\n\n    OnChangeDate(date){\n        this.setState({\n            week: [0 ,1, 2, 3, 4, 5, 6].map(it=> moment(date, 'YYYY-MM-DD').add(it, 'day').format(\"DD-MM-YY\"))\n        })\n    }\n\n    render() {\n        return (\n            <div className={\"bg-light\"}>\n                {\n                    this.props.vaccine.centers.length > 0 &&\n                    <Table striped bordered hover>\n                        <thead>\n                        <tr>\n                            <th>Name</th>\n                            {\n                                this.state.week.map(day =>\n                                    <th key={\"th-\" + day}>{day}</th>\n                                )\n                            }\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            this.props.vaccine.centers.map(it =>\n                                <tr key={it.center_id}>\n                                    <td>\n                                        <div>\n                                            <div className={\"font-weight-bolder\"}>\n                                                {it.name}\n                                                <sup className={\"small\"}>\n                                                    {' '}<Badge variant=\"secondary\">{it.fee_type}</Badge>\n                                                </sup>\n                                            </div>\n                                            <p className={\"text-secondary small m-0\"}>{it.address}, {it.block_name}</p>\n                                            <p className={\"text-secondary small m-0\"}>{it.district_name}, {it.state_name}, {it.pincode}</p>\n                                        </div>\n                                    </td>\n                                    {\n                                        this.state.week.map(date => {\n                                            let index = it.sessions.findIndex(session => session.date === moment(date, 'DD-MM-YY').format('DD-MM-YYYY'));\n                                            if (index >= 0) {\n                                                return (\n                                                    <td key={it.sessions[index].session_id}>\n                                                        <div>\n                                                            {/*{it.sessions[index].session_id}*/}\n                                                            <span className={\"\"}>{it.sessions[index].vaccine}</span>\n                                                            <p className={\"small m-0 text-danger\"}>For {it.sessions[index].min_age_limit}+</p>\n                                                            {\n                                                                it.sessions[index].available_capacity ?\n                                                                        <a href={Constant.COWIN_REGISTRATION}\n                                                                           target=\"_blank\" rel=\"noreferrer\">\n                                                                            <Button variant={\"success p-1\"}\n                                                                                    data-toggle=\"tooltip\"\n                                                                                    data-placement=\"top\"\n                                                                                    title=\"Tooltip on top\">\n                                                                                Book <sup><Badge\n                                                                                variant={\"primary\"}>{it.sessions[index].available_capacity}</Badge></sup>\n                                                                            </Button>\n                                                                        </a> :\n                                                                    <Button variant={\"danger p-0\"}>Booked</Button>\n                                                            }\n                                                        </div>\n                                                    </td>\n                                                );\n                                            } else {\n                                                return (<td key={Math.random()}/>);\n                                            }\n                                        })\n                                    }\n                                </tr>\n                            )\n                        }\n                        </tbody>\n                    </Table>\n                }\n                {\n                    this.props.vaccine.centers.length <=0 && <div className=\"text-center font-weight-bold p-2\">No centers are available for now, try to search for another pin code.</div>\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ user, vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (VaccineSessionTable);\n","import ReactGA from \"react-ga\";\n\nconst GoogleAnalyticsEventTracker = ( category = \"Event Category\") => {\n    return (action =\"action\", label=\"label\") => {\n        ReactGA.event({category, action, label})\n    };\n}\n\nexport default GoogleAnalyticsEventTracker;","import {Button} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nexport const WhatsAppButtonRender = (renderProps) => (\n    <Button onClick={renderProps.onClick} disabled={renderProps.disabled} variant={\"primary\"}>\n        <FontAwesomeIcon icon={'comment-dots'} size={\"3x\"} />\n        <div>\n            {\n                renderProps.text ||\n                \"Login and subscribe SMS notification\"\n            }\n        </div>\n    </Button>\n)","import React, {Component} from 'react';\nimport {WhatsAppButtonRender} from \"./WhatsAppButtonRender\";\nimport {setSubscriptions} from \"../../../../redux/user/user.actions\";\nimport {connect} from \"react-redux\";\nimport config from \"../../config.json\";\nimport BackendUrls from \"../../constants/BackendUrls.json\";\nimport axios from \"axios\";\nimport Constant from \"../../constants/Constant.json\";\nimport {Button, FormControl} from \"react-bootstrap\";\n\nclass WhatsAppSubscribeManager extends Component {\n    state={\n        mobile_number: \"\",\n        is_valid_mobile: false,\n        show_mobile_input: false,\n        submitting_mobile: false\n    }\n\n    options = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Token ' + this.props.user.token\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.OnWaSubscriptionBtnToggle = this.OnWaSubscriptionBtnToggle.bind(this);\n        this.OnMobileChange = this.OnMobileChange.bind(this);\n        this.OnSubmitMobile = this.OnSubmitMobile.bind(this);\n    }\n\n    IsSubscriptionContainsWa(){\n        return this.props.user.subscriptions.includes(Constant.SUBSCRIPTION_WA);\n    }\n\n    OnSubmitMobile() {\n        if (this.IsSubscriptionContainsWa()) return;\n        this.setState({\n            submitting_mobile: true\n        })\n\n        const payload = {\n            'subscription': Constant.SUBSCRIPTION_WA,\n            'mobile': this.state.mobile_number\n        }\n        axios.post(config.BACKEND_BASE_URL + BackendUrls.NOTIFICATION_SUBSCRIBED_URL, payload, this.options)\n            .then(res => {\n                if (res.data[\"status\"] === \"success\") {\n                    let subscription = this.props.user.subscriptions;\n                    subscription.push(Constant.SUBSCRIPTION_WA);\n                    this.props.setSubscriptions(subscription);\n                }\n                this.setState({\n                    submitting_mobile: false,\n                    show_mobile_input: false\n                })\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({\n                    submitting_mobile: false\n                })\n            });\n    }\n\n    OnWaSubscriptionBtnToggle(){\n        if(this.IsSubscriptionContainsWa()){\n            const payload = {\n                'subscription': Constant.SUBSCRIPTION_WA,\n                'mobile': this.state.mobile_number\n            }\n\n            axios.post(config.BACKEND_BASE_URL + BackendUrls.NOTIFICATION_UNSUBSCRIBED_URL, payload, this.options)\n                .then(res => {\n                    if (res.data[\"status\"] === \"success\") {\n                        let subscription = this.props.user.subscriptions;\n                        subscription[subscription.indexOf(Constant.SUBSCRIPTION_WA)] = subscription[subscription.length - 1]\n                        subscription.pop();\n                        this.props.setSubscriptions(subscription);\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n        else {\n            this.setState({\n                show_mobile_input: true\n            })\n        }\n    }\n\n    OnMobileChange(event){\n        let number = event.target.value.replace(/^0+/, '')\n        this.setState({\n            mobile_number: number,\n            is_valid_mobile: event.target.value.length === 10\n        })\n    }\n\n    GetButton = () => {\n        if(this.props.user.subscriptions.includes(Constant.SUBSCRIPTION_WA))\n        {\n            return (<WhatsAppButtonRender text={\"Unsubscribe text SMS notification\"}\n                                  onClick={this.OnWaSubscriptionBtnToggle}/>);\n        }\n        return (<WhatsAppButtonRender text={\"Subscribe text SMS notification\"} onClick={this.OnWaSubscriptionBtnToggle}/>);\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.show_mobile_input?\n                        <div className={\"shadow rounded p-1\"}>\n                            <FormControl className={\"no-input-shadow\"}\n                                         placeholder={\"Enter mobile number\"}\n                                         type={\"number\"}\n                                         value={this.state.mobile_number}\n                                         onChange={this.OnMobileChange}\n                                         disabled={this.state.submitting_mobile}\n                            />\n                            <Button variant={\"secondary\"} className={\"m-1\"} onClick={()=> {this.setState({show_mobile_input: false})}} disabled={this.state.submitting_mobile}> Cancel </Button>\n                            <Button varient={\"primary\"} className={\"m-1\"} disabled={!this.state.is_valid_mobile || this.state.submitting_mobile} onClick={this.OnSubmitMobile}> Submit </Button>\n                        </div>: <this.GetButton />\n                }\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ user }) => (\n    {\n        user: user\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setSubscriptions: subscriptions => dispatch(setSubscriptions(subscriptions)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (WhatsAppSubscribeManager);\n","export const CenterActionTypes = {\n    SET_CENTERS: \"SET_CENTERS\",\n    SET_TRACKING_CENTER: \"SET_TRACKING_CENTER\"\n}","import { CenterActionTypes } from \"./center.types\";\n\nexport const setCenters = centers => (\n    {\n        type: CenterActionTypes.SET_CENTERS,\n        payload: centers\n    }\n)\n\n\nexport const setTrackingCenters = centers => (\n    {\n        type: CenterActionTypes.SET_TRACKING_CENTER,\n        payload: centers\n    }\n)\n","import React, {Component} from 'react';\nimport GoogleLogin from \"react-google-login\";\nimport config from \"../../config.json\";\nimport BackendUrls from \"../../constants/BackendUrls.json\";\nimport {WhatsAppButtonRender} from \"./WhatsAppButtonRender\";\nimport axios from \"axios\";\nimport {setSubscriptions, setToken, setUserName} from \"../../../../redux/user/user.actions\";\nimport {connect} from \"react-redux\";\nimport WhatsAppSubscribeManager from \"./WhatsAppSubscribeManager\";\nimport {setTrackingCenters} from \"../../../../redux/centers/center.actions\";\n\nclass GoogleLoginButton extends Component {\n\n    constructor(props) {\n        super(props);\n        this.responseGoogle = this.responseGoogle.bind(this);\n        this.exchangeToken = this.exchangeToken.bind(this);\n    }\n\n    getUser() {\n        const url = config.BACKEND_BASE_URL + BackendUrls.GET_USER_INFO;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url,{}, options)\n            .then(res => {\n                this.props.setUserName(res.data[\"username\"]);\n                this.props.setSubscriptions(res.data[\"subscriptions\"]);\n                this.props.syncPinCodeWithBackend(res.data[\"pin_codes\"]);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n\n    }\n\n    exchangeToken(accessToken){\n        const options = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        };\n\n        axios.post(config.BACKEND_BASE_URL + BackendUrls.GET_TOKEN_URL, {\"access_token\": accessToken}, options)\n            .then(res => {\n                this.props.setToken(res.data[\"token\"]);\n                this.getUser();\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    responseGoogle = (response) => {\n        if(response.accessToken) {\n            this.exchangeToken(response.accessToken);\n        }\n    }\n\n    render() {\n        if(!this.props.user.token) {\n            return (\n                <GoogleLogin\n                    clientId={config.GMAIL_API_CLIENT_ID}\n                    render={WhatsAppButtonRender}\n                    buttonText=\"Login\"\n                    onSuccess={this.responseGoogle}\n                    onFailure={this.responseGoogle}\n                    cookiePolicy={'single_host_origin'}\n                    isSignedIn={true}\n                />\n            );\n        }else {\n            return <WhatsAppSubscribeManager />\n        }\n    }\n}\n\n\nconst mapStateToProps = ({ user,vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token)),\n    setSubscriptions: subscriptions => dispatch(setSubscriptions(subscriptions)),\n    setUserName: username => dispatch(setUserName(username)),\n    setTrackingCenter: centers => dispatch(setTrackingCenters(centers))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (GoogleLoginButton);\n","import React, {Component} from 'react';\nimport {Button} from \"react-bootstrap\";\nimport {connect} from \"react-redux\";\nimport {setTrackingCenters} from \"../../../../redux/centers/center.actions\";\n\nclass TrackingPinCodes extends Component {\n    componentDidMount() {\n        // this.SetTrackingCenters();\n    }\n\n    render() {\n        return (\n            <div className={\"shadow p-1 rounded bg-cowin2\"}>\n                {\n                    this.props.vaccine.tracking_centers && this.props.vaccine.tracking_centers.length > 0?\n                        <h6 className={\"font-weight-bold\"}> Tracking pin codes for age &lt; 45</h6>:\n                        <h6 className={\"font-weight-bold\"}> No notification trackers </h6>\n                }\n                <hr />\n                {\n                    this.props.vaccine.tracking_centers && this.props.vaccine.tracking_centers.map(t_center =>{\n                        return (\n                            <div className={\"rounded p-2 m-1 font-weight-bold bg-white position-relative overflow-hidden\"} key={\"center-tr-\" + t_center.pin_code}>\n                                {t_center.pin_code}\n                                <Button variant={\"danger\"} onClick={() => {\n                                    this.props.removeFromTracking(t_center.pin_code)\n                                }} className={\"float-right  position-absolute rounded-0\"} style={{top:0, right:0, height:\"100%\"}}> X </Button>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ user, vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setTrackingCenters: centers => dispatch(setTrackingCenters(centers))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (TrackingPinCodes);\n","import React, {Component} from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport {Badge, Button, Col, Row} from \"react-bootstrap\";\nimport Constant from \"../../constants/Constant.json\";\nimport $ from 'jquery';\nimport moment from \"moment\";\nimport GoogleAnalyticsEventTracker from \"../google/analytics/GoogleAnalyticsEventTracker\";\nimport GoogleLoginButton from \"./GoogleLoginButton\";\nimport TrackingPinCodes from \"./TrackingPinCodes\";\nimport {setToken} from \"../../../../redux/user/user.actions\";\nimport {connect} from \"react-redux\";\nimport {setTrackingCenters} from \"../../../../redux/centers/center.actions\";\nimport config from \"../../config.json\";\n\nconst MyLocationComponent = () => <div>\n    <div className=\"bg-primary\" style={{height:18, width:18, borderRadius:18, border:\"2px solid #fff\"}}>\n    </div>\n</div>;\n\nclass GoogleMapComponent extends Component {\n\n    state = {\n        my_position: {lat: 12.97, lng: 77.59},\n        map_center: {lat: 12.97, lng: 77.59},\n        map_zoom: 10,\n        selected_center: {},\n        maps_data: {},\n        show_map: false,\n        markers: [],\n    }\n\n    GaEventTracker = GoogleAnalyticsEventTracker();\n\n    constructor(props) {\n        super(props);\n        this.OnMouseHoverOnHospital = this.OnMouseHoverOnHospital.bind(this);\n        this.OnClickCenterBox = this.OnClickCenterBox.bind(this);\n        this.LocateMyPosition = this.LocateMyPosition.bind(this);\n    }\n\n    componentDidUpdate() {\n        if(!this.state.show_map && this.props.vaccine.centers.length > 0){\n            this.setState({\n                show_map: true\n            })\n        }\n    }\n\n    UpdateMarkers(centers) {\n        if(!this.state.show_map && centers.length > 0) {\n            this.setState({\n                show_map: true\n            })\n        }\n\n        this.GaEventTracker(\"Google map requests\");\n        this.RemoveAllMarkersFromMap();\n        setTimeout(() => {this.DrawMarkersOnMap()}, 2000);\n    }\n\n    RemoveAllMarkersFromMap(){\n        this.state.markers.forEach(marker => {\n            marker.setMap(null);\n        })\n        this.setState({\n            markers: []\n        })\n    }\n\n    componentDidMount() {\n        navigator.geolocation.getCurrentPosition((position) => {\n            this.setState({\n                my_position: { lat:position.coords.latitude, lng: position.coords.longitude},\n                map_center: { lat:position.coords.latitude, lng: position.coords.longitude},\n            })\n        });\n    }\n\n    LocateMyPosition(){\n        this.setState({\n            map_center: this.state.my_position,\n            map_zoom: 11,\n        })\n    }\n\n    OnMouseHoverOnHospital(hoverKey, childProps){\n        if(! (childProps.center && childProps.center.name)) return;\n        this.setState({selected_center: childProps.center})\n    }\n\n    HandleApiLoaded = (map, maps) => {\n        this.setState({\n            maps_data: {\n                map: map,\n                maps: maps\n            }\n        })\n    }\n\n    DrawMarkersOnMap(){\n        if(!this.state.maps_data.map) {\n            console.error(\"Map is not ready yet\");\n            return;\n        }\n        let unique_positions = [];\n        this.props.vaccine.centers.forEach(it => {\n            let position = { lat: it.lat, lng: it.long};\n            if(unique_positions.findIndex( up => up.lat === it.lat && up.lng === it.long) >= 0) return;\n            unique_positions.push(position);\n\n            let map = this.state.maps_data.map;\n            let marker = new this.state.maps_data.maps.Marker({\n                position: position,\n                // animation: maps.Animation.DROP,\n                map,\n                // icon: {\n                //     url: \"https://atlas-content-cdn.pixelsquid.com/stock-images/hospital-3yL2QM6-600.jpg\",\n                //     size: maps.Size(10, 10),\n                // },\n                title: it.name,\n                label: {\n                    text:\"H\",\n                    color: \"white\",\n                    fontWeight: \"bold\",\n                }\n            })\n\n            marker.addListener(\"click\", () => {\n                marker.setAnimation(this.state.maps_data.maps.Animation.BOUNCE);\n                setTimeout(()=>{marker.setAnimation(null);}, 2000);\n            });\n\n            marker.addListener(\"mouseover\", () => {\n                this.SetActiveCenterBox(it.center_id);\n            })\n            this.state.markers.push(marker);\n        })\n    }\n\n    SetDirection(destination) {\n        this.GaEventTracker(\"Google map directions requests\")\n        let directionsService = new this.state.maps_data.maps.DirectionsService();\n        let directionsRenderer = new this.state.maps_data.maps.DirectionsRenderer();\n        directionsRenderer.setMap(this.state.maps_data.map);\n\n        let request = {\n            origin: this.state.my_position,\n            destination: destination,\n            travelMode: this.state.maps_data.maps.TravelMode.DRIVING,\n        };\n\n        directionsService.route(request, function(response, status) {\n            if (status === 'OK') {\n                directionsRenderer.setDirections(response);\n            }\n        });\n    }\n\n    SetActiveCenterBox(center_id) {\n        $('.center-box').removeClass('border-primary');\n        $('#center-'+center_id).addClass('border-primary');\n    }\n\n    OnClickCenterBox(center){\n        this.SetActiveCenterBox(center.center_id);\n        this.setState({\n            map_center: {lat: center.lat, lng: center.long},\n            map_zoom: 9,\n        })\n    }\n\n    GetFormattedDate(date){\n        return moment(date, \"DD-MM-YYYY\").format(\"DD MMM\");\n    }\n    render() {\n        return (\n            <section>\n                <Row>\n                    <Col md={9} className={\"\"}>\n                        {\n                            (this.state.show_map > 0) &&\n                            <div style={{height: 600, width: \"100%\"}} className={\"shadow-sm position-relative\"}>\n                                <GoogleMapReact\n                                    bootstrapURLKeys={{key: config.GOOGLE_MAP_API, language: \"en\"}}\n                                    defaultCenter={{lat: 12.97, lng: 77.59}}\n                                    center={this.state.map_center}\n                                    defaultZoom={10}\n                                    zoom={this.state.map_zoom}\n                                    yesIWantToUseGoogleMapApiInternals={true}\n                                    onGoogleApiLoaded={({map, maps}) => this.HandleApiLoaded(map, maps)}\n                                    onChildMouseEnter={this.OnMouseHoverOnHospital}\n                                >\n                                    <MyLocationComponent\n                                        lat={this.state.my_position.lat}\n                                        lng={this.state.my_position.lng}\n                                    />\n                                </GoogleMapReact>\n                                <Button variant={\"light\"} className=\"my-location position-absolute shadow\" style={{right: 10, bottom:150, height: 38, width:38, borderRadius: 38}} onClick={this.LocateMyPosition}>\n                                    +\n                                </Button>\n                            </div>\n                        }\n                    </Col>\n                    <Col md={3} style={{maxHeight: 600, overflowY:\"auto\"}}>\n                        <Col className={\"p-0 py-1\"} >\n                            <TrackingPinCodes  removeFromTracking={this.props.removeFromTracking}/>\n                        </Col>\n                        {\n                            !this.props.user.subscriptions.includes(\"WA\") &&\n                            <GoogleLoginButton syncPinCodeWithBackend={this.props.syncPinCodeWithBackend}/>\n                        }\n                        {\n                            (this.props.vaccine.centers.length === 0) && <Col className={\"p-0 py-1 font-weight-bold\"}>\n                                <div className={\"p-1 shadow rounded border center-box\"}>\n                                    No centers are available now\n                                </div>\n                            </Col>\n                        }\n                        {\n                            this.props.vaccine.centers.map(center =>\n                                <Col className={\"p-0 py-1\"} key={\"center-\" + center.center_id}>\n                                    <div className={\"p-1 shadow rounded border center-box\"}\n                                         id={\"center-\" + center.center_id} onClick={() => {\n                                        this.OnClickCenterBox(center)\n                                    }}>\n                                        <b>{center.name}{' '}\n                                            <sup>\n                                                {\n                                                    center.sessions[0].available_capacity ? <Badge\n                                                            variant={\"primary\"}>{center.sessions[0].available_capacity}</Badge> :\n                                                        <Badge variant={\"danger\"}>Booked</Badge>\n                                                }\n                                            </sup>\n                                        </b>\n                                        <p className={\"text-secondary small m-0\"}>{center.address}, {center.block_name}</p>\n                                        <p className={\"text-secondary small m-0\"}>{center.district_name}, {center.state_name}, {center.pincode}</p>\n                                        {\n                                            center.sessions.map(session =>\n                                                <div className={\"font-weight-bolder\"} key={session.session_id}>\n                                                    <span\n                                                        className={\"small font-weight-bold\"}>{this.GetFormattedDate(session.date)} [{session.vaccine}, {session.min_age_limit}+] {' '} </span>\n                                                    {\n                                                        session.available_capacity ?\n                                                            <a href={Constant.COWIN_REGISTRATION} target=\"_blank\"\n                                                               rel=\"noreferrer\">\n                                                                <Badge variant={\"primary\"}\n                                                                       className={\"btn\"}>Book</Badge>\n                                                            </a> : <Badge variant={\"danger\"}>Booked</Badge>\n                                                    }\n                                                </div>\n                                            )\n                                        }\n                                        <div className={\"text-primary btn px-0 small\"} onClick={() => {this.SetDirection({lat: center.lat, lng: center.long})}}\n                                             style={{fontSize:11}}>\n                                            Show direction on map\n                                        </div>\n                                        <div>\n                                            {\n                                                this.props.isTrackingContains(center.pincode) ?\n                                                    \"\" :\n                                                    <Badge variant={\"primary\"} className={\"btn p-1 m-1\"} onClick={() => {\n                                                        this.props.addToTracking(center.pincode)\n                                                    }}> Set Tracking</Badge>\n                                            }\n                                        </div>\n                                    </div>\n                                </Col>\n                            )\n                        }\n                    </Col>\n                </Row>\n\n                {/*<TrackModal*/}\n                {/*    show={this.state.modalShow}*/}\n                {/*    onHide={() => this.SetModalShow(false)}*/}\n                {/*/>*/}\n            </section>\n        );\n    }\n}\n\nconst mapStateToProps = ({ user, vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token)),\n    setTrackingCenters: centers => dispatch(setTrackingCenters(centers))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (GoogleMapComponent);\n","import config from \"../../config.json\";\nimport CUrl from \"../../constants/CowinUrl.json\";\nimport moment from \"moment\";\nimport GoogleAnalyticsEventTracker from \"../google/analytics/GoogleAnalyticsEventTracker\";\n\nconst GaEventTracker = GoogleAnalyticsEventTracker();\n\nfunction GetCenters (url, callback) {\n    GaEventTracker(\"Total cowin-api requests\", url)\n    fetch(url)\n        .then(response => response.json())\n        .then(data => callback(data.centers));\n}\n\nfunction CheckForTheCenters (pincode, callback) {\n    GaEventTracker(\"[SW] api-events\")\n    console.log(\"getting details for pin code: \" + pincode);\n    let  date = moment().format(\"DD-MM-YYYY\");\n    GetCenters(config.COWIN_BASE_URL + CUrl.CALENDAR_BY_PIN_CODE.replace(\"<PINCODE>\", pincode).replace(\"<DATE>\", date).replace(\"<VACCINE>\", \"\"), callback);\n}\n\nexport {CheckForTheCenters, GetCenters};","import { useIndexedDB } from 'react-indexed-db';\nimport GoogleAnalyticsEventTracker  from \"../google/analytics/GoogleAnalyticsEventTracker\";\n\nconst DBConfig = {\n    name: 'cowin',\n    version: 1,\n    objectStoresMeta: [\n        {\n            store: 'centers',\n            storeConfig: { keyPath: 'id', autoIncrement: true },\n            storeSchema: [\n                { name: 'pin_code', keypath: 'pin_code', options: { unique: true } },\n            ]\n        }\n    ]\n}\n\nconst GaEventTracker = GoogleAnalyticsEventTracker();\n\nfunction GetAllCenters() {\n    const { getAll } = useIndexedDB('centers');\n    return getAll();\n}\n\nfunction AddCenter(pinCode) {\n    GaEventTracker(\"[SW] Center Added\", pinCode);\n    const { add } = useIndexedDB('centers');\n    return add({\n                pin_code: pinCode\n            });\n}\n\nfunction RemoveCenter(pinCode) {\n    const { deleteRecord  } = useIndexedDB('centers');\n    GetAllCenters().then(item=>{\n        item.forEach(it=> {\n                if (it.pin_code === pinCode) {\n                    return deleteRecord(it.id);\n                }\n            }\n        )\n    })\n}\n\nexport {AddCenter, GetAllCenters, RemoveCenter, DBConfig};","import {Component} from 'react';\nimport config from \"../../../config.json\";\nimport BackendUrls from \"../../../constants/BackendUrls.json\";\nimport {AddCenter, GetAllCenters, RemoveCenter} from \"../../vaccinesessions/IndexDbManager\";\nimport axios from \"axios\";\n\nclass SyncPinCodeManager extends Component {\n    constructor(props) {\n        super(props);\n        this.IsTrackingContains = this.IsTrackingContains.bind(this);\n        this.RemoveFromTracking = this.RemoveFromTracking.bind(this);\n        this.RemovePinCodeFromBackend = this.RemovePinCodeFromBackend.bind(this);\n        this.SetTrackingCentersFromDbIndex = this.SetTrackingCentersFromDbIndex.bind(this);\n        this.SyncPinCodeWithBackend = this.SyncPinCodeWithBackend.bind(this);\n        this.AddToTracking = this.AddToTracking.bind(this);\n        this.SetTrackingCentersFromDbIndex();\n    }\n\n    SetTrackingCentersFromDbIndex(){\n        GetAllCenters().then(item =>{\n            this.props.setTrackingCenters(item);\n        })\n    }\n\n    SyncPinCodeWithBackend(){\n        if(!this.props.user.token) return;\n        const url = config.BACKEND_BASE_URL + BackendUrls.SYNC_PIN_CODE_URL;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        GetAllCenters().then(pin_codes=>{\n            axios.post(url, {\"pin_codes\": pin_codes.map(p=>p.pin_code)}, options)\n                .then(res => {\n                    res.data[\"pin_codes\"].forEach(pin_code => {\n                        AddCenter(pin_code);\n                    })\n                    this.SetTrackingCentersFromDbIndex();\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        })\n    }\n\n    IsTrackingContains(pin_code){\n        return (this.props.vaccine.tracking_centers.findIndex(center => center.pin_code === pin_code) >=0);\n    }\n\n    RemovePinCodeFromBackend(pin_code){\n        const url = config.BACKEND_BASE_URL + BackendUrls.REMOVE_PIN_CODE_URL;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url,{\"pin_code\": pin_code}, options)\n            .then(res => {\n                console.log(res);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    RemoveFromTracking(pin_code) {\n        if(!this.IsTrackingContains(pin_code)) return;\n        RemoveCenter(pin_code);\n\n        let tracking_center = this.props.vaccine.tracking_centers;\n        tracking_center[tracking_center.findIndex(it => it.pin_code = pin_code)] = tracking_center[tracking_center.length -1];\n        tracking_center.pop();\n\n        console.log(tracking_center);\n        this.props.setTrackingCenters(tracking_center);\n        this.RemovePinCodeFromBackend(pin_code);\n    }\n\n    AddToTracking(pin_code) {\n        if(this.IsTrackingContains(pin_code)) return;\n        AddCenter(pin_code);\n        let tracking_center = this.props.vaccine.tracking_centers;\n        tracking_center.push({pin_code: pin_code});\n        this.props.setTrackingCenters(tracking_center)\n        this.AddCentersToBackend(pin_code);\n    }\n\n    AddCentersToBackend(pin_code){\n        const url = config.BACKEND_BASE_URL + BackendUrls.ADD_PIN_CODE_URL;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url,{\"pin_code\": pin_code}, options)\n            .then(res => {\n                console.log(res);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n}\n\nexport default SyncPinCodeManager;","import React from 'react';\nimport {Button, Container, FormControl, Tab, Tabs} from \"react-bootstrap\";\nimport CUrl from \"../../constants/CowinUrl.json\";\nimport axios from \"axios\";\nimport config from \"../../config.json\";\nimport vaccine from \"../../constants/Vaccine.json\";\nimport moment from \"moment\";\nimport {connect} from \"react-redux\";\nimport {setSubscriptions, setToken, setUserName} from \"../../../../redux/user/user.actions\";\nimport VaccineSessionTable from \"./VaccineSessionTable\";\nimport GoogleMapComponent from \"../google/GoogleMapComponent\";\nimport { GetCenters } from \"./CowinRequestManager\";\nimport ReactGA from \"react-ga\";\nimport GoogleAnalyticsEventTracker from \"../google/analytics/GoogleAnalyticsEventTracker\";\nimport {setCenters, setTrackingCenters} from \"../../../../redux/centers/center.actions\";\nimport GoogleLoginButton from \"../google/GoogleLoginButton\";\nimport TrackingPinCodes from \"../google/TrackingPinCodes\";\nimport BackendUrls from \"../../constants/BackendUrls.json\";\nimport SyncPinCodeManager from \"../google/analytics/SyncPinCodeManager\";\n\nReactGA.initialize(config.GOOGLE_ANALYTICS_UA);\n\nclass GetVaccineSession extends SyncPinCodeManager {\n    state = {\n        is_unmounted: false,\n        pin_code: \"\",\n        district_id:\"1\",\n        is_valid_pin_code: false,\n        vaccine: \"\",\n        vaccine_date: moment().format(\"YYYY-MM-DD\"),\n        states: [],\n        districts: [],\n    }\n\n    options = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': \"Bearer \" + this.props.user.token\n        }\n    }\n\n    GaEventTracker = GoogleAnalyticsEventTracker();\n\n    constructor(props) {\n        super(props);\n        ReactGA.pageview(window.location.pathname + window.location.search);\n\n        this.GetState = this.GetState.bind(this);\n        this.OnChangeState = this.OnChangeState.bind(this);\n        this.OnChangeDate = this.OnChangeDate.bind(this);\n        this.OnChangePinCode = this.OnChangePinCode.bind(this);\n        this.OnChangeDistrictCode = this.OnChangeDistrictCode.bind(this);\n        this.OnChangeVaccine = this.OnChangeVaccine.bind(this);\n\n        this.SelectVaccinesWithDate = this.SelectVaccinesWithDate.bind(this);\n        this.OnSubmitPinCode = this.OnSubmitPinCode.bind(this);\n        this.OnSubmitDistrict = this.OnSubmitDistrict.bind(this);\n        this.OnGetCenterCallback = this.OnGetCenterCallback.bind(this);\n        this.OnLogout = this.OnLogout.bind(this);\n        // this.syncPinCodeManager = new SyncPinCodeManager(this.props)\n    }\n\n    componentDidMount() {\n        this.GetState();\n        this.OnChangeState(1);\n    }\n\n    componentWillUnmount(){\n        this.setState({\n            is_unmounted: true\n        })\n    }\n\n    GetState(){\n        axios.get(config.COWIN_BASE_URL + CUrl.GET_STATES, this.options).then( response => {\n            if(response.status === 200 && response.data.states.length > 0) {\n                this.setState({\n                    states: response.data.states\n                })\n            }else{\n                console.log(response);\n            }\n        }).catch( err => console.error(err));\n    }\n\n    OnChangeState(state){\n        axios.get(config.COWIN_BASE_URL + CUrl.GET_DISTRICT.replace(\"<DISTRICT>\", state), this.options).then( response => {\n            if(response.status === 200 && response.data.districts.length > 0) {\n                this.setState({\n                    districts: response.data.districts\n                })\n            }else{\n                console.error(response);\n            }\n        }).catch( err => console.error(err));\n    }\n\n    OnChangeDistrictCode(code){\n        this.setState({\n            district_id: code\n        })\n    }\n\n    OnSubmitPinCode(){\n        if(this.state.pin_code.length !==6) return;\n        this.GaEventTracker(\"Pin code Submitted\", this.state.pin_code);\n        let date = moment(this.state.vaccine_date).format(\"DD-MM-YYYY\");\n        GetCenters(config.COWIN_BASE_URL + CUrl.CALENDAR_BY_PIN_CODE.replace(\"<PINCODE>\", this.state.pin_code).replace(\"<DATE>\", date).replace(\"<VACCINE>\", this.state.vaccine), this.OnGetCenterCallback);\n    }\n\n    OnSubmitDistrict(){\n        if(this.state.district_id.length <= 0) return;\n        this.GaEventTracker(\"District Submitted\", this.state.pin_code);\n        let date = moment(this.state.vaccine_date).format(\"DD-MM-YYYY\");\n        GetCenters(config.COWIN_BASE_URL + CUrl.CALENDAR_BY_DISTRICT.replace(\"<DISTRICT_ID>\", this.state.district_id).replace(\"<DATE>\", date).replace(\"<VACCINE>\", this.state.vaccine), this.OnGetCenterCallback);\n    }\n\n    OnGetCenterCallback(centers){\n        this.props.setCenters(centers);\n        this.GaEventTracker(\"Received Centers\")\n    }\n\n    OnChangeVaccine(event){\n        this.setState({\n            vaccine: event.target.value\n        })\n    }\n\n    OnChangeDate(event){\n        this.setState({\n            vaccine_date: event.target.value\n        })\n        this.GetVaccineSessionChild.current.OnChangeDate(event.target.value);\n    }\n\n    OnChangePinCode(event){\n        this.setState({\n            pin_code: event.target.value,\n            is_valid_pin_code: event.target.value.length === 6\n        })\n    }\n\n    SelectVaccinesWithDate() {\n        return (\n            <div>\n                <select className={\"form-control no-input-shadow mt-2\"} value={this.state.vaccine} onChange={this.OnChangeVaccine}>\n                    <option value=\"\">All Vaccine</option>\n                    <option value={vaccine.COVAXIN}>{vaccine.COVAXIN}</option>\n                    <option value={vaccine.COVISHIELD}>{vaccine.COVISHIELD}</option>\n                </select>\n                <FormControl className={\"no-input-shadow mt-2\"} placeholder={\"Enter start date\"} type={\"date\"} value={this.state.vaccine_date} onChange={this.OnChangeDate}/>\n            </div>\n        );\n    }\n\n    OnLogout(){\n        const url = config.BACKEND_BASE_URL + BackendUrls.LOGOUT_URL;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url, {}, options)\n            .then(res => {\n                this.props.setToken(null);\n                this.props.setSubscriptions([]);\n                this.props.setUserName(null);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        return (\n            <Container className={\"position-relative\"}>\n                {\n                    this.props.user.token !== null &&\n                    <Button variant={\"danger\"} className={\"float-right\"} onClick={this.OnLogout}>Logout</Button>\n                }\n\n                <h5 className={\"font-weight-bolder\"}>Search for vaccines</h5>\n                <Tabs defaultActiveKey=\"home\" transition={false} id=\"noanim-tab-example\">\n                    <Tab eventKey=\"home\" title=\"Pin code\">\n                        <div className=\"bg-white p-4 justify-content-center d-flex align-items-center\" style={{height:300}}>\n                            <div className={\"col-md-6\"}>\n                                <FormControl className={\"no-input-shadow\"} placeholder={\"Enter pin code\"} value={this.state.pin_code} onChange={this.OnChangePinCode}/>\n                                <this.SelectVaccinesWithDate />\n                                <Button variant={\"primary\"} className={\"form-control mt-4\"} onClick={this.OnSubmitPinCode} disabled={!this.state.is_valid_pin_code}> Find vaccine slots</Button>\n                            </div>\n                        </div>\n                    </Tab>\n                    <Tab eventKey=\"profile\" title=\"District\">\n                        <div className=\"bg-white p-4 justify-content-center d-flex align-items-center\" style={{height:300}}>\n                            <div className=\"col-md-6\" >\n                                <select className={\"form-control no-input-shadow\"} placeholder={\"Select state\"} onChange={e => {this.OnChangeState(e.target.value)}}>\n                                    {\n                                        this.state.states.map(it => <option key={it.state_id} value={it.state_id}>{it.state_name}</option>)\n                                    }\n                                </select>\n                                <select className={\"form-control no-input-shadow mt-2\"} placeholder={\"Select district\"} value={this.state.district_id} onChange={ e => {this.OnChangeDistrictCode(e.target.value)}}>\n                                    {\n                                        this.state.districts.map(it => <option key={it.district_id} value={it.district_id}>{it.district_name}</option>)\n                                    }\n                                </select>\n                                <this.SelectVaccinesWithDate />\n                                <Button variant={\"primary\"} className={\"form-control mt-4\"} onClick={this.OnSubmitDistrict}> Find vaccine slots</Button>\n                            </div>\n                        </div>\n                    </Tab>\n                    <Tab eventKey=\"near_me\" title=\"Active Notifications\">\n                        <div className=\"bg-white p-4 justify-content-center d-flex\" >\n                            <div className=\"p-1\">\n                                <GoogleLoginButton syncPinCodeWithBackend={this.SyncPinCodeWithBackend}/>\n                            </div>\n                            <div className=\"p-1\">\n                                <TrackingPinCodes removeFromTracking={this.RemoveFromTracking}/>\n                            </div>\n                        </div>\n                    </Tab>\n                </Tabs>\n                <GoogleMapComponent removeFromTracking={this.RemoveFromTracking}\n                                    addToTracking={this.AddToTracking}\n                                    isTrackingContains={this.IsTrackingContains}\n                                    syncPinCodeWithBackend={this.SyncPinCodeWithBackend}/>\n                <VaccineSessionTable />\n                <div style={{height:400}}></div>\n            </Container>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ user, vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token)),\n    setCenters: centers => dispatch(setCenters(centers)),\n    setUserName: username => dispatch(setUserName(username)),\n    setSubscriptions: subscription => dispatch(setSubscriptions(subscription)),\n    setTrackingCenters: centers => dispatch(setTrackingCenters(centers))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (GetVaccineSession);\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport './App.css';\nimport GetVaccineSession from \"../vaccinesessions/GetVaccineSession\";\nimport {initDB} from \"react-indexed-db\";\nimport {DBConfig} from \"../vaccinesessions/IndexDbManager\";\n\ninitDB(DBConfig);\n\nclass App extends Component {\n\n    state = {\n        is_notification_granted: true,\n        top_notification_content: \"Grant notification permission manually, which will get use to notify if any slots available.\"\n    }\n\n    constructor(props) {\n        super(props);\n        this.OnNotificationPermissionChange = this.OnNotificationPermissionChange.bind(this);\n    }\n\n    componentDidMount(){\n        if(!this.IsPushNotificationSupported()){\n            this.setState({\n                is_notification_granted: false,\n                top_notification_content: \"Notifications are not supported by your browser :(\"\n            })\n        }else{\n            this.OnNotificationPermissionChange();\n            if(Notification.permission === \"default\"){\n                Notification.requestPermission(this.OnNotificationPermissionChange).then(r => {\n                    // intentional\n                });\n            }\n        }\n    }\n\n    OnNotificationPermissionChange(){\n        if(Notification.permission === \"denied\"){\n            this.setState({\n                is_notification_granted: false\n            })\n        }\n    }\n\n    IsPushNotificationSupported() {\n        return \"serviceWorker\" in navigator && \"PushManager\" in window;\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {\n                    !this.state.is_notification_granted &&\n                    <div className=\"bg-danger text-center text-white\">\n                        {this.state.top_notification_content}\n                    </div>\n                }\n                <Router>\n                    <Switch>\n                        {/*        /!*<Redirect from={\"/\"} to={AppUrl.GET_VACCINATION_SESSION} exact={true} />*!/*/}\n                        {/*        /!*<Route path={AppUrl.REGISTER_OTP} exact={true} component={RegisterOtp}/>*!/*/}\n                        <Route path={\"\"} exact={true} component={GetVaccineSession} />\n                        {/*        /!*<Redirect to={AppUrl.GET_VACCINATION_SESSION} from={\"*\"}/>*!/*/}\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://cra.link/PWA.'\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import {UserActionTypes} from \"./user.types\";\n\nconst INITIAL_STATE = {\n    username:null,\n    token:null,\n    subscriptions:[]\n}\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case UserActionTypes.SET_USER_TOKEN:\n            return {\n                ...state,\n                token: action.payload\n            };\n        case UserActionTypes.SET_USERNAME:\n            return {\n                ...state,\n                username: action.payload\n            };\n        case UserActionTypes.SET_USER_SUBSCRIPTION:\n            return {\n                ...state,\n                subscriptions: action.payload\n            };\n        default:\n            return state;\n    }\n}\nexport default userReducer;","export const PositionActionTypes = {\n    SET_LATITUDE: \"SET_LATITUDE\",\n    SET_LONGITUDE: \"SET_LONGITUDE\"\n}","import {PositionActionTypes} from \"./position.types\";\n\n\nconst INITIAL_STATE = {\n    latitude: 100,\n    longitude: 157\n}\n\nconst positionReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case PositionActionTypes.SET_LATITUDE:\n            return {\n                ...state,\n                latitude: action.payload\n            };\n        case PositionActionTypes.SET_LONGITUDE:\n            return {\n                ...state,\n                longitude: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport default positionReducer","import {CenterActionTypes} from \"./center.types\";\n\nconst INITIAL_STATE = {\n    centers: [],\n    tracking_centers: []\n}\n\nconst centerReducer = (state = INITIAL_STATE, action = \"\") => {\n    switch (action.type) {\n        case CenterActionTypes.SET_CENTERS:\n            return {\n                ...state,\n                centers: action.payload\n            };\n        case CenterActionTypes.SET_TRACKING_CENTER:\n            return {\n                ...state,\n                tracking_centers: action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport default centerReducer;","import { combineReducers } from \"redux\";\nimport userReducer from \"./user/userReducer\";\nimport positionReducer from \"./position/position.reducer\";\nimport centerReducer from \"./centers/centerReducer\";\n\nexport default combineReducers(\n    {\n        user: userReducer,\n        position: positionReducer,\n        vaccine: centerReducer\n    }\n)","import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './root-reducer';\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: ['vaccine']\n    // whiteList: ['navigation']\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n// export default () => {\n//     let store = createStore(persistedReducer)\n//     let persist_store = persistStore(store)\n//     return { store, persist_store }\n// }\n\nexport const store = createStore(persistedReducer);\nexport const persist_store = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './main/cowin/components/app/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport {store, persist_store} from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab, faWhatsapp } from '@fortawesome/free-brands-svg-icons';\nimport { faUser, faCoffee, faAddressBook,\n    faLocationArrow, faSearchLocation,\n    faEdit, faTrash, faClinicMedical,faCommentDots } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n    fab,\n    faUser,\n    faCoffee,\n    faAddressBook,\n    faLocationArrow,\n    faSearchLocation,\n    faEdit,\n    faTrash,\n    faClinicMedical,\n    faWhatsapp,\n    faCommentDots\n)\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <PersistGate loading={null} persistor={persist_store}>\n              <BrowserRouter/>\n              <App/>\n          </PersistGate>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}