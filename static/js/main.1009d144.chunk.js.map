{"version":3,"sources":["serviceWorkerRegistration.ts","reportWebVitals.ts","redux/user/user.types.js","redux/user/user.actions.js","main/cowin/components/vaccinesessions/VaccineSessionTable.jsx","main/cowin/components/google/analytics/GoogleAnalyticsEventTracker.jsx","main/cowin/components/google/WhatsAppButtonRender.jsx","main/cowin/components/google/WhatsAppSubscribeManager.jsx","redux/centers/center.types.js","redux/centers/center.actions.js","main/cowin/components/google/GoogleLoginButton.jsx","main/cowin/components/google/TrackingPinCodes.jsx","main/cowin/static/images/map.jpg","main/cowin/components/vaccinesessions/CowinRequestManager.jsx","main/cowin/components/google/GoogleMapComponent.jsx","main/cowin/components/vaccinesessions/IndexDbManager.jsx","main/cowin/components/google/analytics/SyncPinCodeManager.jsx","main/cowin/components/modal/NoteModal.jsx","main/cowin/components/footer/Footer.jsx","main/cowin/components/vaccinesessions/GetVaccineSession.jsx","main/cowin/components/app/App.js","redux/user/userReducer.js","redux/position/position.types.js","redux/position/position.reducer.js","redux/centers/centerReducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","waiting","postMessage","type","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","UserActionTypes","setToken","token","payload","setSubscriptions","subscriptions","VaccineSessionTable","week","map","it","moment","add","format","date","this","setState","className","props","vaccine","centers","length","Table","striped","bordered","hover","day","name","Badge","variant","fee_type","address","block_name","district_name","state_name","pincode","index","sessions","findIndex","session","min_age_limit","available_capacity","href","Constant","COWIN_REGISTRATION","target","rel","Button","data-toggle","data-placement","title","session_id","Math","random","center_id","Component","connect","user","dispatch","GoogleAnalyticsEventTracker","category","action","label","ReactGA","event","WhatsAppButtonRender","renderProps","onClick","disabled","icon","size","text","WhatsAppSubscribeManager","mobile_number","is_valid_mobile","show_mobile_input","submitting_mobile","options","headers","GetButton","includes","SUBSCRIPTION_WA","OnWaSubscriptionBtnToggle","bind","OnMobileChange","OnSubmitMobile","IsSubscriptionContainsWa","axios","post","BACKEND_BASE_URL","BackendUrls","NOTIFICATION_SUBSCRIBED_URL","res","data","subscription","callback","push","NOTIFICATION_UNSUBSCRIBED_URL","indexOf","pop","number","value","replace","FormControl","placeholder","onChange","varient","style","width","CenterActionTypes","setTrackingCenters","GoogleLoginButton","is_google_login_supported","GaEventTracker","responseGoogle","response","accessToken","exchangeToken","GET_TOKEN_URL","getUser","onSubscriptionResponseCallback","clientId","GMAIL_API_CLIENT_ID","render","buttonText","onFailure","cookiePolicy","isSignedIn","setTrackingCenter","TrackingPinCodes","tracking_centers","t_center","pin_code","removeFromTracking","top","right","height","GetCenters","url","fetch","json","GoogleMapComponent","my_position","lat","lng","map_center","map_zoom","maps_data","show_map","markers","HandleApiLoaded","maps","OnClickCenterBox","LocateMyPosition","OnGetNearbyCenterCallback","DrawMarkersOnMap","GetNumber","SetMyPosition","geolocation","getCurrentPosition","position","coords","latitude","longitude","SubmitLatLong","COWIN_BASE_URL","CUrl","CENTERS_BY_LAT_LONG","setNearbyCenter","nearby_centers","forEach","long","marker","Marker","color","fontWeight","addListener","setAnimation","Animation","BOUNCE","setTimeout","child_parent","$","parent","scroller","offset","scrollTop","animate","SetActiveCenterBox","animation","DROP","scaledSize","Size","strNum","Number","parseFloat","toFixed","center","directionsService","DirectionsService","directionsRenderer","DirectionsRenderer","setMap","destination","request","origin","travelMode","TravelMode","DRIVING","route","status","setDirections","removeClass","addClass","Row","Col","md","bootstrapURLKeys","key","GOOGLE_MAP_API","language","defaultCenter","defaultZoom","zoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","onChildMouseEnter","OnMouseHoverOnHospital","bottom","borderRadius","src","mapImage","alt","background","maxHeight","overflowY","is_server_up","id","SetDirection","fontSize","isTrackingContains","addToTracking","setCentersUpdateDone","is_centers_updated","DBConfig","version","DB_VERSION","objectStoresMeta","store","storeConfig","keyPath","storeSchema","keypath","unique","GetAllCenters","getAll","useIndexedDB","AddCenter","pinCode","SyncPinCodeManager","IsTrackingContains","RemoveFromTracking","RemovePinCodeFromBackend","SetTrackingCentersFromDbIndex","SyncPinCodeWithBackend","GetUser","AddToTracking","item","GET_USER_INFO","SYNC_PIN_CODE_URL","pin_codes","p","clear","REMOVE_PIN_CODE_URL","debug","deleteRecord","RemoveCenter","tracking_center","i","e","AddCentersToBackend","ADD_PIN_CODE_URL","NoteModal","showModal","handleClose","textBody","Modal","show","onHide","Header","closeButton","Title","Body","Footer","is_valid_feedback","is_feedback_btn_disabled","feedback_text","OnSubmitFeedback","OnChangeFeedback","USER_FEEDBACK","feedback","padding","initialize","GOOGLE_ANALYTICS_UA","GetVaccineSession","is_unmounted","district_id","is_valid_pin_code","vaccine_date","states","districts","show_modal","modal_text","can_show_tracking_center_button","pageview","pathname","search","GetState","OnChangeState","OnChangeDate","OnChangePinCode","OnChangeDistrictCode","OnChangeVaccine","SelectVaccinesWithDate","OnSubmitPinCode","OnSubmitDistrict","OnGetCenterCallback","OnLogout","closeModal","CheckHealth","HEALTH_CHECK","setServerStat","undefined","get","GET_STATES","err","GET_DISTRICT","code","CALENDAR_BY_PIN_CODE","CALENDAR_BY_DISTRICT","setCenters","GetVaccineSessionChild","current","COVAXIN","COVISHIELD","LOGOUT_URL","Container","Tabs","defaultActiveKey","transition","Tab","eventKey","state_id","backgroundImage","backgroundPosition","backgroundSize","stat","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","openDBRequest","open","onupgradeneeded","database","result","objectStoreNames","contains","oldVersion","deleteObjectStore","createObjectStore","createIndex","onsuccess","deleteDatabase","deleteIfOldDatabase","initDB","App","is_notification_granted","top_notification_content","OnNotificationPermissionChange","IsPushNotificationSupported","Notification","permission","requestPermission","r","path","exact","component","INITIAL_STATE","userReducer","PositionActionTypes","positionReducer","centerReducer","combineReducers","persistConfig","storage","blacklist","persistedReducer","persistReducer","rootReducer","createStore","persist_store","persistStore","library","fab","faUser","faCoffee","faAddressBook","faLocationArrow","faSearchLocation","faEdit","faTrash","faClinicMedical","faWhatsapp","faCommentDots","ReactDOM","StrictMode","loading","persistor","document","getElementById","URL","process","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"yKAYMA,EAAcC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DA0CnC,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACLC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAIJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACJ,+GAIDR,EAAaS,SACdT,EAAaS,QAAQC,YAAY,CAAEC,KAAM,iBAIvChB,GAAUA,EAAOiB,UACnBjB,EAAOiB,SAASZ,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOkB,WACnBlB,EAAOkB,UAAUb,WAO5Bc,OAAM,SAACC,GACNR,QAAQQ,MAAM,4CAA6CA,MCtGnE,IAYeC,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,8BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,4MCTPO,EACO,iBADPA,EAEQ,kBAFRA,EAGc,wBCDdC,EAAW,SAAAC,GAAK,MACzB,CACIf,KAAMa,EACNG,QAAQD,IAIHE,EAAmB,SAAAC,GAAa,MACzC,CACIlB,KAAMa,EACNG,QAAQE,I,0BCLVC,E,4MACFzB,MAAQ,CACJ0B,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,KAAI,SAAAC,GAAE,OAAGC,MAASC,IAAIF,EAAI,OAAOG,OAAO,gB,2DAG3DC,GACTC,KAAKC,SAAS,CACVR,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,KAAI,SAAAC,GAAE,OAAGC,IAAOG,EAAM,cAAcF,IAAIF,EAAI,OAAOG,OAAO,mB,+BAIpF,IAAD,OACL,OACI,sBAAKI,UAAW,sDAAhB,UAEQF,KAAKG,MAAMC,QAAQC,QAAQC,OAAS,GACpC,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACI,gCACA,+BACI,sCAEIV,KAAKjC,MAAM0B,KAAKC,KAAI,SAAAiB,GAAG,OACnB,6BAAuBA,GAAd,MAAQA,WAK7B,gCAEIX,KAAKG,MAAMC,QAAQC,QAAQX,KAAI,SAAAC,GAAE,OAC7B,+BACI,6BACI,gCACI,sBAAKO,UAAW,qBAAhB,UACKP,EAAGiB,KACJ,sBAAKV,UAAW,QAAhB,UACK,IAAI,cAACW,EAAA,EAAD,CAAOC,QAAQ,YAAf,SAA4BnB,EAAGoB,iBAG5C,oBAAGb,UAAW,2BAAd,UAA2CP,EAAGqB,QAA9C,KAAyDrB,EAAGsB,cAC5D,oBAAGf,UAAW,2BAAd,UAA2CP,EAAGuB,cAA9C,KAA+DvB,EAAGwB,WAAlE,KAAgFxB,EAAGyB,gBAIvF,EAAKrD,MAAM0B,KAAKC,KAAI,SAAAK,GAChB,IAAIsB,EAAQ1B,EAAG2B,SAASC,WAAU,SAAAC,GAAO,OAAIA,EAAQzB,OAASH,IAAOG,EAAM,YAAYD,OAAO,iBAC9F,OAAIuB,GAAS,EAEL,6BACI,gCAEI,sBAAMnB,UAAW,GAAjB,SAAsBP,EAAG2B,SAASD,GAAOjB,UACzC,oBAAGF,UAAW,wBAAd,iBAA4CP,EAAG2B,SAASD,GAAOI,cAA/D,OAEI9B,EAAG2B,SAASD,GAAOK,mBACX,mBAAGC,KAAMC,EAASC,mBACfC,OAAO,SAASC,IAAI,aADvB,SAEI,eAACC,EAAA,EAAD,CAAQlB,QAAS,cACTmB,cAAY,UACZC,iBAAe,MACfC,MAAM,iBAHd,kBAIS,8BAAK,cAACtB,EAAA,EAAD,CACVC,QAAS,UADC,SACWnB,EAAG2B,SAASD,GAAOK,4BAGpD,cAACM,EAAA,EAAD,CAAQlB,QAAS,aAAjB,wBAjBPnB,EAAG2B,SAASD,GAAOe,YAuBxB,sBAASC,KAAKC,eAzC7B3C,EAAG4C,mBAoDxBvC,KAAKG,MAAMC,QAAQC,QAAQC,QAAS,GAAK,qBAAKJ,UAAU,mCAAf,0F,GAlF3BsC,aAoGnBC,eAXS,SAAC,GAAD,MACpB,CACIC,KAFgB,EAAGA,KAGnBtC,QAHgB,EAASA,YAON,SAAAuC,GAAQ,MAAK,CACpCxD,SAAU,SAAAC,GAAK,OAAIuD,EAASxD,EAASC,QAG1BqD,CAA8CjD,G,iCCnG9CoD,EANqB,WAAmC,IAAjCC,EAAgC,uDAArB,iBAC7C,OAAO,WAAsC,IAArCC,EAAoC,uDAA5B,SAAUC,EAAkB,uDAAZ,QAC5BC,IAAQC,MAAM,CAACJ,WAAUC,SAAQC,Y,iCCD5BG,EAAuB,SAACC,GAAD,OAChC,eAACnB,EAAA,EAAD,CAAQoB,QAASD,EAAYC,QAASC,SAAUF,EAAYE,SAAUvC,QAAS,UAAWZ,UAAW,cAArG,UACI,cAAC,IAAD,CAAiBoD,KAAM,eAAgBC,KAAM,OAC7C,8BAEQJ,EAAYK,MACZ,6CCCVC,E,kDAeF,WAAYtD,GAAQ,IAAD,8BACf,cAAMA,IAfVpC,MAAM,CACF2F,cAAe,GACfC,iBAAiB,EACjBC,mBAAmB,EACnBC,mBAAmB,GAUJ,EAPnBC,QAAU,CACNC,QAAS,CACL,eAAgB,mBAChB,cAAiB,SAAW,EAAK5D,MAAMuC,KAAKtD,QAIjC,EAiFnB4E,UAAY,WACR,OAAG,EAAK7D,MAAMuC,KAAKnD,eAAiB,EAAKY,MAAMuC,KAAKnD,cAAc0E,SAASrC,EAASsC,iBAExE,cAAC,EAAD,CAAsBV,KAAM,oCACdJ,QAAS,EAAKe,4BAEhC,cAAC,EAAD,CAAsBX,KAAM,kCAAmCJ,QAAS,EAAKe,6BArFrF,EAAKA,0BAA4B,EAAKA,0BAA0BC,KAA/B,gBACjC,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBAJP,E,uEAQf,OAAOpE,KAAKG,MAAMuC,KAAKnD,eAAiBS,KAAKG,MAAMuC,KAAKnD,cAAc0E,SAASrC,EAASsC,mB,uCAG1E,IAAD,OACb,IAAIlE,KAAKuE,2BAAT,CACAvE,KAAKC,SAAS,CACV4D,mBAAmB,IAGvB,IAAMxE,EAAU,CACZ,aAAgBuC,EAASsC,gBACzB,OAAUlE,KAAKjC,MAAM2F,eAEzBc,IAAMC,KAAKpH,EAAOqH,iBAAmBC,EAAYC,4BAA6BvF,EAASW,KAAK8D,SACvFrG,MAAK,SAAAoH,GACF,GAA2B,YAAvBA,EAAIC,KAAJ,QAA4D,2BAAxBD,EAAIC,KAAJ,QAAkD,CACtF,IAAIC,EAAe,EAAK5E,MAAMuC,KAAKnD,cACnC,EAAKY,MAAM6E,UAAY,EAAK7E,MAAM6E,SAASH,EAAIC,KAAJ,SACxCC,IACCA,EAAaE,KAAKrD,EAASsC,iBAC3B,EAAK/D,MAAMb,iBAAiByF,SAGhC,EAAK9E,SAAS,CACV4D,mBAAmB,EACnBD,mBAAmB,OAI9BpF,OAAM,SAAAC,GACHR,QAAQC,IAAIO,GACZ,EAAKwB,SAAS,CACV4D,mBAAmB,U,kDAKP,IAAD,OACvB,GAAG7D,KAAKuE,2BAA2B,CAC/B,IAAMlF,EAAU,CACZ,aAAgBuC,EAASsC,iBAG7BM,IAAMC,KAAKpH,EAAOqH,iBAAmBC,EAAYO,8BAA+B7F,EAASW,KAAK8D,SACzFrG,MAAK,SAAAoH,GACF,GAA2B,YAAvBA,EAAIC,KAAJ,OAAkC,CAClC,IAAIC,EAAe,EAAK5E,MAAMuC,KAAKnD,cAChCwF,IACCA,EAAaA,EAAaI,QAAQvD,EAASsC,kBAAoBa,EAAaA,EAAazE,OAAS,GAClGyE,EAAaK,MACb,EAAKjF,MAAMb,iBAAiByF,QAIvCvG,OAAM,SAAAC,GACHR,QAAQC,IAAIO,WAIpBuB,KAAKC,SAAS,CACV2D,mBAAmB,M,qCAKhBX,GACX,IAAIoC,EAASpC,EAAMnB,OAAOwD,MAAMC,QAAQ,MAAO,IAC/CvF,KAAKC,SAAS,CACVyD,cAAe2B,EACf1B,gBAA+C,KAA9BV,EAAMnB,OAAOwD,MAAMhF,W,+BAcxC,OACI,8BAEQN,KAAKjC,MAAM6F,kBACP,sBAAK1D,UAAW,8CAAhB,UACI,cAACsF,EAAA,EAAD,CAAatF,UAAW,kBACXuF,YAAa,sBACbpH,KAAM,SACNiH,MAAOtF,KAAKjC,MAAM2F,cAClBgC,SAAU1F,KAAKqE,eACfhB,SAAUrD,KAAKjC,MAAM8F,oBAElC,cAAC7B,EAAA,EAAD,CAAQ2D,QAAS,UAAWC,MAAO,CAACC,MAAO,QAAS3F,UAAW,OAAQmD,UAAWrD,KAAKjC,MAAM4F,iBAAmB3D,KAAKjC,MAAM8F,kBAAmBT,QAASpD,KAAKsE,eAA5J,gCACI,mBAAMN,UAAN,U,GAvHOxB,aAyIxBC,gBAVS,SAAC,GAAD,MACpB,CACIC,KAFgB,EAAGA,SAMA,SAAAC,GAAQ,MAAK,CACpCrD,iBAAkB,SAAAC,GAAa,OAAIoD,EAASrD,EAAiBC,QAGlDkD,CAA8CgB,GCnJhDqC,GACI,cADJA,GAEY,sBAFZA,GAGW,qBAHXA,GAIW,qBCYXC,GAAqB,SAAA1F,GAAO,MACrC,CACIhC,KAAMyH,GACNzG,QAASgB,ICPX2F,G,kDAQF,WAAY7F,GAAQ,IAAD,8BACf,cAAMA,IAPVpC,MAAQ,CACJkI,2BAA2B,GAKZ,EAFnBC,eAAiBtD,IAEE,EAwBnBuD,eAAiB,SAACC,GACd,EAAKF,eAAe,oBACE,oCAAnBE,EAAS3H,OACR,EAAKwB,SAAS,CACVgG,2BAA2B,IAIhCG,EAASC,aACR,EAAKC,cAAcF,EAASC,cA/BhC,EAAKF,eAAiB,EAAKA,eAAe/B,KAApB,gBACtB,EAAKkC,cAAgB,EAAKA,cAAclC,KAAnB,gBAHN,E,0DAMLiC,GAAa,IAAD,OAOtB7B,IAAMC,KAAKpH,EAAOqH,iBAAmBC,EAAY4B,cAAe,CAAC,aAAgBF,GANjE,CACZtC,QAAS,CACL,eAAgB,sBAKnBtG,MAAK,SAAAoH,GACF,EAAK1E,MAAMhB,SAAS0F,EAAIC,KAAJ,OACpB,EAAK3E,MAAMqG,aAEdhI,OAAM,SAAAC,GACH,EAAKyH,eAAe,gBAAiBzH,GACrCR,QAAQC,IAAIO,Q,+BAkBpB,OAAGuB,KAAKjC,MAAMkI,0BACLjG,KAAKG,MAAMuC,KAAKtD,MAaV,cAAC,GAAD,CAA0B4F,SAAUhF,KAAKG,MAAMsG,iCAXlD,cAAC,IAAD,CACIC,SAAUrJ,EAAOsJ,oBACjBC,OAAQ1D,EACR2D,WAAW,QACXtI,UAAWyB,KAAKmG,eAChBW,UAAW9G,KAAKmG,eAChBY,aAAc,qBACdC,YAAY,IASpB,qBAAK9G,UAAU,8CAAf,gG,GAjEgBsC,aAuFjBC,gBAbS,SAAC,GAAD,MACpB,CACIC,KAFgB,EAAGA,KAGnBtC,QAHgB,EAAQA,YAOL,SAAAuC,GAAQ,MAAK,CACpCxD,SAAU,SAAAC,GAAK,OAAIuD,EAASxD,EAASC,KACrCE,iBAAkB,SAAAC,GAAa,OAAIoD,EAASrD,EAAiBC,KAC7D0H,kBAAmB,SAAA5G,GAAO,OAAIsC,EAASoD,GAAmB1F,QAG/CoC,CAA8CuD,IC9FvDkB,G,oNAKQ,IAAD,OACL,OACI,sBAAKhH,UAAW,sCAAhB,UAEQF,KAAKG,MAAMC,QAAQ+G,kBAAoBnH,KAAKG,MAAMC,QAAQ+G,iBAAiB7G,OAAS,EAChF,oBAAIJ,UAAW,uBAAf,uCACA,oBAAIA,UAAW,uBAAf,wCAER,uBAEIF,KAAKG,MAAMC,QAAQ+G,kBAAoBnH,KAAKG,MAAMC,QAAQ+G,iBAAiBzH,KAAI,SAAA0H,GAC3E,OACI,sBAAKlH,UAAW,+EAAhB,UACKkH,EAASC,SACV,cAACrF,EAAA,EAAD,CAAQlB,QAAS,SAAUsC,QAAS,WAChC,EAAKjD,MAAMmH,mBAAmBF,EAASC,WACxCnH,UAAW,2CAA4C0F,MAAO,CAAC2B,IAAI,EAAGC,MAAM,EAAGC,OAAO,QAFzF,mBAFiG,aAAeL,EAASC,oB,GAjB1H7E,aA2ChBC,gBAXS,SAAC,GAAD,MACpB,CACIC,KAFgB,EAAGA,KAGnBtC,QAHgB,EAASA,YAON,SAAAuC,GAAQ,MAAK,CACpCoD,mBAAoB,SAAA1F,GAAO,OAAIsC,EAASoD,GAAmB1F,QAGhDoC,CAA8CyE,IChD9C,OAA0B,gCCKnChB,GAAiBtD,IAEvB,SAAS8E,GAAYC,EAAK3C,GACtBkB,GAAe,2BAA4ByB,GAC3CC,MAAMD,GACDlK,MAAK,SAAA2I,GAAQ,OAAIA,EAASyB,UAC1BpK,MAAK,SAAAqH,GAAI,OAAIE,EAASF,EAAKzE,Y,ICM9ByH,G,kDAaF,WAAY3H,GAAQ,IAAD,8BACf,cAAMA,IAZVpC,MAAQ,CACJgK,YAAa,CAACC,IAAK,MAAOC,IAAK,OAC/BC,WAAY,CAACF,IAAK,MAAOC,IAAK,OAC9BE,SAAU,GACVC,UAAW,GACXC,UAAU,EACVC,QAAS,IAKM,EAFnBpC,eAAiBtD,IAEE,EAkDnB2F,gBAAkB,SAAC7I,EAAK8I,GACpB,EAAKvI,SAAS,CACVmI,UAAW,CACP1I,IAAKA,EACL8I,KAAMA,MApDd,EAAKC,iBAAmB,EAAKA,iBAAiBrE,KAAtB,gBACxB,EAAKsE,iBAAmB,EAAKA,iBAAiBtE,KAAtB,gBACxB,EAAKuE,0BAA4B,EAAKA,0BAA0BvE,KAA/B,gBACjC,EAAKwE,iBAAmB,EAAKA,iBAAiBxE,KAAtB,gBACxB,EAAKyE,UAAY,EAAKA,UAAUzE,KAAf,gBACjB,EAAK0E,cAAgB,EAAKA,cAAc1E,KAAnB,gBAPN,E,gEAUE,IAAD,OAChB9G,UAAUyL,YAAYC,oBAAmB,SAACC,GACtC,EAAKhJ,SAAS,CACV8H,YAAa,CAAEC,IAAIiB,EAASC,OAAOC,SAAUlB,IAAKgB,EAASC,OAAOE,WAClElB,WAAY,CAAEF,IAAIiB,EAASC,OAAOC,SAAUlB,IAAKgB,EAASC,OAAOE,aAErE,EAAKC,cAAcJ,EAASC,a,oCAItBA,GACNA,GACJxB,GAAWrK,EAAOiM,eAAiBC,EAAKC,oBAAoBjE,QAAQ,QAAS2D,EAAOC,UAAU5D,QAAQ,SAAU2D,EAAOE,WAAYpJ,KAAK2I,6B,gDAGlHtI,GACtBL,KAAKG,MAAMsJ,gBAAgBpJ,GAC3BL,KAAKkG,eAAe,2BACpBlG,KAAKC,SAAS,CACVoI,UAAU,IAEdrI,KAAK4I,qB,yCAaL5I,KAAKC,SAAS,CACViI,WAAYlI,KAAKjC,MAAMgK,YACvBI,SAAU,O,yCAaC,IAAD,OACd,GAAInI,KAAKjC,MAAMqK,UAAU1I,IAAzB,CAIAM,KAAK8I,gBACL,IAAIpJ,EAAMM,KAAKjC,MAAMqK,UAAU1I,IAC/BM,KAAKG,MAAMC,QAAQsJ,eAAeC,SAAQ,SAAAhK,GACtC,IAAIsJ,EAAW,CAAEjB,IAAK,EAAKa,UAAUlJ,EAAGqI,KAAMC,IAAK,EAAKY,UAAUlJ,EAAGiK,OACjEC,EAAS,IAAI,EAAK9L,MAAMqK,UAAUI,KAAKsB,OAAO,CAC9Cb,SAAUA,EAEVvJ,MAKAyC,MAAOxC,EAAGiB,KACVmC,MAAO,CACHS,KAAK,IACLuG,MAAO,QACPC,WAAY,UAIpBH,EAAOI,YAAY,SAAS,WACxBJ,EAAOK,aAAa,EAAKnM,MAAMqK,UAAUI,KAAK2B,UAAUC,QACxDC,YAAW,WAAKR,EAAOK,aAAa,QAAS,QAGjDL,EAAOI,YAAY,aAAa,WAC5B,IAAMK,EAAeC,IAAE,WAAa5K,EAAG4C,WAAWiI,SAC5CC,EAAWF,IAAE,kBACfG,EAASJ,EAAaI,SAASnD,IAAMkD,EAASE,YAAcL,EAAaE,SAASE,SAASnD,IAC/FkD,EAASG,QAAQ,CAACD,UAAUD,GAAS,KACrC,EAAKG,mBAAmBlL,EAAG4C,cAE/B,EAAKxE,MAAMuK,QAAQrD,KAAK4E,WAnCxBQ,WAAWrK,KAAK4I,iBAAkB,O,sCAuCzB,IAAD,OACNJ,EAAOxI,KAAKjC,MAAMqK,UAAUI,KAC5B9I,EAAMM,KAAKjC,MAAMqK,UAAU1I,IAC7BmK,EAAS,IAAI7J,KAAKjC,MAAMqK,UAAUI,KAAKsB,OAAO,CAC9Cb,SAAUjJ,KAAKjC,MAAMgK,YACrB+C,UAAWtC,EAAK2B,UAAUY,KAC1BrL,MACA4D,KAAM,CAEFqE,IAAK,0HACLqD,WAAY,IAAIxC,EAAKyC,KAAK,GAAI,KAElC9I,MAAO,OAGX0H,EAAOI,YAAY,SAAS,WACxBJ,EAAOK,aAAa,EAAKnM,MAAMqK,UAAUI,KAAK2B,UAAUC,QACxDC,YAAW,WAAKR,EAAOK,aAAa,QAAS,U,gCAI3CgB,GACN,OAAOC,OAAOC,WAAWF,GAAQG,QAAQ,M,mCAGhCC,GACTtL,KAAKkG,eAAe,kCACpB,IAAIqF,EAAoB,IAAIvL,KAAKjC,MAAMqK,UAAUI,KAAKgD,kBAClDC,EAAqB,IAAIzL,KAAKjC,MAAMqK,UAAUI,KAAKkD,mBACvDD,EAAmBE,OAAO3L,KAAKjC,MAAMqK,UAAU1I,KAC/C,IAAIkM,EAAc,CAAE5D,IAAKhI,KAAK6I,UAAUyC,EAAOtD,KAAMC,IAAKjI,KAAK6I,UAAUyC,EAAO1B,OAE5EiC,EAAU,CACVC,OAAQ9L,KAAKjC,MAAMgK,YACnB6D,YAAaA,EACbG,WAAY/L,KAAKjC,MAAMqK,UAAUI,KAAKwD,WAAWC,SAGrDV,EAAkBW,MAAML,GAAS,SAASzF,EAAU+F,GACjC,OAAXA,GACAV,EAAmBW,cAAchG,Q,yCAK1B7D,GACfgI,IAAE,eAAe8B,YAAY,8BAC7B9B,IAAE,WAAWhI,GAAW+J,SAAS,gC,uCAGpBhB,GACbtL,KAAK6K,mBAAmBS,EAAO/I,WAC/B,IAAI0G,EAAW,CAACjB,IAAKoD,WAAWE,EAAOtD,KAAMC,IAAKmD,WAAWE,EAAO1B,OACpE5J,KAAKC,SAAS,CACViI,WAAYe,EACZd,SAAU,O,uCAIDpI,GACb,OAAOH,IAAOG,EAAM,cAAcD,OAAO,Y,+BAGnC,IAAD,OACL,OACI,kCACI,eAACyM,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGvM,UAAW,GAAvB,SAESF,KAAKjC,MAAMsK,SAAW,EACvB,sBAAKzC,MAAO,CAAC6B,OAAQ,IAAK5B,MAAO,QAAS3F,UAAW,sDAArD,UACI,cAAC,IAAD,CACIwM,iBAAkB,CAACC,IAAKtP,EAAOuP,eAAgBC,SAAU,MACzDC,cAAe,CAAC9E,IAAK,MAAOC,IAAK,OACjCqD,OAAQtL,KAAKjC,MAAMmK,WACnB6E,YAAa,GACbC,KAAMhN,KAAKjC,MAAMoK,SACjB8E,oCAAoC,EACpCC,kBAAmB,gBAAExN,EAAF,EAAEA,IAAK8I,EAAP,EAAOA,KAAP,OAAiB,EAAKD,gBAAgB7I,EAAK8I,IAC9D2E,kBAAmBnN,KAAKoN,yBAO5B,cAACpL,EAAA,EAAD,CAAQlB,QAAS,QAASZ,UAAU,uCAAuC0F,MAAO,CAAC4B,MAAO,GAAI6F,OAAO,IAAK5F,OAAQ,GAAI5B,MAAM,GAAIyH,aAAc,IAAKlK,QAASpD,KAAK0I,iBAAjK,kBAGI,sBAAK9C,MAAO,CAAC6B,OAAQ,IAAK5B,MAAO,QAAS3F,UAAW,sDAArD,UACJ,qBAAKqN,IAAKC,GAAU/F,OAAO,OAAQgG,IAAK,QACxC,qBAAK7H,MAAO,CAAC6B,OAAQ,OAAQ5B,MAAO,OAAQ0B,IAAK,EAAGmG,WAAY,oBAAsBxN,UAAU,qGAAhG,8DAMZ,eAACsM,EAAA,EAAD,CAAKC,GAAI,EAAG7G,MAAO,CAAC+H,UAAW,IAAKC,UAAU,QAAS1N,UAAU,gBAAjE,UAEQF,KAAKG,MAAMuC,KAAKmL,gBAAkB7N,KAAKG,MAAMuC,KAAKnD,eAAiBS,KAAKG,MAAMuC,KAAKnD,cAAc0E,SAASrC,EAASsC,mBACnH,cAAC,GAAD,CAAmBsC,QAASxG,KAAKG,MAAMqG,QAASC,+BAAgCzG,KAAKG,MAAMsG,iCAG7C,IAA7CzG,KAAKG,MAAMC,QAAQsJ,eAAepJ,QAAiB,cAACkM,EAAA,EAAD,CAAKtM,UAAW,WAAhB,SAChD,qBAAKA,UAAW,6EAA8E0F,MAAO,CAACC,MAAO,QAA7G,4CAMJ7F,KAAKG,MAAMC,QAAQsJ,eAAehK,KAAI,SAAA4L,GAAM,OACxC,cAACkB,EAAA,EAAD,CAAKtM,UAAW,WAAhB,SACI,sBAAKA,UAAW,mDACX4N,GAAI,UAAYxC,EAAO/I,UAAWa,QAAS,WAC5C,EAAKqF,iBAAiB6C,IAF1B,UAII,4BAAIA,EAAO1K,OACX,oBAAGV,UAAW,2BAAd,UAA2CoL,EAAOtO,SAAlD,KAA8DsO,EAAOrK,cACrE,oBAAGf,UAAW,2BAAd,UAA2CoL,EAAOpK,cAAlD,KAAmEoK,EAAOnK,WAA1E,KAAwFmK,EAAOlK,WAC/F,qBAAKlB,UAAW,8BAA+BkD,QAAS,WAAO,EAAK2K,aAAazC,IAC5E1F,MAAO,CAACoI,SAAS,IADtB,mCAIA,8BAEQ,EAAK7N,MAAM8N,mBAAmB9C,OAAOG,EAAOlK,UACxC,GACA,cAACP,EAAA,EAAD,CAAOC,QAAS,UAAWZ,UAAW,cAAekD,QAAS,WAC1D,EAAKjD,MAAM+N,cAAc/C,OAAOG,EAAOlK,WAD3C,iCAhBa,UAAYkK,EAAO/I,0B,GAhOnDC,aAmRlBC,gBAdS,SAAC,GAAD,MACpB,CACIC,KAFgB,EAAGA,KAGnBtC,QAHgB,EAASA,YAON,SAAAuC,GAAQ,MAAK,CACpCxD,SAAU,SAAAC,GAAK,OAAIuD,EAASxD,EAASC,KACrCqK,gBAAiB,SAAApJ,GAAO,OAAIsC,ELtRD,SAAAtC,GAAO,MAClC,CACIhC,KAAMyH,GACNzG,QAASgB,GKmRwBoJ,CAAgBpJ,KACrD0F,mBAAoB,SAAA1F,GAAO,OAAIsC,EAASoD,GAAmB1F,KAC3D8N,qBAAsB,kBAAMxL,ELzQ5B,CACItE,KAAMyH,GACNsI,oBAAoB,QK0Qb3L,CAA8CqF,I,SChSvDuG,GAAW,CACbzN,KAAM,QACN0N,QAASjR,EAAOkR,WAChBC,iBAAkB,CACd,CACIC,MAAO,UACPC,YAAa,CAAEC,QAAS,YACxBC,YAAa,CACT,CAAEhO,KAAM,WAAYiO,QAAS,WAAY/K,QAAS,CAAEgL,QAAQ,QAMtE5I,GAAiBtD,IAOvB,SAASmM,KAEL,OAAOC,EADYC,wBAAa,WAAxBD,UAIZ,SAASE,GAAUC,GAGf,OAFAjJ,GAAe,oBAAqBiJ,IAE7BtP,EADSoP,wBAAa,WAArBpP,KACG,CACCwH,SAAU8H,I,ICgHXC,G,kDA3IX,WAAYjP,GAAQ,IAAD,8BACf,cAAMA,IACDkP,mBAAqB,EAAKA,mBAAmBjL,KAAxB,gBAC1B,EAAKkL,mBAAqB,EAAKA,mBAAmBlL,KAAxB,gBAC1B,EAAKmL,yBAA2B,EAAKA,yBAAyBnL,KAA9B,gBAChC,EAAKoL,8BAAgC,EAAKA,8BAA8BpL,KAAnC,gBACrC,EAAKqL,uBAAyB,EAAKA,uBAAuBrL,KAA5B,gBAC9B,EAAKsL,QAAU,EAAKA,QAAQtL,KAAb,gBACf,EAAKuL,cAAgB,EAAKA,cAAcvL,KAAnB,gBACrB,EAAKoL,gCATU,E,4EAYa,IAAD,OAC3BT,KAAgBtR,MAAK,SAAAmS,GACjB,EAAKzP,MAAM4F,mBAAmB6J,Q,gCAI3B,IAAD,OACAjI,EAAMtK,EAAOqH,iBAAmBC,EAAYkL,cAC5C/L,EAAU,CACZC,QAAS,CACL,eAAgB,mBAChB,cAAiB,SAAW/D,KAAKG,MAAMuC,KAAKtD,QAIpDoF,IAAMC,KAAKkD,EAAI,GAAI7D,GACdrG,MAAK,SAAAoH,GACF,EAAK1E,MAAMb,iBAAiBuF,EAAIC,KAAJ,eAC5B,EAAK2K,uBAAuB5K,EAAIC,KAAJ,cAE/BtG,OAAM,SAAAC,GACH,EAAKyH,eAAe,gBAAiBzH,GACrCR,QAAQC,IAAIO,Q,+CAKC,IAAD,OACpB,GAAIuB,KAAKG,MAAMuC,KAAKtD,MAApB,CACA,IAAMuI,EAAMtK,EAAOqH,iBAAmBC,EAAYmL,kBAC5ChM,EAAU,CACZC,QAAS,CACL,eAAgB,mBAChB,cAAiB,SAAW/D,KAAKG,MAAMuC,KAAKtD,QAIpD2P,KAAgBtR,MAAK,SAAAsS,GACjBvL,IAAMC,KAAKkD,EAAK,CAAC,UAAaoI,EAAUrQ,KAAI,SAAAsQ,GAAC,OAAEA,EAAE3I,aAAYvD,GACxDrG,MAAK,SAAAoH,IDpCXoL,EADWhB,wBAAa,WAAvBgB,SCsC2BxS,MAAK,WACpBoH,EAAIC,KAAJ,UAAsB6E,SAAQ,SAAAtC,GAC1B6H,GAAU7H,MAEd,EAAKmI,sCAGZhR,OAAM,SAAAC,GACHR,QAAQC,IAAIO,Y,yCAKT4I,GACf,OAAQrH,KAAKG,MAAMC,QAAQ+G,iBAAiB5F,WAAU,SAAA+J,GAAM,OAAIA,EAAOjE,WAAaA,MAAY,I,+CAG3EA,GACrB,IAAMM,EAAMtK,EAAOqH,iBAAmBC,EAAYuL,oBAC5CpM,EAAU,CACZC,QAAS,CACL,eAAgB,mBAChB,cAAiB,SAAW/D,KAAKG,MAAMuC,KAAKtD,QAIpDoF,IAAMC,KAAKkD,EAAI,CAAC,SAAYN,GAAWvD,GAClCrG,MAAK,SAAAoH,GACF5G,QAAQkS,MAAMtL,MAEjBrG,OAAM,SAAAC,GACHR,QAAQC,IAAIO,Q,yCAIL4I,GACf,GAAIrH,KAAKqP,mBAAmBhI,GAA5B,EDzDR,SAAsB8H,GAAU,IACpBiB,EAAkBnB,wBAAa,WAA/BmB,aACRrB,KAAgBtR,MAAK,SAAAmS,GACjBA,EAAKjG,SAAQ,SAAAhK,GACL,GAAIA,EAAG0H,WAAa8H,EAChB,OAAOiB,EAAazQ,EAAG0H,gBCqDnCgJ,CAAahJ,GAGb,IADA,IAAIiJ,EAAkBtQ,KAAKG,MAAMC,QAAQ+G,iBAChCoJ,EAAID,EAAgB/O,WAAU,SAAA5B,GAAE,OAAIA,EAAG0H,WAAaA,KAAWkJ,EAAID,EAAgBhQ,OAAQ,EAAGiQ,IACnGD,EAAgBC,GAAKD,EAAgBC,EAAE,GAE3CD,EAAgBlL,MAEhBnH,QAAQC,IAAIoS,GACZtQ,KAAKG,MAAM4F,mBAAmBuK,GAC9BtQ,KAAKuP,yBAAyBlI,M,oCAGpBA,GACV,GAAGrH,KAAKG,MAAMC,QAAQ+G,iBAAiB7G,OAAS,EAC5C,IACIN,KAAKyG,+BAA+B,8EACtC,MAAO+J,GACLvS,QAAQC,IAAI,UAAWsS,QAK/B,IAAGxQ,KAAKqP,mBAAmBhI,GAA3B,CACA6H,GAAU7H,GACV,IAAIiJ,EAAkBtQ,KAAKG,MAAMC,QAAQ+G,iBACzCmJ,EAAgBrL,KAAK,CAACoC,SAAUA,IAChCrH,KAAKG,MAAM4F,mBAAmBuK,GAC9BtQ,KAAKyQ,oBAAoBpJ,M,0CAGTA,GAChB,IAAMM,EAAMtK,EAAOqH,iBAAmBC,EAAY+L,iBAC5C5M,EAAU,CACZC,QAAS,CACL,eAAgB,mBAChB,cAAiB,SAAW/D,KAAKG,MAAMuC,KAAKtD,QAIpDoF,IAAMC,KAAKkD,EAAI,CAAC,SAAYN,GAAWvD,GAClCrG,MAAK,SAAAoH,GACF5G,QAAQC,IAAI2G,MAEfrG,OAAM,SAAAC,GACHR,QAAQC,IAAIO,U,GAvIK+D,a,UCOlBmO,OAXf,YAAwD,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,SACxC,OACI,eAACC,GAAA,EAAD,CAAOC,KAAMJ,EAAWK,OAAQJ,EAAhC,UACI,cAACE,GAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACJ,GAAA,EAAMK,MAAP,8BAEJ,cAACL,GAAA,EAAMM,KAAP,UAAaP,QCDnBQ,G,kDAOF,WAAYnR,GAAQ,IAAD,8BACf,cAAMA,IAPVpC,MAAQ,CACJwT,mBAAmB,EACnBC,0BAA0B,EAC1BC,cAAc,IAKd,EAAKC,iBAAmB,EAAKA,iBAAiBtN,KAAtB,gBACxB,EAAKuN,iBAAmB,EAAKA,iBAAiBvN,KAAtB,gBAHT,E,+DAMA,IAAD,OACdpE,KAAKC,SAAS,CACVsR,mBAAmB,IAGvB,IAAM5J,EAAMtK,EAAOqH,iBAAmBC,EAAYiN,cAC5C9N,EAAU,CACZC,QAAS,CACL,eAAgB,mBAChB,cAAiB,SAAW/D,KAAKG,MAAMuC,KAAKtD,QAIpDoF,IAAMC,KAAKkD,EAAK,CAACkK,SAAS7R,KAAKjC,MAAM0T,eAAgB3N,GAChDrG,MAAK,SAAAoH,GACF5G,QAAQkS,MAAMtL,MAEjBrG,OAAM,SAAAC,GACH,EAAKwB,SAAS,CACVsR,mBAAmB,IAEvBtT,QAAQC,IAAIO,Q,uCAIPwE,GACb,IAAIO,EAAOP,EAAMnB,OAAOwD,MACxBtF,KAAKC,SAAS,CACVwR,cAAejO,EACfgO,yBAA0BhO,EAAKlD,OAAS,O,+BAK5C,OACI,yBAASJ,UAAU,MAAnB,SACI,qBAAKA,UAAU,sCAAf,SACI,eAACqM,EAAA,EAAD,WACG,eAACC,EAAA,EAAD,WACI,qBAAKtM,UAAU,mBAAf,+BACA,mBAAGyB,KAAK,kFAAkFG,OAAO,SAASC,IAAK,aAAc7B,UAAU,gBAAvI,SACI,sBAAKA,UAAU,eAAe0F,MAAO,CAACoE,WAAY,IAAKgE,SAAU,IAAjE,oBACW,sBAAM9N,UAAU,mCAAmC0F,MAAO,CAACkM,QAAS,mBAApE,wBAKd9R,KAAKG,MAAMuC,KAAKmL,cAChB,eAACrB,EAAA,EAAD,WACI,qBAAKtM,UAAU,mBAAf,sBACA,gCACA,0BAAUA,UAAW,+BACXwF,SAAU1F,KAAK2R,iBACfrM,MAAOtF,KAAKjC,MAAM0T,cAClBpO,SAAUrD,KAAKjC,MAAMwT,oBAEvBvR,KAAKjC,MAAMwT,kBAAoB,8DAC3B,cAACvP,EAAA,EAAD,CAAQlB,QAAS,UAAWZ,UAAU,mBAC9BkD,QAASpD,KAAK0R,iBACdrO,SAAUrD,KAAKjC,MAAMyT,yBAF7B,qC,GAtEvBhP,aA8FNC,gBARS,SAAC,GAAD,MACpB,CACIC,KAFgB,EAAGA,SAMA,iBAAO,KAEnBD,CAA8C6O,IC/E7DtO,IAAQ+O,WAAW1U,EAAO2U,qB,IAEpBC,G,kDAyBF,WAAY9R,GAAQ,IAAD,8BACf,cAAMA,IAzBVpC,MAAQ,CACJmU,cAAc,EACd7K,SAAU,GACV8K,YAAY,IACZC,mBAAmB,EACnBhS,QAAS,GACTiS,aAAczS,MAASE,OAAO,cAC9BwS,OAAQ,GACRC,UAAW,GACXC,YAAY,EACZC,WAAY,GACZC,iCAAiC,GAalB,EAVnB5O,QAAU,CACNC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAiB,UAAY,EAAK5D,MAAMuC,KAAKtD,QAMlC,EAFnB8G,eAAiBtD,IAIbI,IAAQ2P,SAAS5V,OAAOC,SAAS4V,SAAW7V,OAAOC,SAAS6V,QAE5D,EAAKC,SAAW,EAAKA,SAAS1O,KAAd,gBAChB,EAAK2O,cAAgB,EAAKA,cAAc3O,KAAnB,gBACrB,EAAK4O,aAAe,EAAKA,aAAa5O,KAAlB,gBACpB,EAAK6O,gBAAkB,EAAKA,gBAAgB7O,KAArB,gBACvB,EAAK8O,qBAAuB,EAAKA,qBAAqB9O,KAA1B,gBAC5B,EAAK+O,gBAAkB,EAAKA,gBAAgB/O,KAArB,gBAEvB,EAAKgP,uBAAyB,EAAKA,uBAAuBhP,KAA5B,gBAC9B,EAAKiP,gBAAkB,EAAKA,gBAAgBjP,KAArB,gBACvB,EAAKkP,iBAAmB,EAAKA,iBAAiBlP,KAAtB,gBACxB,EAAKmP,oBAAsB,EAAKA,oBAAoBnP,KAAzB,gBAC3B,EAAKoP,SAAW,EAAKA,SAASpP,KAAd,gBAChB,EAAKqC,+BAAiC,EAAKA,+BAA+BrC,KAApC,gBACtC,EAAKqP,WAAa,EAAKA,WAAWrP,KAAhB,gBAjBH,E,gEAsBfpE,KAAK8S,WACL9S,KAAK+S,cAAc,GACnB/S,KAAK0T,gB,oCAGK,IAAD,OACH/L,EAAMtK,EAAOqH,iBAAmBC,EAAYgP,aAC5C7P,EAAU,CACZC,QAAS,CACL,eAAgB,mBAChB,cAAiB,SAAW/D,KAAKG,MAAMuC,KAAKtD,QAIpDoF,IAAMC,KAAKkD,EAAK,GAAI7D,GACfrG,MAAK,SAAAoH,GACF5G,QAAQC,IAAI2G,GACZ,EAAK6K,UACL,EAAKvP,MAAMyT,eAAc,MAE5BpV,OAAM,SAAAC,GACH,EAAK0B,MAAMhB,SAAS,MACpB,EAAKgB,MAAMb,iBAAiB,SACNuU,IAAnBpV,EAAM2H,UAAoD,MAA1B3H,EAAM2H,SAAS+F,OAC9C,EAAKhM,MAAMyT,eAAc,GAEzB,EAAKzT,MAAMyT,eAAc,GAE7B3V,QAAQC,IAAIO,Q,6CAKpBuB,KAAKC,SAAS,CACViS,cAAc,M,iCAIX,IAAD,OACN1N,IAAMsP,IAAIzW,EAAOiM,eAAiBC,EAAKwK,WAAY/T,KAAK8D,SAASrG,MAAM,SAAA2I,GAC5C,MAApBA,EAAS+F,QAAkB/F,EAAStB,KAAKwN,OAAOhS,OAAS,EACxD,EAAKL,SAAS,CACVqS,OAAQlM,EAAStB,KAAKwN,SAG1BrU,QAAQC,IAAIkI,MAEjB5H,OAAO,SAAAwV,GAAG,OAAI/V,QAAQQ,MAAMuV,Q,oCAGrBjW,GAAO,IAAD,OAChByG,IAAMsP,IAAIzW,EAAOiM,eAAiBC,EAAK0K,aAAa1O,QAAQ,aAAcxH,GAAQiC,KAAK8D,SAASrG,MAAM,SAAA2I,GAC3E,MAApBA,EAAS+F,QAAkB/F,EAAStB,KAAKyN,UAAUjS,OAAS,EAC3D,EAAKL,SAAS,CACVsS,UAAWnM,EAAStB,KAAKyN,YAG7BtU,QAAQQ,MAAM2H,MAEnB5H,OAAO,SAAAwV,GAAG,OAAI/V,QAAQQ,MAAMuV,Q,2CAGdE,GACjBlU,KAAKC,SAAS,CACVkS,YAAa+B,M,wCAKjB,GAAiC,IAA9BlU,KAAKjC,MAAMsJ,SAAS/G,OAAvB,CACAN,KAAKkG,eAAe,qBAAsBlG,KAAKjC,MAAMsJ,UACrD,IAAItH,EAAOH,IAAOI,KAAKjC,MAAMsU,cAAcvS,OAAO,cAClD4H,GAAWrK,EAAOiM,eAAiBC,EAAK4K,qBAAqB5O,QAAQ,YAAavF,KAAKjC,MAAMsJ,UAAU9B,QAAQ,SAAUxF,GAAMwF,QAAQ,YAAavF,KAAKjC,MAAMqC,SAAUJ,KAAKuT,wB,yCAI9K,KAAGvT,KAAKjC,MAAMoU,YAAY7R,QAAU,GAApC,CACAN,KAAKkG,eAAe,qBAAsBlG,KAAKjC,MAAMsJ,UACrD,IAAItH,EAAOH,IAAOI,KAAKjC,MAAMsU,cAAcvS,OAAO,cAClD4H,GAAWrK,EAAOiM,eAAiBC,EAAK6K,qBAAqB7O,QAAQ,gBAAiBvF,KAAKjC,MAAMoU,aAAa5M,QAAQ,SAAUxF,GAAMwF,QAAQ,YAAavF,KAAKjC,MAAMqC,SAAUJ,KAAKuT,wB,0CAGrKlT,GAChBL,KAAKG,MAAMkU,WAAWhU,GACtBL,KAAKkG,eAAe,oBACjB7F,EAAQC,OAAS,IAAMN,KAAKqP,mBAAmBlE,OAAOnL,KAAKjC,MAAMsJ,YAChErH,KAAKC,SAAS,CACVyS,iCAAiC,M,sCAK7BzP,GACZjD,KAAKC,SAAS,CACVG,QAAS6C,EAAMnB,OAAOwD,U,mCAIjBrC,GACTjD,KAAKC,SAAS,CACVoS,aAAcpP,EAAMnB,OAAOwD,QAE/BtF,KAAKsU,uBAAuBC,QAAQvB,aAAa/P,EAAMnB,OAAOwD,S,sCAGlDrC,GACZ,IAAIoC,EAASpC,EAAMnB,OAAOwD,MAAMC,QAAQ,MAAO,IAC/CvF,KAAKC,SAAS,CACVoH,SAAUhC,EACVqN,iCAAiC,EACjCN,kBAAiD,IAA9BnP,EAAMnB,OAAOwD,MAAMhF,W,+CAK1C,OACI,gCACI,yBAAQJ,UAAW,oCAAqCoF,MAAOtF,KAAKjC,MAAMqC,QAASsF,SAAU1F,KAAKmT,gBAAlG,UACI,wBAAQ7N,MAAM,GAAd,yBACA,wBAAQA,MAAOlF,EAAQoU,QAAvB,SAAiCpU,EAAQoU,UACzC,wBAAQlP,MAAOlF,EAAQqU,WAAvB,SAAoCrU,EAAQqU,gBAEhD,cAACjP,EAAA,EAAD,CAAatF,UAAW,uBAAwBuF,YAAa,mBAAoBpH,KAAM,OAAQiH,MAAOtF,KAAKjC,MAAMsU,aAAc3M,SAAU1F,KAAKgT,oB,iCAK/I,IAAD,OACArL,EAAMtK,EAAOqH,iBAAmBC,EAAY+P,WAC5C5Q,EAAU,CACZC,QAAS,CACL,eAAgB,mBAChB,cAAiB,SAAW/D,KAAKG,MAAMuC,KAAKtD,QAIpDoF,IAAMC,KAAKkD,EAAK,GAAI7D,GACfrG,MAAK,SAAAoH,GACF,EAAK1E,MAAMhB,SAAS,MACpB,EAAKgB,MAAMb,iBAAiB,OAE/Bd,OAAM,SAAAC,GACHR,QAAQC,IAAIO,Q,mCAKpBuB,KAAKC,SAAS,CACVuS,YAAY,M,qDAIWhP,GAC3BxD,KAAKC,SAAS,CACVuS,YAAY,EACZC,WAAYjP,M,+BAIV,IAAD,OACL,OACI,eAACmR,EAAA,EAAD,CAAWzU,UAAW,GAAtB,UACI,qBAAKA,UAAW,oBAAhB,SAEkC,OAA1BF,KAAKG,MAAMuC,KAAKtD,OAChB,cAAC4C,EAAA,EAAD,CAAQlB,QAAS,SAAUZ,UAAW,yCAA0CkD,QAASpD,KAAKwT,SAA9F,sBAGR,eAACoB,EAAA,EAAD,CAAMC,iBAAiB,MAAMC,YAAY,EAAOhH,GAAG,qBAAqB5N,UAAW,qEAAnF,UACI,cAAC6U,EAAA,EAAD,CAAKC,SAAS,MAAM7S,MAAO,UAA3B,SACI,sBAAKjC,UAAW,0DAAhB,UAEkC,OAA1BF,KAAKG,MAAMuC,KAAKtD,OAChB,qBAAKc,UAAU,wCAAf,4GAKJ,cAAC,GAAD,CAAoBgO,cAAelO,KAAK2P,cACpB1B,mBAAoBjO,KAAKqP,mBACzB7I,QAASxG,KAAK0P,QACdjJ,+BAAgCzG,KAAKyG,sCAGjE,cAACsO,EAAA,EAAD,CAAKC,SAAS,OAAO7S,MAAM,WAA3B,SACI,qBAAKjC,UAAU,2GAA2G0F,MAAO,CAAC6B,OAAO,KAAzI,SACI,sBAAKvH,UAAW,WAAhB,UACI,cAACsF,EAAA,EAAD,CAAatF,UAAW,kBAAmBuF,YAAa,iBAAkBpH,KAAK,SAASiH,MAAOtF,KAAKjC,MAAMsJ,SAAU3B,SAAU1F,KAAKiT,kBAE/HjT,KAAKjC,MAAM2U,iCACX,cAAC1Q,EAAA,EAAD,CAAQlB,QAAS,kBACTZ,UAAW,wCACX0F,MAAO,CAAC2B,IAAK,EAAGC,MAAO,QACvBpE,QAAS,WAAM,EAAKuM,cAAcxE,OAAO,EAAKpN,MAAMsJ,YAH5D,gCAKJ,mBAAM+L,uBAAN,IACA,cAACpR,EAAA,EAAD,CAAQlB,QAAS,UAAWZ,UAAW,oBAAqBkD,QAASpD,KAAKqT,gBAAiBhQ,UAAWrD,KAAKjC,MAAMqU,kBAAjH,wCAIZ,cAAC2C,EAAA,EAAD,CAAKC,SAAS,UAAU7S,MAAM,WAA9B,SACI,qBAAKjC,UAAU,2FAA2F0F,MAAO,CAAC6B,OAAO,KAAzH,SACI,sBAAKvH,UAAU,WAAf,UACI,wBAAQA,UAAW,+BAAgCuF,YAAa,eAAgBC,SAAU,SAAA8K,GAAM,EAAKuC,cAAcvC,EAAE1O,OAAOwD,QAA5H,SAEQtF,KAAKjC,MAAMuU,OAAO5S,KAAI,SAAAC,GAAE,OAAI,wBAA0B2F,MAAO3F,EAAGsV,SAApC,SAA+CtV,EAAGwB,YAArCxB,EAAGsV,eAGpD,wBAAQ/U,UAAW,oCAAqCuF,YAAa,kBAAmBH,MAAOtF,KAAKjC,MAAMoU,YAAazM,SAAW,SAAA8K,GAAM,EAAK0C,qBAAqB1C,EAAE1O,OAAOwD,QAA3K,SAEQtF,KAAKjC,MAAMwU,UAAU7S,KAAI,SAAAC,GAAE,OAAI,wBAA6B2F,MAAO3F,EAAGwS,YAAvC,SAAqDxS,EAAGuB,eAA3CvB,EAAGwS,kBAGvD,mBAAMiB,uBAAN,IACA,cAACpR,EAAA,EAAD,CAAQlB,QAAS,UAAWZ,UAAW,oBAAqBkD,QAASpD,KAAKsT,iBAA1E,wCAIZ,cAACyB,EAAA,EAAD,CAAKC,SAAS,UAAU7S,MAAM,gBAA9B,SACI,sBAAKjC,UAAU,wEAAf,UAEQF,KAAKG,MAAMuC,KAAKmL,cAChB,qBAAK3N,UAAU,MAAf,SACI,cAAC,GAAD,CAAmBsG,QAASxG,KAAK0P,YAGzC,qBAAKxP,UAAU,MAAf,SACI,cAAC,GAAD,CAAkBoH,mBAAoBtH,KAAKsP,+BAK3D,cAAC,EAAD,IACA,cAAC,GAAD,CAAWsB,UAAW5Q,KAAKjC,MAAMyU,WAAY1B,SAAU9Q,KAAKjC,MAAM0U,WAAY5B,YAAa7Q,KAAKyT,aAChG,eAAClH,EAAA,EAAD,CAAKrM,UAAU,OAAf,UACI,cAACsM,EAAA,EAAD,CAAKtM,UAAW,GAAIuM,GAAI,EAAxB,SACI,cAAC,GAAD,CAAmBnF,mBAAoBtH,KAAKsP,uBAEhD,cAAC9C,EAAA,EAAD,CAAKtM,UAAW,OAAQuM,GAAI,EAA5B,SACI,mBAAG9K,KAAK,kCAAkCG,OAAO,SAASC,IAAK,aAA/D,SACI,qBAAK6D,MAAO,CAACC,MAAO,OAAQ4B,OAAQ,OAAQyN,gBAAiB,iFAAkFC,mBAAoB,SAAUC,eAAgB,SAA7L,SACI,cAACpT,EAAA,EAAD,CAAQ4D,MAAO,CAACC,MAAO,OAAQ4B,OAAQ,OAAQiG,WAAY,oBAAqBxN,UAAU,8BAA1F,mDAOhB,cAAC,GAAD,W,GAvSgBkP,IA6TjB3M,gBAfS,SAAC,GAAD,MACpB,CACIC,KAFgB,EAAGA,KAGnBtC,QAHgB,EAASA,YAON,SAAAuC,GAAQ,MAAK,CACpCxD,SAAU,SAAAC,GAAK,OAAIuD,EAASxD,EAASC,KACrCiV,WAAY,SAAAhU,GAAO,OAAIsC,EV7UD,SAAAtC,GAAO,MAC7B,CACIhC,KAAMyH,GACNzG,QAASgB,GU0UmBgU,CAAWhU,KAC3CuT,cAAe,SAAAyB,GAAI,OAAI1S,EhBhUE,SAAA0S,GAAI,MAC7B,CACIhX,KAAMa,EACNG,QAASgW,GgB6TmBzB,CAAcyB,KAC9C/V,iBAAkB,SAAAyF,GAAY,OAAIpC,EAASrD,EAAiByF,KAC5DgB,mBAAoB,SAAA1F,GAAO,OAAIsC,EAASoD,GAAmB1F,QAGhDoC,CAA8CwP,IC5UvDqD,GAAYvY,OAAOuY,WAAcvY,OAAQwY,cAAiBxY,OAAQyY,iBAAoBzY,OAAQ0Y,aAEpG,WACI,IAAIC,EAAgBJ,GAAUK,KAAK,QAAStY,EAAOkR,YACnDmH,EAAcE,gBAAkB,SAAU3S,GACtC,IAAI4S,EAAWH,EAAcI,OAC1BD,EAASE,iBAAiBC,SAAS,WAC/B/S,EAAMgT,aACLJ,EAASK,kBAAkB,WACfL,EAASM,kBAAkB,UAAW,CAACxH,QAAQ,aACrDyH,YAAY,WAAY,WAAY,CAACtH,QAAQ,KAG3C+G,EAASM,kBAAkB,UAAW,CAACxH,QAAS,aACtDyH,YAAY,WAAY,WAAY,CAACtH,QAAQ,KAG3D4G,EAAcW,UAAY,SAAUpT,GACjByS,EAAcI,OAChBC,iBAAiBC,SAAS,YACnCV,GAAUgB,eAAe,UAKrCC,GACAC,kBAAOnI,I,IAgEQoI,G,kDAvDX,WAAYtW,GAAQ,IAAD,8BACf,cAAMA,IANVpC,MAAQ,CACJ2Y,yBAAyB,EACzBC,yBAA0B,gGAK1B,EAAKC,+BAAiC,EAAKA,+BAA+BxS,KAApC,gBAFvB,E,gEAMXpE,KAAK6W,+BAML7W,KAAK4W,iCAC0B,YAA5BE,aAAaC,YACZD,aAAaE,kBAAkBhX,KAAK4W,gCAAgCnZ,MAAK,SAAAwZ,QAP7EjX,KAAKC,SAAS,CACVyW,yBAAyB,EACzBC,yBAA0B,yD,uDAaH,WAA5BG,aAAaC,YACZ/W,KAAKC,SAAS,CACVyW,yBAAyB,M,oDAMjC,MAAO,kBAAmBpZ,WAAa,gBAAiBP,S,+BAIxD,OACI,sBAAKmD,UAAU,MAAf,WAESF,KAAKjC,MAAM2Y,yBACZ,qBAAKxW,UAAU,mCAAf,SACKF,KAAKjC,MAAM4Y,2BAGpB,cAAC,IAAD,UACI,cAAC,IAAD,UAGI,cAAC,IAAD,CAAOO,KAAM,GAAIC,OAAO,EAAMC,UAAWnF,gB,GArD/CzP,a,+CCnCZ6U,GAAgB,CAClBxJ,cAAa,EACbzO,MAAM,KACNG,cAAc,IAwBH+X,GArBK,WAAoC,IAAnCvZ,EAAkC,uDAA1BsZ,GAAevU,EAAW,uCACnD,OAAQA,EAAOzE,MACX,KAAKa,EACD,OAAO,6BACAnB,GADP,IAEIqB,MAAO0D,EAAOzD,UAEtB,KAAKH,EACD,OAAO,6BACAnB,GADP,IAEI8P,aAAc/K,EAAOzD,UAE7B,KAAKH,EACD,OAAO,6BACAnB,GADP,IAEIwB,cAAeuD,EAAOzD,UAE9B,QACI,OAAOtB,IC1BNwZ,GACK,eADLA,GAEM,gBCCbF,GAAgB,CAClBlO,SAAU,IACVC,UAAW,KAoBAoO,GAjBS,WAAoC,IAAnCzZ,EAAkC,uDAA1BsZ,GAAevU,EAAW,uCACvD,OAAQA,EAAOzE,MACX,KAAKkZ,GACD,OAAO,6BACAxZ,GADP,IAEIoL,SAAUrG,EAAOzD,UAEzB,KAAKkY,GACD,OAAO,6BACAxZ,GADP,IAEIqL,UAAWtG,EAAOzD,UAE1B,QACI,OAAOtB,ICnBbsZ,GAAgB,CAClBhX,QAAS,GACTqJ,eAAgB,GAChB0E,oBAAoB,EACpBjH,iBAAkB,IA8BPsQ,GA3BO,WAAyC,IAAxC1Z,EAAuC,uDAA/BsZ,GAAevU,EAAgB,uDAAP,GACnD,OAAQA,EAAOzE,MACX,KAAKyH,GACD,OAAO,6BACA/H,GADP,IAEIsC,QAASyC,EAAOzD,QAChB+O,oBAAoB,IAE5B,KAAKtI,GACD,OAAO,6BACA/H,GADP,IAEI2L,eAAgB5G,EAAOzD,UAE/B,KAAKyG,GACD,OAAO,6BACA/H,GADP,IAEIoJ,iBAAkBrE,EAAOzD,UAEjC,KAAKyG,GACD,OAAO,6BACA/H,GADP,IAEIqQ,mBAAoBtL,EAAOzD,UAEnC,QACI,OAAOtB,IC5BJ2Z,gBACX,CACIhV,KAAM4U,GACNrO,SAAUuO,GACVpX,QAASqX,KCHXE,GAAgB,CAClBhL,IAAK,OACLiL,aACAC,UAAW,CAAC,YAIVC,GAAmBC,aAAeJ,GAAeK,IAQ1CvJ,GAAQwJ,aAAYH,IACpBI,GAAgBC,aAAa1J,I,oCCH1C2J,KAAQvY,IACJwY,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,MAGJC,IAASpS,OACP,cAAC,IAAMqS,WAAP,UACI,cAAC,IAAD,CAAUxK,MAAOA,GAAjB,SACI,eAAC,KAAD,CAAayK,QAAS,KAAMC,UAAWjB,GAAvC,UACI,cAAC,IAAD,IACA,cAAC,GAAD,WAIZkB,SAASC,eAAe,S3BjBnB,SAAkBhc,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIgc,IAAIC,GAAwBxc,OAAOC,SAAS2E,MACpDmK,SAAW/O,OAAOC,SAAS8O,OAIvC,OAGF/O,OAAOyc,iBAAiB,QAAQ,WAC9B,IAAMpc,EAAK,UAAMmc,GAAN,sBAEP1c,IAqEV,SAAiCO,EAAeC,GAE9CuK,MAAMxK,EAAO,CACX2G,QAAS,CAAE,iBAAkB,YAE1BtG,MAAK,SAAC2I,GAEL,IAAMqT,EAAcrT,EAASrC,QAAQ+P,IAAI,gBAEjB,MAApB1N,EAAS+F,QACO,MAAfsN,IAA8D,IAAvCA,EAAYtU,QAAQ,cAG9C7H,UAAUC,cAAcmc,MAAMjc,MAAK,SAACC,GAClCA,EAAaic,aAAalc,MAAK,WAC7BV,OAAOC,SAAS4c,eAKpBzc,EAAgBC,EAAOC,MAG1BmB,OAAM,WACLP,QAAQC,IAAI,oEA3FZ2b,CAAwBzc,EAAOC,GAI/BC,UAAUC,cAAcmc,MAAMjc,MAAK,WACjCQ,QAAQC,IACJ,+GAMNf,EAAgBC,EAAOC,O2BL/Byc,GAKApb,K","file":"static/js/main.1009d144.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://cra.link/PWA.'\n                );\n\n                if(registration.waiting){\n                  registration.waiting.postMessage({ type: 'SKIP_WAITING' });\n                }\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","export const UserActionTypes = {\n    SET_USER_TOKEN: 'SET_USER_TOKEN',\n    SET_SERVER_STAT: 'SET_SERVER_STAT',\n    SET_USER_SUBSCRIPTION: 'SET_USER_SUBSCRIPTION'\n}","import { UserActionTypes } from \"./user.types\";\n\nexport const setToken = token => (\n    {\n        type: UserActionTypes.SET_USER_TOKEN,\n        payload:token\n    }\n)\n\nexport const setSubscriptions = subscriptions => (\n    {\n        type: UserActionTypes.SET_USER_SUBSCRIPTION,\n        payload:subscriptions\n    }\n)\n\nexport const setServerStat = stat => (\n    {\n        type: UserActionTypes.SET_SERVER_STAT,\n        payload: stat\n    }\n)\n","import React, {Component} from 'react';\nimport {Badge, Button, Table} from \"react-bootstrap\";\nimport moment from \"moment\";\nimport Constant from \"../../constants/Constant.json\";\nimport {setToken} from \"../../../../redux/user/user.actions\";\nimport {connect} from \"react-redux\";\n\nclass VaccineSessionTable extends Component {\n    state = {\n        week: [0 ,1, 2, 3, 4, 5, 6].map(it=> moment().add(it, 'day').format(\"DD-MM-YY\"))\n    }\n\n    OnChangeDate(date){\n        this.setState({\n            week: [0 ,1, 2, 3, 4, 5, 6].map(it=> moment(date, 'YYYY-MM-DD').add(it, 'day').format(\"DD-MM-YY\"))\n        })\n    }\n\n    render() {\n        return (\n            <div className={\"bg-white shadow rounded-lg mt-2 overflow-hidden p-0\"}>\n                {\n                    this.props.vaccine.centers.length > 0 &&\n                    <Table striped bordered hover>\n                        <thead>\n                        <tr>\n                            <th>Name</th>\n                            {\n                                this.state.week.map(day =>\n                                    <th key={\"th-\" + day}>{day}</th>\n                                )\n                            }\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            this.props.vaccine.centers.map(it =>\n                                <tr key={it.center_id}>\n                                    <td>\n                                        <div>\n                                            <div className={\"font-weight-bolder\"}>\n                                                {it.name}\n                                                <sup className={\"small\"}>\n                                                    {' '}<Badge variant=\"secondary\">{it.fee_type}</Badge>\n                                                </sup>\n                                            </div>\n                                            <p className={\"text-secondary small m-0\"}>{it.address}, {it.block_name}</p>\n                                            <p className={\"text-secondary small m-0\"}>{it.district_name}, {it.state_name}, {it.pincode}</p>\n                                        </div>\n                                    </td>\n                                    {\n                                        this.state.week.map(date => {\n                                            let index = it.sessions.findIndex(session => session.date === moment(date, 'DD-MM-YY').format('DD-MM-YYYY'));\n                                            if (index >= 0) {\n                                                return (\n                                                    <td key={it.sessions[index].session_id}>\n                                                        <div>\n                                                            {/*{it.sessions[index].session_id}*/}\n                                                            <span className={\"\"}>{it.sessions[index].vaccine}</span>\n                                                            <p className={\"small m-0 text-danger\"}>For {it.sessions[index].min_age_limit}+</p>\n                                                            {\n                                                                it.sessions[index].available_capacity ?\n                                                                        <a href={Constant.COWIN_REGISTRATION}\n                                                                           target=\"_blank\" rel=\"noreferrer\">\n                                                                            <Button variant={\"success p-1\"}\n                                                                                    data-toggle=\"tooltip\"\n                                                                                    data-placement=\"top\"\n                                                                                    title=\"Tooltip on top\">\n                                                                                Book <sup><Badge\n                                                                                variant={\"primary\"}>{it.sessions[index].available_capacity}</Badge></sup>\n                                                                            </Button>\n                                                                        </a> :\n                                                                    <Button variant={\"danger p-0\"}>Booked</Button>\n                                                            }\n                                                        </div>\n                                                    </td>\n                                                );\n                                            } else {\n                                                return (<td key={Math.random()}/>);\n                                            }\n                                        })\n                                    }\n                                </tr>\n                            )\n                        }\n                        </tbody>\n                    </Table>\n                }\n                {\n                    this.props.vaccine.centers.length <=0 && <div className=\"text-center font-weight-bold p-4\">No centers are available for now, try to search for another pin code.</div>\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ user, vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (VaccineSessionTable);\n","import ReactGA from \"react-ga\";\n\nconst GoogleAnalyticsEventTracker = ( category = \"Event Category\") => {\n    return (action =\"action\", label=\"label\") => {\n        ReactGA.event({category, action, label})\n    };\n}\n\nexport default GoogleAnalyticsEventTracker;","import {Button} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nexport const WhatsAppButtonRender = (renderProps) => (\n    <Button onClick={renderProps.onClick} disabled={renderProps.disabled} variant={\"primary\"} className={\"shadow my-1\"}>\n        <FontAwesomeIcon icon={'comment-dots'} size={\"3x\"} />\n        <div>\n            {\n                renderProps.text ||\n                \"Login and subscribe SMS notification\"\n            }\n        </div>\n    </Button>\n)","import React, {Component} from 'react';\nimport {WhatsAppButtonRender} from \"./WhatsAppButtonRender\";\nimport {setSubscriptions} from \"../../../../redux/user/user.actions\";\nimport {connect} from \"react-redux\";\nimport config from \"../../config.json\";\nimport BackendUrls from \"../../constants/BackendUrls.json\";\nimport axios from \"axios\";\nimport Constant from \"../../constants/Constant.json\";\nimport {Button, FormControl} from \"react-bootstrap\";\n\nclass WhatsAppSubscribeManager extends Component {\n    state={\n        mobile_number: \"\",\n        is_valid_mobile: false,\n        show_mobile_input: false,\n        submitting_mobile: false\n    }\n\n    options = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Token ' + this.props.user.token\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.OnWaSubscriptionBtnToggle = this.OnWaSubscriptionBtnToggle.bind(this);\n        this.OnMobileChange = this.OnMobileChange.bind(this);\n        this.OnSubmitMobile = this.OnSubmitMobile.bind(this);\n    }\n\n    IsSubscriptionContainsWa(){\n        return this.props.user.subscriptions && this.props.user.subscriptions.includes(Constant.SUBSCRIPTION_WA);\n    }\n\n    OnSubmitMobile() {\n        if (this.IsSubscriptionContainsWa()) return;\n        this.setState({\n            submitting_mobile: true\n        })\n\n        const payload = {\n            'subscription': Constant.SUBSCRIPTION_WA,\n            'mobile': this.state.mobile_number\n        }\n        axios.post(config.BACKEND_BASE_URL + BackendUrls.NOTIFICATION_SUBSCRIBED_URL, payload, this.options)\n            .then(res => {\n                if (res.data[\"status\"] === \"success\" || res.data[\"message\"] === \"you already subscribed\") {\n                    let subscription = this.props.user.subscriptions;\n                    this.props.callback && this.props.callback(res.data[\"message\"]);\n                    if(subscription) {\n                        subscription.push(Constant.SUBSCRIPTION_WA);\n                        this.props.setSubscriptions(subscription);\n                    }\n                }else {\n                    this.setState({\n                        submitting_mobile: false,\n                        show_mobile_input: false\n                    })\n                }\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({\n                    submitting_mobile: false\n                })\n            });\n    }\n\n    OnWaSubscriptionBtnToggle(){\n        if(this.IsSubscriptionContainsWa()){\n            const payload = {\n                'subscription': Constant.SUBSCRIPTION_WA,\n            }\n\n            axios.post(config.BACKEND_BASE_URL + BackendUrls.NOTIFICATION_UNSUBSCRIBED_URL, payload, this.options)\n                .then(res => {\n                    if (res.data[\"status\"] === \"success\") {\n                        let subscription = this.props.user.subscriptions;\n                        if(subscription) {\n                            subscription[subscription.indexOf(Constant.SUBSCRIPTION_WA)] = subscription[subscription.length - 1]\n                            subscription.pop();\n                            this.props.setSubscriptions(subscription);\n                        }\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n        else {\n            this.setState({\n                show_mobile_input: true\n            })\n        }\n    }\n\n    OnMobileChange(event){\n        let number = event.target.value.replace(/^0+/, '')\n        this.setState({\n            mobile_number: number,\n            is_valid_mobile: event.target.value.length === 10\n        })\n    }\n\n    GetButton = () => {\n        if(this.props.user.subscriptions && this.props.user.subscriptions.includes(Constant.SUBSCRIPTION_WA))\n        {\n            return (<WhatsAppButtonRender text={\"Unsubscribe text SMS notification\"}\n                                  onClick={this.OnWaSubscriptionBtnToggle}/>);\n        }\n        return (<WhatsAppButtonRender text={\"Subscribe text SMS notification\"} onClick={this.OnWaSubscriptionBtnToggle}/>);\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.show_mobile_input?\n                        <div className={\"shadow rounded-lg p-1 border-primary border\"}>\n                            <FormControl className={\"no-input-shadow\"}\n                                         placeholder={\"Enter mobile number\"}\n                                         type={\"number\"}\n                                         value={this.state.mobile_number}\n                                         onChange={this.OnMobileChange}\n                                         disabled={this.state.submitting_mobile}\n                            />\n                            <Button varient={\"primary\"} style={{width: \"100%\"}} className={\"mt-2\"} disabled={!this.state.is_valid_mobile || this.state.submitting_mobile} onClick={this.OnSubmitMobile}> Subscribe SMS </Button>\n                        </div>: <this.GetButton />\n                }\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ user }) => (\n    {\n        user: user\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setSubscriptions: subscriptions => dispatch(setSubscriptions(subscriptions)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (WhatsAppSubscribeManager);\n","export const CenterActionTypes = {\n    SET_CENTERS: \"SET_CENTERS\",\n    SET_TRACKING_CENTER: \"SET_TRACKING_CENTER\",\n    CENTER_UPDATE_DONE: \"CENTER_UPDATE_DONE\",\n    SET_NEARBY_CENTERS: \"SET_NEARBY_CENTERS\"\n}","import { CenterActionTypes } from \"./center.types\";\n\nexport const setCenters = centers => (\n    {\n        type: CenterActionTypes.SET_CENTERS,\n        payload: centers\n    }\n)\n\nexport const setNearbyCenter = centers => (\n    {\n        type: CenterActionTypes.SET_NEARBY_CENTERS,\n        payload: centers\n    }\n)\n\nexport const setTrackingCenters = centers => (\n    {\n        type: CenterActionTypes.SET_TRACKING_CENTER,\n        payload: centers\n    }\n)\n\nexport const setCentersUpdateDone = () => (\n    {\n        type: CenterActionTypes.CENTER_UPDATE_DONE,\n        is_centers_updated: false\n    }\n)","import React, {Component} from 'react';\nimport GoogleLogin from \"react-google-login\";\nimport config from \"../../config.json\";\nimport BackendUrls from \"../../constants/BackendUrls.json\";\nimport {WhatsAppButtonRender} from \"./WhatsAppButtonRender\";\nimport axios from \"axios\";\nimport {setSubscriptions, setToken} from \"../../../../redux/user/user.actions\";\nimport {connect} from \"react-redux\";\nimport WhatsAppSubscribeManager from \"./WhatsAppSubscribeManager\";\nimport {setTrackingCenters} from \"../../../../redux/centers/center.actions\";\nimport GoogleAnalyticsEventTracker from \"./analytics/GoogleAnalyticsEventTracker\";\n\nclass GoogleLoginButton extends Component {\n\n    state = {\n        is_google_login_supported: true,\n    }\n\n    GaEventTracker = GoogleAnalyticsEventTracker();\n\n    constructor(props) {\n        super(props);\n        this.responseGoogle = this.responseGoogle.bind(this);\n        this.exchangeToken = this.exchangeToken.bind(this);\n    }\n\n    exchangeToken(accessToken){\n        const options = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        };\n\n        axios.post(config.BACKEND_BASE_URL + BackendUrls.GET_TOKEN_URL, {\"access_token\": accessToken}, options)\n            .then(res => {\n                this.props.setToken(res.data[\"token\"]);\n                this.props.getUser();\n            })\n            .catch(error => {\n                this.GaEventTracker(\"Fail GET User\", error);\n                console.log(error);\n            });\n    }\n\n    responseGoogle = (response) => {\n        this.GaEventTracker(\"AUTH 2.0 success\");\n        if(response.error === \"idpiframe_initialization_failed\"){\n            this.setState({\n                is_google_login_supported: false\n            })\n        }\n\n        if(response.accessToken) {\n            this.exchangeToken(response.accessToken);\n        }\n    }\n\n    render() {\n        if(this.state.is_google_login_supported) {\n            if (!this.props.user.token) {\n                return (\n                    <GoogleLogin\n                        clientId={config.GMAIL_API_CLIENT_ID}\n                        render={WhatsAppButtonRender}\n                        buttonText=\"Login\"\n                        onSuccess={this.responseGoogle}\n                        onFailure={this.responseGoogle}\n                        cookiePolicy={'single_host_origin'}\n                        isSignedIn={true}\n                    />\n                );\n            } else {\n                return <WhatsAppSubscribeManager callback={this.props.onSubscriptionResponseCallback} />\n            }\n        }\n        else{\n            return (\n                <div className=\"bg-white rounded-lg p-2 red-shadow btn my-1\">\n                    Google Login not supported, please try another browser or close icognito mode.\n                </div>\n            );\n        }\n    }\n}\n\n\nconst mapStateToProps = ({ user,vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token)),\n    setSubscriptions: subscriptions => dispatch(setSubscriptions(subscriptions)),\n    setTrackingCenter: centers => dispatch(setTrackingCenters(centers))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (GoogleLoginButton);\n","import React, {Component} from 'react';\nimport {Button} from \"react-bootstrap\";\nimport {connect} from \"react-redux\";\nimport {setTrackingCenters} from \"../../../../redux/centers/center.actions\";\n\nclass TrackingPinCodes extends Component {\n    componentDidMount() {\n        // this.SetTrackingCenters();\n    }\n\n    render() {\n        return (\n            <div className={\"shadow p-1 rounded-lg bg-white my-1\"}>\n                {\n                    this.props.vaccine.tracking_centers && this.props.vaccine.tracking_centers.length > 0?\n                        <h6 className={\"font-weight-bold btn\"}> Tracking pin codes 18-45</h6>:\n                        <h6 className={\"font-weight-bold btn\"}> No notification trackers </h6>\n                }\n                <hr />\n                {\n                    this.props.vaccine.tracking_centers && this.props.vaccine.tracking_centers.map(t_center =>{\n                        return (\n                            <div className={\"rounded p-2 m-1 font-weight-bold bg-cowin2 position-relative overflow-hidden\"} key={\"center-tr-\" + t_center.pin_code}>\n                                {t_center.pin_code}\n                                <Button variant={\"danger\"} onClick={() => {\n                                    this.props.removeFromTracking(t_center.pin_code)\n                                }} className={\"float-right  position-absolute rounded-0\"} style={{top:0, right:0, height:\"100%\"}}> X </Button>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ user, vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setTrackingCenters: centers => dispatch(setTrackingCenters(centers))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (TrackingPinCodes);\n","export default __webpack_public_path__ + \"static/media/map.4ffa6cad.jpg\";","import config from \"../../config.json\";\nimport CUrl from \"../../constants/CowinUrl.json\";\nimport moment from \"moment\";\nimport GoogleAnalyticsEventTracker from \"../google/analytics/GoogleAnalyticsEventTracker\";\n\nconst GaEventTracker = GoogleAnalyticsEventTracker();\n\nfunction GetCenters (url, callback) {\n    GaEventTracker(\"Total cowin-api requests\", url)\n    fetch(url)\n        .then(response => response.json())\n        .then(data => callback(data.centers));\n}\n\nfunction CheckForTheCenters (pincode, callback) {\n    GaEventTracker(\"[SW] api-events\")\n    console.log(\"getting details for pin code: \" + pincode);\n    let  date = moment().format(\"DD-MM-YYYY\");\n    GetCenters(config.COWIN_BASE_URL + CUrl.CALENDAR_BY_PIN_CODE.replace(\"<PINCODE>\", pincode).replace(\"<DATE>\", date).replace(\"<VACCINE>\", \"\"), callback);\n}\n\nexport {CheckForTheCenters, GetCenters};","import React, {Component} from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport {Badge, Button, Col, Row} from \"react-bootstrap\";\nimport Constant from \"../../constants/Constant.json\";\nimport $ from 'jquery';\nimport moment from \"moment\";\nimport GoogleAnalyticsEventTracker from \"../google/analytics/GoogleAnalyticsEventTracker\";\nimport GoogleLoginButton from \"./GoogleLoginButton\";\nimport TrackingPinCodes from \"./TrackingPinCodes\";\nimport {setToken} from \"../../../../redux/user/user.actions\";\nimport {connect} from \"react-redux\";\nimport {setCentersUpdateDone, setNearbyCenter, setTrackingCenters} from \"../../../../redux/centers/center.actions\";\nimport config from \"../../config.json\";\nimport mapImage from \"../../static/images/map.jpg\";\nimport {GetCenters} from \"../vaccinesessions/CowinRequestManager\";\nimport CUrl from \"../../constants/CowinUrl.json\";\n\nclass GoogleMapComponent extends Component {\n\n    state = {\n        my_position: {lat: 12.97, lng: 77.59},\n        map_center: {lat: 12.97, lng: 77.59},\n        map_zoom: 12,\n        maps_data: {},\n        show_map: false,\n        markers: [],\n    }\n\n    GaEventTracker = GoogleAnalyticsEventTracker();\n\n    constructor(props) {\n        super(props);\n        this.OnClickCenterBox = this.OnClickCenterBox.bind(this);\n        this.LocateMyPosition = this.LocateMyPosition.bind(this);\n        this.OnGetNearbyCenterCallback = this.OnGetNearbyCenterCallback.bind(this);\n        this.DrawMarkersOnMap = this.DrawMarkersOnMap.bind(this);\n        this.GetNumber = this.GetNumber.bind(this);\n        this.SetMyPosition = this.SetMyPosition.bind(this);\n    }\n\n    componentDidMount() {\n        navigator.geolocation.getCurrentPosition((position) => {\n            this.setState({\n                my_position: { lat:position.coords.latitude, lng: position.coords.longitude},\n                map_center: { lat:position.coords.latitude, lng: position.coords.longitude},\n            });\n            this.SubmitLatLong(position.coords);\n        });\n    }\n\n    SubmitLatLong(coords){\n        if(!coords) return;\n        GetCenters(config.COWIN_BASE_URL + CUrl.CENTERS_BY_LAT_LONG.replace(\"<LAT>\", coords.latitude).replace(\"<LONG>\", coords.longitude), this.OnGetNearbyCenterCallback);\n    }\n\n    OnGetNearbyCenterCallback(centers){\n        this.props.setNearbyCenter(centers);\n        this.GaEventTracker(\"Received Nearby Centers\");\n        this.setState({\n            show_map: true\n        })\n        this.DrawMarkersOnMap();\n    }\n\n    // RemoveAllMarkersFromMap(){\n    //     this.state.markers.forEach(marker => {\n    //         marker.setMap(null);\n    //     })\n    //     this.setState({\n    //         markers: []\n    //     })\n    // }\n\n    LocateMyPosition(){\n        this.setState({\n            map_center: this.state.my_position,\n            map_zoom: 13,\n        })\n    }\n\n    HandleApiLoaded = (map, maps) => {\n        this.setState({\n            maps_data: {\n                map: map,\n                maps: maps\n            }\n        });\n    }\n\n    DrawMarkersOnMap(){\n        if(!this.state.maps_data.map) {\n            setTimeout(this.DrawMarkersOnMap, 500);\n            return;\n        }\n        this.SetMyPosition();\n        let map = this.state.maps_data.map;\n        this.props.vaccine.nearby_centers.forEach(it => {\n            let position = { lat: this.GetNumber(it.lat), lng: this.GetNumber(it.long)};\n            let marker = new this.state.maps_data.maps.Marker({\n                position: position,\n                // animation: maps.Animation.DROP,\n                map,\n                // icon: {\n                //     url: \"https://atlas-content-cdn.pixelsquid.com/stock-images/hospital-3yL2QM6-600.jpg\",\n                //     size: maps.Size(10, 10),\n                // },\n                title: it.name,\n                label: {\n                    text:\"H\",\n                    color: \"white\",\n                    fontWeight: \"bold\",\n                }\n            })\n\n            marker.addListener(\"click\", () => {\n                marker.setAnimation(this.state.maps_data.maps.Animation.BOUNCE);\n                setTimeout(()=>{marker.setAnimation(null);}, 2000);\n            });\n\n            marker.addListener(\"mouseover\", () => {\n                const child_parent = $(\"#center-\" + it.center_id).parent();\n                const scroller = $(\".center-parent\");\n                let offset = child_parent.offset().top + scroller.scrollTop() - child_parent.parent().offset().top;\n                scroller.animate({scrollTop:offset}, 500);\n                this.SetActiveCenterBox(it.center_id);\n            })\n            this.state.markers.push(marker);\n        })\n    }\n\n    SetMyPosition() {\n        const maps = this.state.maps_data.maps;\n        const map = this.state.maps_data.map;\n        let marker = new this.state.maps_data.maps.Marker({\n            position: this.state.my_position,\n            animation: maps.Animation.DROP,\n            map,\n            icon: {\n                // url: \"https://www.clipartmax.com/png/full/219-2193698_white-button-clipart.png\",\n                url: \"https://w7.pngwing.com/pngs/81/570/png-transparent-profile-logo-computer-icons-user-user-blue-heroes-logo-thumbnail.png\",\n                scaledSize: new maps.Size(16, 16),\n            },\n            title: \"Me\",\n        });\n\n        marker.addListener(\"click\", () => {\n            marker.setAnimation(this.state.maps_data.maps.Animation.BOUNCE);\n            setTimeout(()=>{marker.setAnimation(null);}, 2000);\n        });\n    }\n\n    GetNumber(strNum){\n        return Number(parseFloat(strNum).toFixed(5));\n    }\n\n    SetDirection(center) {\n        this.GaEventTracker(\"Google map directions requests\")\n        let directionsService = new this.state.maps_data.maps.DirectionsService();\n        let directionsRenderer = new this.state.maps_data.maps.DirectionsRenderer();\n        directionsRenderer.setMap(this.state.maps_data.map);\n        let destination = { lat: this.GetNumber(center.lat), lng: this.GetNumber(center.long)}\n\n        let request = {\n            origin: this.state.my_position,\n            destination: destination,\n            travelMode: this.state.maps_data.maps.TravelMode.DRIVING,\n        };\n\n        directionsService.route(request, function(response, status) {\n            if (status === 'OK') {\n                directionsRenderer.setDirections(response);\n            }\n        });\n    }\n\n    SetActiveCenterBox(center_id) {\n        $('.center-box').removeClass('border-primary blue-shadow');\n        $('#center-'+center_id).addClass('border-primary blue-shadow');\n    }\n\n    OnClickCenterBox(center){\n        this.SetActiveCenterBox(center.center_id);\n        let position = {lat: parseFloat(center.lat), lng: parseFloat(center.long)};\n        this.setState({\n            map_center: position,\n            map_zoom: 14,\n        })\n    }\n\n    GetFormattedDate(date){\n        return moment(date, \"DD-MM-YYYY\").format(\"DD MMM\");\n    }\n\n    render() {\n        return (\n            <section>\n                <Row>\n                    <Col md={9} className={\"\"}>\n                        {\n                            (this.state.show_map > 0)?\n                            <div style={{height: 600, width: \"100%\"}} className={\"shadow position-relative rounded-lg overflow-hidden\"}>\n                                <GoogleMapReact\n                                    bootstrapURLKeys={{key: config.GOOGLE_MAP_API, language: \"en\"}}\n                                    defaultCenter={{lat: 12.97, lng: 77.59}}\n                                    center={this.state.map_center}\n                                    defaultZoom={10}\n                                    zoom={this.state.map_zoom}\n                                    yesIWantToUseGoogleMapApiInternals={true}\n                                    onGoogleApiLoaded={({map, maps}) => this.HandleApiLoaded(map, maps)}\n                                    onChildMouseEnter={this.OnMouseHoverOnHospital}\n                                >\n                                    {/*<MyLocationComponent*/}\n                                    {/*    lat={this.state.my_position.lat}*/}\n                                    {/*    lng={this.state.my_position.lng}*/}\n                                    {/*/>*/}\n                                </GoogleMapReact>\n                                <Button variant={\"light\"} className=\"my-location position-absolute shadow\" style={{right: 10, bottom:150, height: 38, width:38, borderRadius: 38}} onClick={this.LocateMyPosition}>\n                                    +\n                                </Button>\n                            </div>: <div style={{height: 600, width: \"100%\"}} className={\"shadow position-relative rounded-lg overflow-hidden\"}>\n                                <img src={mapImage} height=\"100%\"  alt={\"map\"}/>\n                                <div style={{height: \"100%\", width: \"100%\", top: 0, background: \"rgba(0,0,0, 0.5)\",}} className=\"p-2 position-absolute text-white font-weight-bold d-flex justify-content-center align-items-center\">\n                                    Allow location, to track centers nearby you\n                                </div>\n                            </div>\n                        }\n                    </Col>\n                    <Col md={3} style={{maxHeight: 600, overflowY:\"auto\"}} className=\"center-parent\">\n                        {\n                            this.props.user.is_server_up && !(this.props.user.subscriptions && this.props.user.subscriptions.includes(Constant.SUBSCRIPTION_WA)) &&\n                            <GoogleLoginButton getUser={this.props.getUser} onSubscriptionResponseCallback={this.props.onSubscriptionResponseCallback}/>\n                        }\n                        {\n                            (this.props.vaccine.nearby_centers.length === 0) && <Col className={\"p-0 py-1\"}>\n                                <div className={\"p-2 shadow rounded-lg border center-box bg-white btn font-weight-bold my-1\"} style={{width: \"100%\"}}>\n                                    No centers are available now\n                                </div>\n                            </Col>\n                        }\n                        {\n                            this.props.vaccine.nearby_centers.map(center =>\n                                <Col className={\"p-0 py-1\"} key={\"center-\" + center.center_id}>\n                                    <div className={\"p-1 shadow rounded-lg border center-box bg-white\"}\n                                         id={\"center-\" + center.center_id} onClick={() => {\n                                        this.OnClickCenterBox(center)\n                                    }}>\n                                        <b>{center.name}</b>\n                                        <p className={\"text-secondary small m-0\"}>{center.location}, {center.block_name}</p>\n                                        <p className={\"text-secondary small m-0\"}>{center.district_name}, {center.state_name}, {center.pincode}</p>\n                                        <div className={\"text-primary btn px-0 small\"} onClick={() => {this.SetDirection(center)}}\n                                             style={{fontSize:11}}>\n                                            Show direction on map\n                                        </div>\n                                        <div>\n                                            {\n                                                this.props.isTrackingContains(Number(center.pincode)) ?\n                                                    \"\" :\n                                                    <Badge variant={\"primary\"} className={\"btn p-1 m-1\"} onClick={() => {\n                                                        this.props.addToTracking(Number(center.pincode))\n                                                    }}> Set Tracking</Badge>\n                                            }\n                                        </div>\n                                    </div>\n                                </Col>\n                            )\n                        }\n                    </Col>\n                </Row>\n\n                {/*<TrackModal*/}\n                {/*    show={this.state.modalShow}*/}\n                {/*    onHide={() => this.SetModalShow(false)}*/}\n                {/*/>*/}\n            </section>\n        );\n    }\n}\n\nconst mapStateToProps = ({ user, vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token)),\n    setNearbyCenter: centers => dispatch(setNearbyCenter(centers)),\n    setTrackingCenters: centers => dispatch(setTrackingCenters(centers)),\n    setCentersUpdateDone: () => dispatch(setCentersUpdateDone())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (GoogleMapComponent);\n","import { useIndexedDB } from 'react-indexed-db';\nimport GoogleAnalyticsEventTracker  from \"../google/analytics/GoogleAnalyticsEventTracker\";\nimport config from \"../../config.json\";\n\nconst DBConfig = {\n    name: 'cowin',\n    version: config.DB_VERSION,\n    objectStoresMeta: [\n        {\n            store: 'centers',\n            storeConfig: { keyPath: 'pin_code'},\n            storeSchema: [\n                { name: 'pin_code', keypath: 'pin_code', options: { unique: true } },\n            ]\n        }\n    ]\n}\n\nconst GaEventTracker = GoogleAnalyticsEventTracker();\n\nfunction RemoveAllCenters(){\n    const { clear } = useIndexedDB('centers');\n    return clear();\n}\n\nfunction GetAllCenters() {\n    const { getAll } = useIndexedDB('centers');\n    return getAll();\n}\n\nfunction AddCenter(pinCode) {\n    GaEventTracker(\"[SW] Center Added\", pinCode);\n    const { add } = useIndexedDB('centers');\n    return add({\n                pin_code: pinCode\n            });\n}\n\nfunction RemoveCenter(pinCode) {\n    const { deleteRecord  } = useIndexedDB('centers');\n    GetAllCenters().then(item=>{\n        item.forEach(it=> {\n                if (it.pin_code === pinCode) {\n                    return deleteRecord(it.pin_code);\n                }\n            }\n        )\n    })\n}\n\nexport {AddCenter, GetAllCenters, RemoveCenter, DBConfig, RemoveAllCenters};","import {Component} from 'react';\nimport config from \"../../../config.json\";\nimport BackendUrls from \"../../../constants/BackendUrls.json\";\nimport {AddCenter, GetAllCenters, RemoveCenter, RemoveAllCenters} from \"../../vaccinesessions/IndexDbManager\";\nimport axios from \"axios\";\n\nclass SyncPinCodeManager extends Component {\n    constructor(props) {\n        super(props);\n        this.IsTrackingContains = this.IsTrackingContains.bind(this);\n        this.RemoveFromTracking = this.RemoveFromTracking.bind(this);\n        this.RemovePinCodeFromBackend = this.RemovePinCodeFromBackend.bind(this);\n        this.SetTrackingCentersFromDbIndex = this.SetTrackingCentersFromDbIndex.bind(this);\n        this.SyncPinCodeWithBackend = this.SyncPinCodeWithBackend.bind(this);\n        this.GetUser = this.GetUser.bind(this);\n        this.AddToTracking = this.AddToTracking.bind(this);\n        this.SetTrackingCentersFromDbIndex();\n    }\n\n    SetTrackingCentersFromDbIndex(){\n        GetAllCenters().then(item =>{\n            this.props.setTrackingCenters(item);\n        })\n    }\n\n    GetUser() {\n        const url = config.BACKEND_BASE_URL + BackendUrls.GET_USER_INFO;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url,{}, options)\n            .then(res => {\n                this.props.setSubscriptions(res.data[\"subscriptions\"]);\n                this.SyncPinCodeWithBackend(res.data[\"pin_codes\"]);\n            })\n            .catch(error => {\n                this.GaEventTracker(\"Fail GET User\", error);\n                console.log(error);\n            });\n\n    }\n\n    SyncPinCodeWithBackend(){\n        if(!this.props.user.token) return;\n        const url = config.BACKEND_BASE_URL + BackendUrls.SYNC_PIN_CODE_URL;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        GetAllCenters().then(pin_codes=>{\n            axios.post(url, {\"pin_codes\": pin_codes.map(p=>p.pin_code)}, options)\n                .then(res => {\n                    RemoveAllCenters().then(() => {\n                        res.data[\"pin_codes\"].forEach(pin_code => {\n                            AddCenter(pin_code);\n                        })\n                        this.SetTrackingCentersFromDbIndex();\n                    })\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        })\n    }\n\n    IsTrackingContains(pin_code){\n        return (this.props.vaccine.tracking_centers.findIndex(center => center.pin_code === pin_code) >=0);\n    }\n\n    RemovePinCodeFromBackend(pin_code){\n        const url = config.BACKEND_BASE_URL + BackendUrls.REMOVE_PIN_CODE_URL;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url,{\"pin_code\": pin_code}, options)\n            .then(res => {\n                console.debug(res);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    RemoveFromTracking(pin_code) {\n        if(!this.IsTrackingContains(pin_code)) return;\n        RemoveCenter(pin_code);\n\n        let tracking_center = this.props.vaccine.tracking_centers;\n        for (let i = tracking_center.findIndex(it => it.pin_code === pin_code); i < tracking_center.length -1; i++) {\n            tracking_center[i] = tracking_center[i+1];\n        }\n        tracking_center.pop();\n\n        console.log(tracking_center);\n        this.props.setTrackingCenters(tracking_center);\n        this.RemovePinCodeFromBackend(pin_code);\n    }\n\n    AddToTracking(pin_code) {\n        if(this.props.vaccine.tracking_centers.length > 3) {\n            try {\n                this.onSubscriptionResponseCallback(\"Allowed max 4 tracking centers, please delete some to add new one. Thanks!\");\n            } catch (e) {\n                console.log(\"Error: \", e)\n            }\n            return;\n        }\n\n        if(this.IsTrackingContains(pin_code)) return;\n        AddCenter(pin_code);\n        let tracking_center = this.props.vaccine.tracking_centers;\n        tracking_center.push({pin_code: pin_code});\n        this.props.setTrackingCenters(tracking_center)\n        this.AddCentersToBackend(pin_code);\n    }\n\n    AddCentersToBackend(pin_code){\n        const url = config.BACKEND_BASE_URL + BackendUrls.ADD_PIN_CODE_URL;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url,{\"pin_code\": pin_code}, options)\n            .then(res => {\n                console.log(res);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n}\n\nexport default SyncPinCodeManager;","import {Modal} from \"react-bootstrap\";\n\nfunction NoteModal({showModal, handleClose, textBody}) {\n    return (\n        <Modal show={showModal} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title> Notification</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{textBody}</Modal.Body>\n        </Modal>\n    );\n}\n\nexport default NoteModal;","import React, {Component} from 'react';\nimport {Button, Col, Row} from \"react-bootstrap\";\nimport {connect} from \"react-redux\";\nimport config from \"../../config.json\";\nimport BackendUrls from \"../../constants/BackendUrls.json\";\nimport axios from \"axios\";\n\nclass Footer extends Component {\n    state = {\n        is_valid_feedback: false,\n        is_feedback_btn_disabled: true,\n        feedback_text:\"\"\n    }\n\n    constructor(props) {\n        super(props);\n        this.OnSubmitFeedback = this.OnSubmitFeedback.bind(this);\n        this.OnChangeFeedback = this.OnChangeFeedback.bind(this);\n    }\n\n    OnSubmitFeedback(){\n        this.setState({\n            is_valid_feedback: true\n        });\n\n        const url = config.BACKEND_BASE_URL + BackendUrls.USER_FEEDBACK;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url, {feedback:this.state.feedback_text}, options)\n            .then(res => {\n                console.debug(res);\n            })\n            .catch(error => {\n                this.setState({\n                    is_valid_feedback: false\n                });\n                console.log(error);\n            });\n    }\n\n    OnChangeFeedback(event){\n        let text = event.target.value;\n        this.setState({\n            feedback_text: text,\n            is_feedback_btn_disabled: text.length < 10\n        })\n    }\n\n    render() {\n        return (\n            <section className=\"p-0\">\n                <div className=\"shadow bg-white p-4 my-2 rounded-lg\">\n                    <Row>\n                       <Col>\n                           <div className=\"font-weight-bold\">Reach out through</div>\n                           <a href=\"https://www.linkedin.com/feed/update/urn%3Ali%3Aactivity%3A6798913715489120256/\" target=\"_blank\" rel={\"noreferrer\"} className=\"no-text-decor\">\n                               <div className=\"text-primary\" style={{fontWeight: 800, fontSize: 20}}>\n                                   Linked <span className=\"bg-primary text-white rounded-sm\" style={{padding: '1px 2px 1px 2px'}}>in</span>\n                               </div>\n                           </a>\n                       </Col>\n                        {\n                            this.props.user.is_server_up &&\n                            <Col>\n                                <div className=\"font-weight-bold\">Feedback</div>\n                                <div>\n                                <textarea className={\"form-control no-input-shadow\"}\n                                          onChange={this.OnChangeFeedback}\n                                          value={this.state.feedback_text}\n                                          disabled={this.state.is_valid_feedback}/>\n                                    {\n                                        this.state.is_valid_feedback ? <div>Thanks for the feedback :) </div> :\n                                            <Button variant={\"primary\"} className=\"my-1 float-right\"\n                                                    onClick={this.OnSubmitFeedback}\n                                                    disabled={this.state.is_feedback_btn_disabled}>\n                                                Submit\n                                            </Button>\n                                    }\n                                </div>\n                            </Col>\n                        }\n                    </Row>\n                </div>\n            </section>\n        );\n    }\n}\n\nconst mapStateToProps = ({ user }) => (\n    {\n        user: user\n    }\n)\n\nconst mapDispatchToProps = () => ({})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Footer);","import React from 'react';\nimport {Button, Col, Container, FormControl, Row, Tab, Tabs} from \"react-bootstrap\";\nimport CUrl from \"../../constants/CowinUrl.json\";\nimport axios from \"axios\";\nimport config from \"../../config.json\";\nimport vaccine from \"../../constants/Vaccine.json\";\nimport moment from \"moment\";\nimport {connect} from \"react-redux\";\nimport {setSubscriptions, setToken, setServerStat} from \"../../../../redux/user/user.actions\";\nimport VaccineSessionTable from \"./VaccineSessionTable\";\nimport GoogleMapComponent from \"../google/GoogleMapComponent\";\nimport { GetCenters } from \"./CowinRequestManager\";\nimport ReactGA from \"react-ga\";\nimport GoogleAnalyticsEventTracker from \"../google/analytics/GoogleAnalyticsEventTracker\";\nimport {setCenters, setTrackingCenters} from \"../../../../redux/centers/center.actions\";\nimport GoogleLoginButton from \"../google/GoogleLoginButton\";\nimport TrackingPinCodes from \"../google/TrackingPinCodes\";\nimport BackendUrls from \"../../constants/BackendUrls.json\";\nimport SyncPinCodeManager from \"../google/analytics/SyncPinCodeManager\";\nimport NoteModal from \"../modal/NoteModal\";\nimport Footer from \"../footer/Footer\";\n\nReactGA.initialize(config.GOOGLE_ANALYTICS_UA);\n\nclass GetVaccineSession extends SyncPinCodeManager {\n    state = {\n        is_unmounted: false,\n        pin_code: \"\",\n        district_id:\"1\",\n        is_valid_pin_code: false,\n        vaccine: \"\",\n        vaccine_date: moment().format(\"YYYY-MM-DD\"),\n        states: [],\n        districts: [],\n        show_modal: false,\n        modal_text: \"\",\n        can_show_tracking_center_button: false\n    }\n\n    options = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': \"Bearer \" + this.props.user.token\n        }\n    }\n\n    GaEventTracker = GoogleAnalyticsEventTracker();\n\n    constructor(props) {\n        super(props);\n        ReactGA.pageview(window.location.pathname + window.location.search);\n\n        this.GetState = this.GetState.bind(this);\n        this.OnChangeState = this.OnChangeState.bind(this);\n        this.OnChangeDate = this.OnChangeDate.bind(this);\n        this.OnChangePinCode = this.OnChangePinCode.bind(this);\n        this.OnChangeDistrictCode = this.OnChangeDistrictCode.bind(this);\n        this.OnChangeVaccine = this.OnChangeVaccine.bind(this);\n\n        this.SelectVaccinesWithDate = this.SelectVaccinesWithDate.bind(this);\n        this.OnSubmitPinCode = this.OnSubmitPinCode.bind(this);\n        this.OnSubmitDistrict = this.OnSubmitDistrict.bind(this);\n        this.OnGetCenterCallback = this.OnGetCenterCallback.bind(this);\n        this.OnLogout = this.OnLogout.bind(this);\n        this.onSubscriptionResponseCallback = this.onSubscriptionResponseCallback.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        // this.syncPinCodeManager = new SyncPinCodeManager(this.props)\n    }\n\n    componentDidMount() {\n        this.GetState();\n        this.OnChangeState(1);\n        this.CheckHealth();\n    }\n\n    CheckHealth(){\n        const url = config.BACKEND_BASE_URL + BackendUrls.HEALTH_CHECK;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url, {}, options)\n            .then(res => {\n                console.log(res);\n                this.GetUser();\n                this.props.setServerStat(true);\n            })\n            .catch(error => {\n                this.props.setToken(null);\n                this.props.setSubscriptions([]);\n                if(error.response === undefined || error.response.status !== 403){\n                    this.props.setServerStat(false);\n                } else {\n                    this.props.setServerStat(true);\n                }\n                console.log(error);\n            });\n    }\n\n    componentWillUnmount(){\n        this.setState({\n            is_unmounted: true\n        })\n    }\n\n    GetState(){\n        axios.get(config.COWIN_BASE_URL + CUrl.GET_STATES, this.options).then( response => {\n            if(response.status === 200 && response.data.states.length > 0) {\n                this.setState({\n                    states: response.data.states\n                })\n            }else{\n                console.log(response);\n            }\n        }).catch( err => console.error(err));\n    }\n\n    OnChangeState(state){\n        axios.get(config.COWIN_BASE_URL + CUrl.GET_DISTRICT.replace(\"<DISTRICT>\", state), this.options).then( response => {\n            if(response.status === 200 && response.data.districts.length > 0) {\n                this.setState({\n                    districts: response.data.districts\n                })\n            }else{\n                console.error(response);\n            }\n        }).catch( err => console.error(err));\n    }\n\n    OnChangeDistrictCode(code){\n        this.setState({\n            district_id: code\n        })\n    }\n\n    OnSubmitPinCode(){\n        if(this.state.pin_code.length !==6) return;\n        this.GaEventTracker(\"Pin code Submitted\", this.state.pin_code);\n        let date = moment(this.state.vaccine_date).format(\"DD-MM-YYYY\");\n        GetCenters(config.COWIN_BASE_URL + CUrl.CALENDAR_BY_PIN_CODE.replace(\"<PINCODE>\", this.state.pin_code).replace(\"<DATE>\", date).replace(\"<VACCINE>\", this.state.vaccine), this.OnGetCenterCallback);\n    }\n\n    OnSubmitDistrict(){\n        if(this.state.district_id.length <= 0) return;\n        this.GaEventTracker(\"District Submitted\", this.state.pin_code);\n        let date = moment(this.state.vaccine_date).format(\"DD-MM-YYYY\");\n        GetCenters(config.COWIN_BASE_URL + CUrl.CALENDAR_BY_DISTRICT.replace(\"<DISTRICT_ID>\", this.state.district_id).replace(\"<DATE>\", date).replace(\"<VACCINE>\", this.state.vaccine), this.OnGetCenterCallback);\n    }\n\n    OnGetCenterCallback(centers){\n        this.props.setCenters(centers);\n        this.GaEventTracker(\"Received Centers\");\n        if(centers.length > 0 && !this.IsTrackingContains(Number(this.state.pin_code))){\n            this.setState({\n                can_show_tracking_center_button: true\n            })\n        }\n    }\n\n    OnChangeVaccine(event){\n        this.setState({\n            vaccine: event.target.value\n        })\n    }\n\n    OnChangeDate(event){\n        this.setState({\n            vaccine_date: event.target.value\n        })\n        this.GetVaccineSessionChild.current.OnChangeDate(event.target.value);\n    }\n\n    OnChangePinCode(event){\n        let number = event.target.value.replace(/^0+/, '');\n        this.setState({\n            pin_code: number,\n            can_show_tracking_center_button: false,\n            is_valid_pin_code: event.target.value.length === 6\n        })\n    }\n\n    SelectVaccinesWithDate() {\n        return (\n            <div>\n                <select className={\"form-control no-input-shadow mt-2\"} value={this.state.vaccine} onChange={this.OnChangeVaccine}>\n                    <option value=\"\">All Vaccine</option>\n                    <option value={vaccine.COVAXIN}>{vaccine.COVAXIN}</option>\n                    <option value={vaccine.COVISHIELD}>{vaccine.COVISHIELD}</option>\n                </select>\n                <FormControl className={\"no-input-shadow mt-2\"} placeholder={\"Enter start date\"} type={\"date\"} value={this.state.vaccine_date} onChange={this.OnChangeDate}/>\n            </div>\n        );\n    }\n\n    OnLogout(){\n        const url = config.BACKEND_BASE_URL + BackendUrls.LOGOUT_URL;\n        const options = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + this.props.user.token\n            }\n        };\n\n        axios.post(url, {}, options)\n            .then(res => {\n                this.props.setToken(null);\n                this.props.setSubscriptions([]);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    closeModal() {\n        this.setState({\n            show_modal: false\n        });\n    }\n\n    onSubscriptionResponseCallback(text){\n        this.setState({\n            show_modal: true,\n            modal_text: text\n        });\n    }\n\n    render() {\n        return (\n            <Container className={\"\"}>\n                <div className={\"position-relative\"}>\n                    {\n                        this.props.user.token !== null &&\n                        <Button variant={\"danger\"} className={\"position-absolute shadow-lg logout-btn\"} onClick={this.OnLogout}>Logout</Button>\n                    }\n                </div>\n                <Tabs defaultActiveKey=\"map\" transition={false} id=\"noanim-tab-example\" className={\"bg-white rounded-top shadow overflow-hidden mt-4 position-relative\"}>\n                    <Tab eventKey=\"map\" title={\"Near Me\"} >\n                        <div className={\"bg-white mb-2 rounded-bottom bg-cowin2-light shadow p-2\"}>\n                            {\n                                this.props.user.token === null &&\n                                <div className=\"p-3 shadow rounded-lg bg-warning my-2\">\n                                    Use google login and subscribe SMS text to get more accurate notification even you're\n                                    offline.\n                                </div>\n                            }\n                            <GoogleMapComponent addToTracking={this.AddToTracking}\n                                                isTrackingContains={this.IsTrackingContains}\n                                                getUser={this.GetUser}\n                                                onSubscriptionResponseCallback={this.onSubscriptionResponseCallback}/>\n                        </div>\n                    </Tab>\n                    <Tab eventKey=\"home\" title=\"Pin code\">\n                        <div className=\"bg-white mb-2 rounded-bottom bg-cowin2-light shadow p-4 justify-content-center d-flex align-items-center\" style={{height:300}}>\n                            <div className={\"col-md-6\"}>\n                                <FormControl className={\"no-input-shadow\"} placeholder={\"Enter pin code\"} type=\"number\" value={this.state.pin_code} onChange={this.OnChangePinCode}/>\n                                {\n                                    this.state.can_show_tracking_center_button &&\n                                    <Button variant={\"outline-success\"}\n                                            className={\"small py-0 rounded-0 float-right mb-1\"}\n                                            style={{top: 0, right: \"-10%\"}}\n                                            onClick={()=>{ this.AddToTracking(Number(this.state.pin_code))}}>Track this pincode</Button>\n                                }\n                                <this.SelectVaccinesWithDate />\n                                <Button variant={\"primary\"} className={\"form-control mt-4\"} onClick={this.OnSubmitPinCode} disabled={!this.state.is_valid_pin_code}> Find vaccine slots</Button>\n                            </div>\n                        </div>\n                    </Tab>\n                    <Tab eventKey=\"profile\" title=\"District\">\n                        <div className=\"bg-white mb-2 rounded-bottom shadow p-4 justify-content-center d-flex align-items-center\" style={{height:300}}>\n                            <div className=\"col-md-6\" >\n                                <select className={\"form-control no-input-shadow\"} placeholder={\"Select state\"} onChange={e => {this.OnChangeState(e.target.value)}}>\n                                    {\n                                        this.state.states.map(it => <option key={it.state_id} value={it.state_id}>{it.state_name}</option>)\n                                    }\n                                </select>\n                                <select className={\"form-control no-input-shadow mt-2\"} placeholder={\"Select district\"} value={this.state.district_id} onChange={ e => {this.OnChangeDistrictCode(e.target.value)}}>\n                                    {\n                                        this.state.districts.map(it => <option key={it.district_id} value={it.district_id}>{it.district_name}</option>)\n                                    }\n                                </select>\n                                <this.SelectVaccinesWithDate />\n                                <Button variant={\"primary\"} className={\"form-control mt-4\"} onClick={this.OnSubmitDistrict}> Find vaccine slots</Button>\n                            </div>\n                        </div>\n                    </Tab>\n                    <Tab eventKey=\"near_me\" title=\"Subscriptions\">\n                        <div className=\"bg-white mb-2 rounded-bottom shadow p-4 justify-content-center d-flex\" >\n                            {\n                                this.props.user.is_server_up &&\n                                <div className=\"p-1\">\n                                    <GoogleLoginButton getUser={this.GetUser}/>\n                                </div>\n                            }\n                            <div className=\"p-1\">\n                                <TrackingPinCodes removeFromTracking={this.RemoveFromTracking}/>\n                            </div>\n                        </div>\n                    </Tab>\n                </Tabs>\n                <VaccineSessionTable />\n                <NoteModal showModal={this.state.show_modal} textBody={this.state.modal_text} handleClose={this.closeModal}/>\n                <Row className=\"mt-1\">\n                    <Col className={\"\"} md={6} >\n                        <TrackingPinCodes  removeFromTracking={this.RemoveFromTracking}/>\n                    </Col>\n                    <Col className={\"my-1\"} md={6} >\n                        <a href=\"https://dashboard.cowin.gov.in/\" target=\"_blank\" rel={\"noreferrer\"} >\n                            <div style={{width: \"100%\", height: \"100%\", backgroundImage: \"url('https://www.dpma.de/images/istock/46-50/istock-494497554_goir_gross.jpg')\", backgroundPosition: \"center\", backgroundSize: \"cover\"}}>\n                                <Button style={{width: \"100%\", height: \"100%\", background: \"rgba(0,0,0, 0.6)\"}} className=\"shadow p-4 font-weight-bold\">\n                                    Cowin Dashboard & Statistics\n                                </Button>\n                            </div>\n                        </a>\n                    </Col>\n                </Row>\n                <Footer />\n            </Container>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ user, vaccine }) => (\n    {\n        user: user,\n        vaccine: vaccine\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token)),\n    setCenters: centers => dispatch(setCenters(centers)),\n    setServerStat: stat => dispatch(setServerStat(stat)),\n    setSubscriptions: subscription => dispatch(setSubscriptions(subscription)),\n    setTrackingCenters: centers => dispatch(setTrackingCenters(centers))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (GetVaccineSession);\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport './App.css';\nimport GetVaccineSession from \"../vaccinesessions/GetVaccineSession\";\nimport {initDB} from \"react-indexed-db\";\nimport {DBConfig} from \"../vaccinesessions/IndexDbManager\";\nimport config from \"../../config.json\";\n\nconst indexedDB = window.indexedDB || (window).mozIndexedDB || (window).webkitIndexedDB || (window).msIndexedDB;\n\nfunction deleteIfOldDatabase(){\n    let openDBRequest = indexedDB.open('cowin', config.DB_VERSION);\n    openDBRequest.onupgradeneeded = function (event){\n        let database = openDBRequest.result;\n        if(database.objectStoreNames.contains(\"centers\")){\n            if(event.oldVersion) {\n                database.deleteObjectStore(\"centers\");\n                let store = database.createObjectStore(\"centers\", {keyPath:\"pin_code\"});\n                store.createIndex('pin_code', 'pin_code', {unique: true});\n            }\n        } else {\n            let store = database.createObjectStore(\"centers\", {keyPath: \"pin_code\"});\n            store.createIndex('pin_code', 'pin_code', {unique: true});\n        }\n    }\n    openDBRequest.onsuccess = function (event) {\n        let database = openDBRequest.result;\n        if(!database.objectStoreNames.contains(\"centers\")){\n            indexedDB.deleteDatabase(\"cowin\");\n        }\n    }\n}\n\ndeleteIfOldDatabase();\ninitDB(DBConfig);\n\nclass App extends Component {\n\n    state = {\n        is_notification_granted: true,\n        top_notification_content: \"Grant notification permission manually, which will get use to notify if any slots available.\"\n    }\n\n    constructor(props) {\n        super(props);\n        this.OnNotificationPermissionChange = this.OnNotificationPermissionChange.bind(this);\n    }\n\n    componentDidMount(){\n        if(!this.IsPushNotificationSupported()){\n            this.setState({\n                is_notification_granted: false,\n                top_notification_content: \"Notifications are not supported by your browser :(\"\n            })\n        }else{\n            this.OnNotificationPermissionChange();\n            if(Notification.permission === \"default\"){\n                Notification.requestPermission(this.OnNotificationPermissionChange).then(r => {\n                    // intentional\n                });\n            }\n        }\n    }\n\n    OnNotificationPermissionChange(){\n        if(Notification.permission === \"denied\"){\n            this.setState({\n                is_notification_granted: false\n            })\n        }\n    }\n\n    IsPushNotificationSupported() {\n        return \"serviceWorker\" in navigator && \"PushManager\" in window;\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {\n                    !this.state.is_notification_granted &&\n                    <div className=\"bg-danger text-center text-white\">\n                        {this.state.top_notification_content}\n                    </div>\n                }\n                <Router>\n                    <Switch>\n                        {/*        /!*<Redirect from={\"/\"} to={AppUrl.GET_VACCINATION_SESSION} exact={true} />*!/*/}\n                        {/*        /!*<Route path={AppUrl.REGISTER_OTP} exact={true} component={RegisterOtp}/>*!/*/}\n                        <Route path={\"\"} exact={true} component={GetVaccineSession} />\n                        {/*        /!*<Redirect to={AppUrl.GET_VACCINATION_SESSION} from={\"*\"}/>*!/*/}\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import {UserActionTypes} from \"./user.types\";\n\nconst INITIAL_STATE = {\n    is_server_up:true,\n    token:null,\n    subscriptions:[]\n}\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case UserActionTypes.SET_USER_TOKEN:\n            return {\n                ...state,\n                token: action.payload\n            };\n        case UserActionTypes.SET_SERVER_STAT:\n            return {\n                ...state,\n                is_server_up: action.payload\n            };\n        case UserActionTypes.SET_USER_SUBSCRIPTION:\n            return {\n                ...state,\n                subscriptions: action.payload\n            };\n        default:\n            return state;\n    }\n}\nexport default userReducer;","export const PositionActionTypes = {\n    SET_LATITUDE: \"SET_LATITUDE\",\n    SET_LONGITUDE: \"SET_LONGITUDE\"\n}","import {PositionActionTypes} from \"./position.types\";\n\n\nconst INITIAL_STATE = {\n    latitude: 100,\n    longitude: 157\n}\n\nconst positionReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case PositionActionTypes.SET_LATITUDE:\n            return {\n                ...state,\n                latitude: action.payload\n            };\n        case PositionActionTypes.SET_LONGITUDE:\n            return {\n                ...state,\n                longitude: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport default positionReducer","import {CenterActionTypes} from \"./center.types\";\n\nconst INITIAL_STATE = {\n    centers: [],\n    nearby_centers: [],\n    is_centers_updated: false,\n    tracking_centers: [],\n}\n\nconst centerReducer = (state = INITIAL_STATE, action = \"\") => {\n    switch (action.type) {\n        case CenterActionTypes.SET_CENTERS:\n            return {\n                ...state,\n                centers: action.payload,\n                is_centers_updated: true\n            };\n        case CenterActionTypes.SET_NEARBY_CENTERS:\n            return {\n                ...state,\n                nearby_centers: action.payload,\n            };\n        case CenterActionTypes.SET_TRACKING_CENTER:\n            return {\n                ...state,\n                tracking_centers: action.payload\n            }\n        case CenterActionTypes.CENTER_UPDATE_DONE:\n            return {\n                ...state,\n                is_centers_updated: action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport default centerReducer;","import { combineReducers } from \"redux\";\nimport userReducer from \"./user/userReducer\";\nimport positionReducer from \"./position/position.reducer\";\nimport centerReducer from \"./centers/centerReducer\";\n\nexport default combineReducers(\n    {\n        user: userReducer,\n        position: positionReducer,\n        vaccine: centerReducer\n    }\n)","import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './root-reducer';\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: ['vaccine']\n    // whiteList: ['navigation']\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n// export default () => {\n//     let store = createStore(persistedReducer)\n//     let persist_store = persistStore(store)\n//     return { store, persist_store }\n// }\n\nexport const store = createStore(persistedReducer);\nexport const persist_store = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './main/cowin/components/app/App';\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport {store, persist_store} from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab, faWhatsapp } from '@fortawesome/free-brands-svg-icons';\nimport { faUser, faCoffee, faAddressBook,\n    faLocationArrow, faSearchLocation,\n    faEdit, faTrash, faClinicMedical,faCommentDots } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n    fab,\n    faUser,\n    faCoffee,\n    faAddressBook,\n    faLocationArrow,\n    faSearchLocation,\n    faEdit,\n    faTrash,\n    faClinicMedical,\n    faWhatsapp,\n    faCommentDots\n)\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <PersistGate loading={null} persistor={persist_store}>\n              <BrowserRouter/>\n              <App/>\n          </PersistGate>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}