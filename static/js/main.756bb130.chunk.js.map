{"version":3,"sources":["redux/user/user.types.js","main/cowin/components/vaccinesessions/VaccineSessionTable.jsx","main/cowin/components/googlemap/GoogleMapComponent.jsx","main/cowin/components/vaccinesessions/GetVaccineSession.jsx","redux/user/user.actions.js","main/cowin/components/app/App.js","serviceWorker.js","redux/user/user.reducer.js","redux/position/position.types.js","redux/position/position.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["UserActionTypes","VaccineSessionTable","state","centers","week","map","it","moment","add","format","date","this","setState","className","Table","striped","bordered","hover","day","name","Badge","variant","fee_type","address","block_name","district_name","state_name","pincode","index","sessions","findIndex","session","vaccine","min_age_limit","available_capacity","OverlayTrigger","overlay","Tooltip","slots","join","href","Constant","COWIN_REGISTRATION","target","rel","Button","data-toggle","data-placement","title","center_id","Component","MyLocationComponent","style","height","width","borderRadius","border","TrackModal","props","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Footer","onClick","onHide","GoogleMapComponent","my_position","lat","lng","map_center","map_zoom","selected_center","maps_data","markers","modalShow","HandleApiLoaded","maps","OnMouseHoverOnHospital","bind","OnClickCenterBox","DrawMarkersOnMap","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","hoverKey","childProps","center","forEach","marker","Marker","long","label","text","color","fontWeight","addListener","SetActiveCenterBox","destination","directionsService","DirectionsService","directionsRenderer","DirectionsRenderer","setMap","request","origin","travelMode","TravelMode","DRIVING","route","response","status","setDirections","$","removeClass","addClass","show","Row","Col","md","length","bootstrapURLKeys","key","GOOGLE_MAP_API","language","defaultCenter","defaultZoom","zoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","onChildMouseEnter","maxHeight","overflowY","SetDirection","SetModalShow","GetVaccineSession","is_unmounted","pin_code","district_id","is_valid_pin_code","vaccine_date","states","districts","options","headers","user","token","GetState","OnChangeState","OnChangeDate","OnChangePinCode","OnChangeDistrictCode","OnChangeVaccine","SelectVaccinesWithDate","OnSubmitPinCode","OnSubmitDistrict","GetVaccineSessionChild","React","createRef","googleMapRef","axios","get","config","COWIN_BASE_URL","CUrl","GET_STATES","then","data","console","log","catch","err","error","GET_DISTRICT","replace","code","GetCenters","CALENDAR_BY_PIN_CODE","CALENDAR_BY_DISTRICT","url","current","SetCenters","UpdateMarkers","setToken","event","value","onChange","COVAXIN","COVISHIELD","FormControl","placeholder","type","Container","Tabs","defaultActiveKey","transition","Tab","eventKey","disabled","e","state_id","ref","connect","dispatch","payload","App","path","exact","component","Boolean","window","location","hostname","match","INITIAL_STATE","txn_id","userReducer","action","PositionActionTypes","positionReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","persist_store","persistStore","library","fab","faUser","faCoffee","faAddressBook","faLocationArrow","faSearchLocation","faEdit","faTrash","faClinicMedical","ReactDOM","render","StrictMode","loading","persistor","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.756bb130.chunk.js","sourcesContent":["export const UserActionTypes = {\n    SET_TXN_ID: 'SET_TXN_ID',\n    SET_USER_TOKEN: 'SET_USER_TOKEN',\n}","import React, {Component} from 'react';\nimport {Badge, Button, OverlayTrigger, Table, Tooltip} from \"react-bootstrap\";\nimport moment from \"moment\";\nimport Constant from \"../../constants/Constant.json\";\n\nclass VaccineSessionTable extends Component {\n    state = {\n        centers: [],\n        week: [0 ,1, 2, 3, 4, 5, 6].map(it=> moment().add(it, 'day').format(\"DD-MM-YY\"))\n    }\n\n    OnChangeDate(date){\n        this.setState({\n            week: [0 ,1, 2, 3, 4, 5, 6].map(it=> moment(date, 'YYYY-MM-DD').add(it, 'day').format(\"DD-MM-YY\"))\n        })\n    }\n\n    SetCenters(centers){\n        this.setState({\n            centers: centers\n        })\n    }\n\n    render() {\n        return (\n            <div className={\"bg-light\"}>\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th>Name</th>\n                        {\n                            this.state.week.map(day =>\n                                <th key={\"th-\" + day}>{day}</th>\n                            )\n                        }\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        this.state.centers.map(it =>\n                            <tr key={it.center_id}>\n                                <td>\n                                    <div>\n                                        <div className={\"font-weight-bolder\"}>\n                                            {it.name}\n                                            <sup className={\"small\"}>\n                                                {' '}<Badge variant=\"secondary\">{it.fee_type}</Badge>\n                                            </sup>\n                                        </div>\n                                        <p className={\"text-secondary small m-0\"}>{it.address}, {it.block_name}</p>\n                                        <p className={\"text-secondary small m-0\"}>{it.district_name}, {it.state_name}, {it.pincode}</p>\n                                    </div>\n                                </td>\n                                {\n                                    this.state.week.map(date => {\n                                        let index = it.sessions.findIndex(session => session.date === moment(date, 'DD-MM-YY').format('DD-MM-YYYY'));\n                                        if(index >=0){\n                                            return (\n                                                <td>\n                                                    <div>\n                                                        {/*{it.sessions[index].session_id}*/}\n                                                        <span className={\"\"}>{it.sessions[index].vaccine}</span>\n                                                        <p className={\"small m-0 text-danger\"}>For {it.sessions[index].min_age_limit}+</p>\n                                                        {\n                                                            it.sessions[index].available_capacity ?\n                                                                <OverlayTrigger\n                                                                    overlay={\n                                                                        <Tooltip>\n                                                                            Slots: {it.sessions[index].slots.join(\", \")}\n                                                                        </Tooltip>\n                                                                    }\n                                                                >\n                                                                    <a href={Constant.COWIN_REGISTRATION} target=\"_blank\" rel=\"noreferrer\">\n                                                                        <Button variant={\"success p-1\"} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Tooltip on top\">\n                                                                            Book <sup><Badge variant={\"primary\"}>{it.sessions[index].available_capacity}</Badge></sup>\n                                                                        </Button>\n                                                                    </a>\n                                                                </OverlayTrigger> : <Button variant={\"danger p-0\"}>Booked</Button>\n                                                        }\n                                                    </div>\n                                                </td>\n                                            );\n                                        }else{\n                                            return (<td />);\n                                        }\n                                    })\n                                }\n                            </tr>\n                        )\n                    }\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default VaccineSessionTable;","import React, {Component} from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport {Badge, Button, Col, Modal, Row} from \"react-bootstrap\";\nimport Constant from \"../../constants/Constant.json\";\nimport $ from 'jquery';\n\nconst MyLocationComponent = () => <div>\n    <div className=\"bg-primary\" style={{height:18, width:18, borderRadius:18, border:\"2px solid #fff\"}}>\n    </div>\n</div>;\n\nfunction TrackModal(props) {\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Set Tracking Notification\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <p>\n                    Coming soon\n                </p>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nclass GoogleMapComponent extends Component {\n\n    state = {\n        my_position: {lat: 12.97, lng: 77.59},\n        map_center: {lat: 12.97, lng: 77.59},\n        map_zoom: 10,\n        selected_center: {},\n        maps_data: {},\n        markers: [],\n        modalShow: false,\n    }\n\n    constructor(props) {\n        super(props);\n        this.OnMouseHoverOnHospital = this.OnMouseHoverOnHospital.bind(this);\n        this.OnClickCenterBox = this.OnClickCenterBox.bind(this);\n    }\n\n    UpdateMarkers(centers) {\n        this.setState({\n            markers: centers,\n        });\n\n        this.DrawMarkersOnMap();\n    }\n\n\n    componentDidMount() {\n        navigator.geolocation.getCurrentPosition((position) => {\n            this.setState({\n                my_position: { lat:position.coords.latitude, lng: position.coords.longitude},\n                map_center: { lat:position.coords.latitude, lng: position.coords.longitude},\n            })\n        });\n    }\n\n    OnMouseHoverOnHospital(hoverKey, childProps){\n        if(! (childProps.center && childProps.center.name)) return;\n        this.setState({selected_center: childProps.center})\n        // this.SetDirection();\n    }\n\n    HandleApiLoaded = (map, maps) => {\n        this.setState({\n            maps_data: {\n                map: map,\n                maps: maps\n            }\n        })\n    }\n\n    DrawMarkersOnMap(){\n        this.state.markers.forEach(it => {\n            let map = this.state.maps_data.map;\n            let marker = new this.state.maps_data.maps.Marker({\n                position: { lat: it.lat, lng: it.long},\n                // animation: maps.Animation.DROP,\n                map,\n                // icon: {\n                //     url: \"https://atlas-content-cdn.pixelsquid.com/stock-images/hospital-3yL2QM6-600.jpg\",\n                //     size: maps.Size(10, 10),\n                // },\n                title: it.name,\n                label: {\n                    text:\"H\",\n                    color: \"white\",\n                    fontWeight: \"bold\",\n                }\n            })\n\n            marker.addListener(\"click\", () => {\n                // this.SetDirection(marker.getPosition());\n            });\n\n            marker.addListener(\"mouseover\", () => {\n                this.SetActiveCenterBox(it.center_id);\n            })\n        })\n    }\n\n    SetDirection(destination) {\n        let directionsService = new this.state.maps_data.maps.DirectionsService();\n        let directionsRenderer = new this.state.maps_data.maps.DirectionsRenderer();\n        directionsRenderer.setMap(this.state.maps_data.map);\n\n        let request = {\n            origin: this.state.my_position,\n            destination: destination,\n            travelMode: this.state.maps_data.maps.TravelMode.DRIVING,\n        };\n\n        directionsService.route(request, function(response, status) {\n            if (status === 'OK') {\n                directionsRenderer.setDirections(response);\n            }\n        });\n    }\n\n    SetActiveCenterBox(center_id) {\n        $('.center-box').removeClass('border-primary');\n        $('#center-'+center_id).addClass('border-primary');\n    }\n\n    OnClickCenterBox(center){\n        this.SetActiveCenterBox(center.center_id);\n        this.setState({\n            map_center: {lat: center.lat, lng: center.long},\n            map_zoom: 8.5,\n        })\n    }\n\n    SetModalShow(show){\n        this.setState({\n            modalShow: show\n        })\n    }\n\n    render() {\n        return (\n            <section>\n                <Row>\n                    <Col md={9} className={\"\"}>\n                        {\n                            (this.state.markers.length > 0) &&\n                            <div style={{height: 600, width: \"100%\"}} className={\"shadow-sm\"}>\n                                <GoogleMapReact\n                                    bootstrapURLKeys={{key: Constant.GOOGLE_MAP_API, language: \"en\"}}\n                                    defaultCenter={{lat: 12.97, lng: 77.59}}\n                                    center={this.state.map_center}\n                                    defaultZoom={10}\n                                    zoom={this.state.map_zoom}\n                                    yesIWantToUseGoogleMapApiInternals={true}\n                                    onGoogleApiLoaded={({map, maps}) => this.HandleApiLoaded(map, maps)}\n                                    onChildMouseEnter={this.OnMouseHoverOnHospital}\n                                >\n                                    <MyLocationComponent\n                                        lat={this.state.my_position.lat}\n                                        lng={this.state.my_position.lng}\n                                    />\n                                </GoogleMapReact>\n                            </div>\n                        }\n                    </Col>\n                    <Col md={3} style={{maxHeight: 600, overflowY:\"auto\"}}>\n                    {\n                        this.state.markers.map(center =>\n                            <Col className={\"p-0 py-1\"} key={\"center-\" + center.center_id}>\n                                <div className={\"p-1 shadow rounded border center-box\"} id={\"center-\" + center.center_id} onClick={() => { this.OnClickCenterBox(center) }}>\n                                    <b>{center.name}{' '}\n                                        <sup>\n                                            {\n                                                center.sessions[0].available_capacity? <Badge variant={\"primary\"}>{center.sessions[0].available_capacity}</Badge>:\n                                                    <Badge variant={\"danger\"}>Booked</Badge>\n                                            }\n                                        </sup>\n                                    </b>\n                                    <p className={\"text-secondary small m-0\"}>{center.address}, {center.block_name}</p>\n                                    <p className={\"text-secondary small m-0\"}>{center.district_name}, {center.state_name}, {center.pincode}</p>\n\n                                    <div className={\"text-primary btn px-0\"} onClick={() => {this.SetDirection({lat: center.lat, lng: center.long})}}>Show direction on map</div>\n                                    {\n                                        center.sessions.map(session =>\n                                            <div className={\"font-weight-bolder\"}>\n                                                <span className={\"small font-weight-bold\"}>{session.date} [{session.vaccine}] {' '} </span>\n                                                {\n                                                    session.available_capacity?\n                                                        <a href={Constant.COWIN_REGISTRATION} target=\"_blank\" rel=\"noreferrer\">\n                                                            <Badge variant={\"primary\"} className={\"btn\"}>Book</Badge>\n                                                        </a>: <Badge variant={\"danger\"}>Booked</Badge>\n                                                }\n                                            </div>\n                                        )\n                                    }\n                                    <Badge variant={\"primary\"} className={\"btn p-1 m-1\"} onClick={() => {this.SetModalShow(true)}}> Set Tracking</Badge>\n                                </div>\n                            </Col>\n                        )\n                    }\n                    </Col>\n                </Row>\n\n                <TrackModal\n                    show={this.state.modalShow}\n                    onHide={() => this.SetModalShow(false)}\n                />\n            </section>\n        );\n    }\n}\n\nexport default GoogleMapComponent;","import React, {Component} from 'react';\nimport {Button, Container, FormControl, Tab, Tabs} from \"react-bootstrap\";\nimport CUrl from \"../../constants/CowinUrl.json\";\nimport axios from \"axios\";\nimport config from \"../../config.json\";\nimport vaccine from \"../../constants/Vaccine.json\";\nimport moment from \"moment\";\nimport {connect} from \"react-redux\";\nimport {setToken} from \"../../../../redux/user/user.actions\";\nimport VaccineSessionTable from \"./VaccineSessionTable\";\nimport GoogleMapComponent from \"../googlemap/GoogleMapComponent\";\n\nclass GetVaccineSession extends Component {\n    state = {\n        is_unmounted: false,\n        pin_code: \"\",\n        district_id:\"1\",\n        is_valid_pin_code: false,\n        vaccine: \"\",\n        vaccine_date: moment().format(\"YYYY-MM-DD\"),\n        states: [],\n        districts: [],\n        centers: []\n    }\n\n    options = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': \"Bearer \" + this.props.user.token\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.GetState = this.GetState.bind(this);\n        this.OnChangeState = this.OnChangeState.bind(this);\n        this.OnChangeDate = this.OnChangeDate.bind(this);\n        this.OnChangePinCode = this.OnChangePinCode.bind(this);\n        this.OnChangeDistrictCode = this.OnChangeDistrictCode.bind(this);\n        this.OnChangeVaccine = this.OnChangeVaccine.bind(this);\n\n        this.SelectVaccinesWithDate = this.SelectVaccinesWithDate.bind(this);\n        this.OnSubmitPinCode = this.OnSubmitPinCode.bind(this);\n        this.OnSubmitDistrict = this.OnSubmitDistrict.bind(this);\n\n        this.GetVaccineSessionChild = React.createRef();\n        this.googleMapRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // initial load\n        this.GetState();\n        this.OnChangeState(1)\n    }\n\n    componentWillUnmount(){\n        this.setState({\n            is_unmounted: true\n        })\n    }\n\n    GetState(){\n        axios.get(config.COWIN_BASE_URL + CUrl.GET_STATES, this.options).then( response => {\n            if(response.status === 200 && response.data.states.length > 0) {\n                this.setState({\n                    states: response.data.states\n                })\n            }else{\n                console.log(response);\n            }\n        }).catch( err => console.error(err));\n    }\n\n    OnChangeState(state){\n        axios.get(config.COWIN_BASE_URL + CUrl.GET_DISTRICT.replace(\"<DISTRICT>\", state), this.options).then( response => {\n            if(response.status === 200 && response.data.districts.length > 0) {\n                this.setState({\n                    districts: response.data.districts\n                })\n            }else{\n                console.error(response);\n            }\n        }).catch( err => console.error(err));\n    }\n\n    OnChangeDistrictCode(code){\n        this.setState({\n            district_id: code\n        })\n    }\n\n    OnSubmitPinCode(){\n        if(this.state.pin_code.length !==6) return;\n        let date = moment(this.state.vaccine_date).format(\"DD-MM-YYYY\");\n        this.GetCenters(config.COWIN_BASE_URL + CUrl.CALENDAR_BY_PIN_CODE.replace(\"<PINCODE>\", this.state.pin_code).replace(\"<DATE>\", date).replace(\"<VACCINE>\", this.state.vaccine));\n    }\n\n    OnSubmitDistrict(){\n        if(this.state.district_id.length <= 0) return;\n        let date = moment(this.state.vaccine_date).format(\"DD-MM-YYYY\");\n        this.GetCenters(config.COWIN_BASE_URL + CUrl.CALENDAR_BY_DISTRICT.replace(\"<DISTRICT_ID>\", this.state.district_id).replace(\"<DATE>\", date).replace(\"<VACCINE>\", this.state.vaccine));\n    }\n\n    GetCenters(url){\n        axios.get(url, this.options)\n            .then( response => {\n                if(response.status === 200 && response.data.centers) {\n                    this.setState({\n                        centers: response.data.centers\n                    })\n                    this.GetVaccineSessionChild.current.SetCenters(this.state.centers);\n                    this.googleMapRef.current.UpdateMarkers(this.state.centers);\n                }\n            }).catch( err => {\n            if(err.response && err.response.status === 401){\n                this.props.setToken(null);\n            }\n            console.error(err);\n        });\n    }\n\n    OnChangeVaccine(event){\n        this.setState({\n            vaccine: event.target.value\n        })\n    }\n\n    OnChangeDate(event){\n        this.setState({\n            vaccine_date: event.target.value\n        })\n        this.GetVaccineSessionChild.current.OnChangeDate(event.target.value);\n    }\n\n    OnChangePinCode(event){\n        this.setState({\n            pin_code: event.target.value,\n            is_valid_pin_code: event.target.value.length === 6\n        })\n    }\n\n    SelectVaccinesWithDate() {\n        return (\n            <div>\n                <select className={\"form-control no-input-shadow mt-2\"} value={this.state.vaccine} onChange={this.OnChangeVaccine}>\n                    <option value=\"\">All Vaccine</option>\n                    <option value={vaccine.COVAXIN}>{vaccine.COVAXIN}</option>\n                    <option value={vaccine.COVISHIELD}>{vaccine.COVISHIELD}</option>\n                </select>\n                <FormControl className={\"no-input-shadow mt-2\"} placeholder={\"Enter start date\"} type={\"date\"} value={this.state.vaccine_date} onChange={this.OnChangeDate}/>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Container className={\"position-relative\"}>\n                <h5>Search Vaccine sessions with</h5>\n                <Tabs defaultActiveKey=\"home\" transition={false} id=\"noanim-tab-example\">\n                    <Tab eventKey=\"home\" title=\"Pin code\">\n                        <div className=\"bg-white p-4 justify-content-center d-flex align-items-center\" style={{height:300}}>\n                            <div className={\"col-md-6\"}>\n                                <FormControl className={\"no-input-shadow\"} placeholder={\"Enter pin code\"} value={this.state.pin_code} onChange={this.OnChangePinCode}/>\n                                <this.SelectVaccinesWithDate />\n                                <Button variant={\"primary\"} className={\"form-control mt-4\"} onClick={this.OnSubmitPinCode} disabled={!this.state.is_valid_pin_code}> Find vaccine slots</Button>\n                            </div>\n                        </div>\n                    </Tab>\n                    <Tab eventKey=\"profile\" title=\"District\">\n                        <div className=\"bg-white p-4 justify-content-center d-flex align-items-center\" style={{height:300}}>\n                            <div className=\"col-md-6\" >\n                                <select className={\"form-control no-input-shadow\"} placeholder={\"Select state\"} onChange={e => {this.OnChangeState(e.target.value)}}>\n                                    {\n                                        this.state.states.map(it => <option key={it.state_id} value={it.state_id}>{it.state_name}</option>)\n                                    }\n                                </select>\n                                <select className={\"form-control no-input-shadow mt-2\"} placeholder={\"Select district\"} value={this.state.district_id} onChange={ e => {this.OnChangeDistrictCode(e.target.value)}}>\n                                    {\n                                        this.state.districts.map(it => <option key={it.district_id} value={it.district_id}>{it.district_name}</option>)\n                                    }\n                                </select>\n                                <this.SelectVaccinesWithDate />\n                                <Button variant={\"primary\"} className={\"form-control mt-4\"} onClick={this.OnSubmitDistrict}> Find vaccine slots</Button>\n                            </div>\n                        </div>\n                    </Tab>\n                    {/*<Tab eventKey=\"near_me\" title=\"Nearby Me\">*/}\n                        {/*<div className=\"bg-white p-4 justify-content-center d-flex align-items-center\" style={{height:300}}>*/}\n                        {/*    <div className=\"col-md-6\" >*/}\n                        {/*    </div>*/}\n                        {/*</div>*/}\n                    {/*</Tab>*/}\n                </Tabs>\n                {\n                    // this.props.user.token? \"\": <Redirect to={AppUrl.REGISTER_OTP} exact={true} />\n                }\n                <GoogleMapComponent ref={this.googleMapRef} />\n                <VaccineSessionTable ref={this.GetVaccineSessionChild} />\n                <div style={{height:400}}></div>\n            </Container>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ user }) => (\n    {\n        user: user\n    }\n)\n\nconst mapDispatchToProps = dispatch => ({\n    setToken: token => dispatch(setToken(token))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (GetVaccineSession);\n","import { UserActionTypes } from \"./user.types\";\n\nexport const setTxnId = txnId => (\n    {\n        type: UserActionTypes.SET_TXN_ID,\n        payload:txnId\n    }\n)\n\nexport const setToken = token => (\n    {\n        type: UserActionTypes.SET_USER_TOKEN,\n        payload:token\n    }\n)\n\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\n\nimport './App.css';\n\nimport AppUrl from \"../../constants/AppUrl.json\";\nimport GetVaccineSession from \"../vaccinesessions/GetVaccineSession\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Switch>\n                        {/*<Redirect from={\"/\"} to={AppUrl.GET_VACCINATION_SESSION} exact={true} />*/}\n                        {/*<Route path={AppUrl.REGISTER_OTP} exact={true} component={RegisterOtp}/>*/}\n                        <Route path={\"\"} exact={true} component={GetVaccineSession} />\n                        {/*<Redirect to={AppUrl.GET_VACCINATION_SESSION} from={\"*\"}/>*/}\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {UserActionTypes} from \"./user.types\";\n\nconst INITIAL_STATE = {\n    txn_id:null,\n    token:null,\n}\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case UserActionTypes.SET_TXN_ID:\n            return {\n                ...state,\n                txn_id: action.payload\n            };\n        case UserActionTypes.SET_USER_TOKEN:\n            return {\n                ...state,\n                token: action.payload\n            };\n        default:\n            return state;\n    }\n}\nexport default userReducer;","export const PositionActionTypes = {\n    SET_LATITUDE: \"SET_LATITUDE\",\n    SET_LONGITUDE: \"SET_LONGITUDE\"\n}","import {PositionActionTypes} from \"./position.types\";\n\n\nconst INITIAL_STATE = {\n    latitude: 100,\n    longitude: 157\n}\n\nconst positionReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case PositionActionTypes.SET_LATITUDE:\n            return {\n                ...state,\n                latitude: action.payload\n            };\n        case PositionActionTypes.SET_LONGITUDE:\n            return {\n                ...state,\n                longitude: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport default positionReducer","import { combineReducers } from \"redux\";\nimport userReducer from \"./user/user.reducer\";\nimport positionReducer from \"./position/position.reducer\";\n\nexport default combineReducers(\n    {\n        user: userReducer,\n        position: positionReducer\n    }\n)","import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './root-reducer';\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    // blacklist: ['navigation']\n    // whiteList: ['navigation']\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n// export default () => {\n//     let store = createStore(persistedReducer)\n//     let persist_store = persistStore(store)\n//     return { store, persist_store }\n// }\n\nexport const store = createStore(persistedReducer);\nexport const persist_store = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './main/cowin/components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport {store, persist_store} from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { faUser, faCoffee, faAddressBook, faLocationArrow, faSearchLocation, faEdit, faTrash, faClinicMedical } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n    fab,\n    faUser,\n    faCoffee,\n    faAddressBook,\n    faLocationArrow,\n    faSearchLocation,\n    faEdit,\n    faTrash,\n    faClinicMedical\n)\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <PersistGate loading={null} persistor={persist_store}>\n              <BrowserRouter/>\n              <App/>\n          </PersistGate>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}